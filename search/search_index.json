{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5982\u6211\u6240\u89c1","text":"<p>\u7d20\u65c5\u4e4b\u5f80\uff0c\u5fc3\u4e4b\u6240\u5411\u3002</p>"},{"location":"#_2","title":"\u8fdb\u884c\u4e2d","text":"<ul> <li>\u52a8\u6001\u89c4\u5212</li> <li>PyTorch</li> <li>VecQ</li> </ul> <p>\u4f5c\u8bd7\u4e00\u9996</p> <p>\u4e34\u6c5f\u4ed9 \u2022 \u5143\u591c\u6292\u6000</p> <p>\u6708\u4e0a\u67f3\u68a2\u706f\u6f2b\u6302\uff0c\u6843\u6c5f\u6708\u4e0b\u70df\u6865\u3002\u5f20\u706f\u7ed3\u5f69\u8fce\u5143\u5bb5\uff0c\u800c\u4eca\u597d\u666f\uff0c\u5374\u9022\u53cb\u4eba\u79bb\u3002</p> <p>\u8dc2\u671b\u773c\u6ce2\u7709\u9edb\u5904\uff0c\u5357\u5c71\u6811\u4e0b\u65b0\u82d7\u3002\u76f8\u51ed\u98ce\u597d\u4e0a\u91cd\u9704\uff0c\u6625\u98ce\u5341\u91cc\uff0c\u501f\u628a\u82e6\u6101\u6d88\u3002</p>"},{"location":"#_3","title":"\u66f4\u65b0\u65e5\u5fd7","text":"<ul> <li>2023/05/06 \u65b0\u589emkdocs_pro&amp;slove; \u5b8c\u5584\u7b14\u8bb0\u3002</li> <li>2023/05/05 \u65b0\u589e\u4e00\u4e9b\u76ee\u5f55\uff0c\u4fee\u6539\u4e86\u4e00\u4e9b\u76ee\u5f55\u7ed3\u6784\uff1b\u6dfb\u52a0\u4e86\u65b0\u7684\u7b14\u8bb0\u3002</li> </ul>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/","title":"\u4e3a\u6211\u6240\u5b66","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/","title":"DIR","text":"<ul> <li>\u6570\u636e\u96c6\u4e0e\u6570\u636e\u5904\u7406</li> <li>\u795e\u7ecf\u7f51\u7edc\u642d\u5efa</li> </ul>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","title":"\u6570\u636e\u96c6\u4e0e\u6570\u636e\u5904\u7406","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_2","title":"\u5185\u7f6e\u6570\u636e\u96c6","text":"<p>PyTorch\u4e3a\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u6570\u636e\u96c6\u63d0\u4f9b\u4e86\u4fbf\u643a\u7684\u63a5\u53e3\uff0c\u5e76\u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u96c6\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u5206\u7c7b\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u65b9\u4fbf\u5feb\u6377\u5730\u4f7f\u7528\u6570\u636e\u96c6\u3002\u672c\u8282\u6807\u9898\u94fe\u63a5\u7684\u662ftorchvision\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u96c6\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u4e5f\u5c06\u4f7f\u7528torchvision\u4e2d\u5185\u7f6e\u7684CIFAR10\u6570\u636e\u96c6\u3002 \uff081\uff09\u4f7f\u7528CIFAR10\u6570\u636e\u96c6<pre><code>import torchvision\ntrain_set = torchvision.datasets.CIFAR10(\nroot=\"./dataset\"\uff0c  # \u6570\u636e\u96c6\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u76f8\u5bf9\u8def\u5f84\ntrain=True,         # \u9700\u8981\u7684\u6570\u636e\u662f\u5426\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\ntransform=***,      # \u9700\u8981\u8fdb\u884c\u7684\u6570\u636e\u5904\u7406\ndownload=True)      # \u5982\u679c\u6570\u636e\u96c6\u4e0d\u5b58\u5728\u662f\u5426\u8fdb\u884c\u8054\u7f51\u4e0b\u8f7d\u6570\u636e\u96c6\ntest_set = torchvision.datasets.CIFAR10(root=\"./dataset\", train=False, download=True)\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_3","title":"\u521b\u5efa\u6570\u636e\u96c6","text":"<p>\u5c3d\u7ba1PyTorch\u63d0\u4f9b\u4e86\u76f8\u5f53\u53ef\u89c2\u7684\u5185\u7f6e\u6570\u636e\u96c6\uff0c\u4f46\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u5df2\u6709\u7684\u6570\u636e\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPyTorch\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86Dataset\u5de5\u5177\u7528\u4e8e\u521b\u5efa\u81ea\u5df1\u7684\u6570\u636e\u96c6\u3002</p> <p>\u5efa\u8bae</p> <p>\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7684\u521d\u5b66\u8005\uff0c\u5efa\u8bae\u4f7f\u7528\u5185\u7f6e\u6570\u636e\u96c6\u3002\u4f7f\u7528Dataset\u521b\u5efa\u81ea\u5df1\u7684\u6570\u636e\u96c6\u53ef\u4ee5\u4ee5\u540e\u518d\u5b66\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_4","title":"\u6587\u4ef6\u5939\u5206\u7c7b\u6570\u636e\u96c6","text":"<p>\u6211\u8fd9\u91cc\u6240\u8bf4\u7684\u6587\u4ef6\u5939\u5206\u7c7b\u6570\u636e\u96c6\u662f\u6307\u5728\u5206\u7c7b\u5de5\u4f5c\u4e2d\uff0c\u540c\u4e00\u7c7b\u7684\u6570\u636e\u90fd\u653e\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\uff0c\u540c\u65f6\u8fd9\u4e9b\u6570\u636e\u6240\u5c5e\u7684\u7c7b\u522b\u5c31\u662f\u6587\u4ef6\u5939\u7684\u540d\u5b57\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u79cd\u6570\u636e\u96c6\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a <pre><code>- train\n    - tag_01\n        - data_01_01\n        - data_01_02\n        \u00b7\u00b7\u00b7\n    - tag_02\n        - data_02_01\n        - data_02_02\n        \u00b7\u00b7\u00b7\n- test\n    - tag_01\n        - data_01_01\n        - data_01_02\n        \u00b7\u00b7\u00b7\n    - tag_02\n        - data_02_01\n        - data_02_02\n        \u00b7\u00b7\u00b7\n</code></pre> \u5982\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Dataset\u5de5\u5177\u6765\u6784\u5efa\u8fd9\u79cd\u7b80\u5355\u7684\u6570\u636e\u96c6\u3002 \uff082\uff09dataset\u793a\u4f8b01<pre><code>from torch.utils.data import Dataset\nfrom PIL import Image\nimport os\nclass MyData(Dataset): # \u4e00\u822c\u800c\u8a00\uff0c\u7ee7\u627fDataset\u7c7b\u5e76\u91cd\u5199\u4e24\u4e2a\u65b9\u6cd5\u5373\u53ef\u6784\u5efa\u81ea\u5df1\u7684\u6570\u636e\u96c6\u5566\ndef __init__(self, root_dir, label):\n# \u50a8\u5b58\u8def\u5f84\u4fe1\u606f\nself.root_dir = root_dir\nself.label = label\nself.data_path = os.path.join(root_dir, label)\n# \u50a8\u5b58\u6570\u636e\u4fe1\u606f\nself.img_path = os.listdir(self.data_path)\ndef __getitem__(self, idx):\n# \u83b7\u53d6\u76ee\u6807\u8def\u5f84\nitem_path = self.img_path[idx]\nitem_path = os.path.join(self.data_path, item_path)\n# \u6253\u5f00\u6587\u4ef6\nimg = Image.open(img_path)\nlabel = self.label\nreturn img, label\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_5","title":"\u6807\u7b7e\u6587\u4ef6\u6570\u636e\u96c6","text":"<p>\u6211\u6240\u8bf4\u7684\u6807\u7b7e\u6587\u4ef6\u6570\u636e\u96c6\u662f\u6307\u8fd9\u79cd\u6570\u636e\u96c6\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u90fd\u6709\u4e0e\u4e4b\u4e00\u4e00\u5bf9\u5e94\u7684\u6807\u7b7e\u6587\u4ef6\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u79cd\u6570\u636e\u96c6\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a <pre><code>    - data_01\n        - data_01_01.xxx\n        \u00b7\u00b7\u00b7\n    - lable_01\n        - data_01_01.txt (\u4e5f\u53ef\u80fd\u662f\u5176\u4ed6\u683c\u5f0f)\n</code></pre> \u8fd9\u6837\u7684\u6570\u636e\u96c6\u6784\u5efa\u8d77\u6765\u548c\u4ee3\u7801\uff082\uff09\u4e5f\u6ca1\u591a\u5927\u5dee\u522b\u3002\u533a\u522b\u4e3b\u8981\u4f53\u73b0\u5728\u5bf9\u6807\u7b7e\u7684\u5904\u7406\u4e0a\uff0c\uff082\uff09\u4e2d\u6807\u7b7e\u662f\u5df2\u77e5\u7684\uff0c\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\u800c\uff083\uff09\u4e2d\u9700\u8981\u6839\u636e\u8def\u5f84\u6253\u5f00\u6807\u7b7e\u6587\u4ef6\u83b7\u53d6\u76f8\u5e94\u7684\u6807\u7b7e\u3002 \uff083\uff09dataset\u793a\u4f8b02<pre><code>from torch.utils.data import Dataset\nfrom PIL import Image\nimport os\nclass MyData(Dataset):\ndef __init__(self, data_dir, label_dir):\nself.data_path = data_dir\nself.label_dir = label_dir\nself.img_path = os.listdir(self.data_path)\nself.label_path = os.listdir(self.data_path)\ndef __getitem__(self, idx):\nitem_path = self.img_path[idx]\nitem_path = os.path.join(self.data_path, item_path)\nitem_label_path = self.label_path[idx]\nitem_label_path = os.path.join(self.labelpath, item_label_path)\n# \u83b7\u53d6\u6570\u636e\nimg = Image.open(img_path)\n# \u6839\u636e item_label_path \u83b7\u53d6 label\uff0c\u4e0d\u540c\u4efb\u52a1label\u7684\u7c7b\u578b\u4e0d\u540c\n# label = \u00b7\u00b7\u00b7\nreturn img, label\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_6","title":"\u6570\u636e\u5904\u7406","text":"<p>\u6211\u4eec\u73b0\u5728\u83b7\u53d6\u5230\u4e86\u6570\u636e\uff0c\u6bd4\u5982\u662f\u4e00\u4e9b\u56fe\u7247\uff0c\u8981\u505a\u5206\u7c7b\u4efb\u52a1\uff0c\u8fd9\u4e9b\u56fe\u7247\u53ef\u80fd\u5927\u5c0f\u5c31\u4e0d\u4e00\u6837\uff0c\u683c\u5f0f\u53ef\u80fd\u4e5f\u4e0d\u4e00\u6837\uff0c\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\uff0c\u624d\u80fd\u591f\u66f4\u597d\u7684\u7ed9\u795e\u7ecf\u7f51\u7edc\u4f5c\u4e3a\u8f93\u5165\u3002\u4e0b\u9762\u4e3b\u8981\u4ecb\u7ecdtorchvision\u4e2d\u7684\u51e0\u79cdtransforms\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#totensor","title":"ToTensor","text":"<p>\u8f93\u5165\uff1aPIL Image or ndarray</p> <p>\u8f93\u51fa\uff1atensor</p> <p>\u793a\u4f8b\uff1a \uff084\uff09Totensor<pre><code># \u5148\u6709\u53d8\u91cfimg\u4e3aPIL\u7c7b\u578b\nfrom torchvision import transforms as T\ntotensor = T.ToTensor() # \u5b9a\u4e49\u4e00\u4e2a\u8f6c\u6362\u5668\u5bf9\u8c61\nimg = totensor(img)     # \u53ef\u8c03\u7528\u5bf9\u8c61\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#resize","title":"Resize","text":"<p>Resize the input image to the given size.</p> <p>If the image is torch Tensor, it is expected to have [..., H, W] shape, where ... means an arbitrary number of leading dimensions</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#normalize","title":"Normalize","text":"<p>Normalize a tensor image with mean and standard deviation.</p> <p>This transform does not support PIL Image.</p> <p>Given mean: <code>(mean[1],...,mean[n])</code> and std: <code>(std[1],..,std[n])</code> for <code>n</code> channels, this transform will normalize each channel of the input <code>torch.*Tensor</code> i.e.,</p> <p><code>output[channel] = (input[channel] - mean[channel]) / std[channel]</code></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#compose","title":"Compose","text":"<p>Compose\u4e3b\u8981\u662f\u7528\u6765\u6574\u5408\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u7b80\u5316\u4ee3\u7801\uff0cCompose\u8981\u6c42\u8fd9\u4e00\u7cfb\u5217\u7684\u5904\u7406\u4e2d\uff0c\u524d\u4e00\u4e2a\u5904\u7406\u7684\u8f93\u51fa\u80fd\u591f\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5904\u7406\u7684\u8f93\u5165\u3002 \uff085\uff09\u5b98\u65b9Compose\u793a\u4f8b<pre><code>    Example:\ntransforms.Compose([\ntransforms.CenterCrop(10),\ntransforms.PILToTensor(),\ntransforms.ConvertImageDtype(torch.float),\n])\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#more","title":"MORE","text":"<p>\u66f4\u591a\u7684\u6570\u636e\u5904\u7406\u64cd\u4f5c\u4fe1\u606f\u53ef\u4ee5\u67e5\u770bPyTorch\u5b98\u65b9\u6587\u6863\u6216\u76f4\u63a5\u67e5\u8be2\u6e90\u7801\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_7","title":"\u6570\u636e\u52a0\u8f7d","text":"<p>\u5728PyTorch\u4e2d\u6211\u4eec\u4e00\u822c\u4f7f\u7528DataLoader\u6765\u8fdb\u884c\u6570\u636e\u52a0\u8f7d\u3002DataLoader\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5c06\u6570\u636e\u4ece\u6570\u636e\u96c6\u4e2d\u6309\u4e00\u5b9a\u89c4\u5219\u52a0\u8f7d\u8fdb\u6765\uff0c\u4e0b\u9762\u4f5c\u7b80\u5355\u7684\u6f14\u793a\u3002 \uff086\uff09DataLoader\u7684\u7b80\u5355\u4f7f\u7528<pre><code>    # \u6211\u4eec\u4f7f\u7528\u4ee3\u7801\uff081\uff09\u4e2d\u7684\u6570\u636e\u96c6\nfrom torch.utils.data import DataLoader\ntrain_loader = DataLoader(\ndataset=train_set,   # \u52a0\u8f7d\u7684\u6570\u636e\u96c6\nbatch_size=128,      # \u6279\u91cf\u5927\u5c0f\nshuffle=True,        # \u662f\u5426\u6253\u4e71\u6570\u636e\nnum_works=0,         # \u5de5\u4f5c\u8fdb\u7a0b\u6570\ndrop_last=True       # \u662f\u5426\u820d\u5f03\u6700\u540e\u6570\u91cf\u4e0d\u8db3\u6279\u91cf\u5927\u5c0f\u7684\u90a3\u4e9b\u6570\u636e\n) # \u66f4\u591a\u53c2\u6570\u53c2\u8003\u5b98\u65b9\u6587\u6863\u6216\u6e90\u7801\nfor epoch in range(10):\nfor data in train_loader:\n# some operations for data\n# such as:\n# imgs, labels = data\n# ...\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/","title":"\u8bb0\u5f55\u529b\u6263\u5237\u9898\u6240\u60f3","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/","title":"April 2021","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#01","title":"01 \u7b28\u9636\u4e58","text":"<p>\u3010\u7b28\u9636\u4e58\u3011</p> <ol> <li>\u628a\u6211\u7b28\u6b7b\u4e86\u3002</li> </ol> <p>\u7528VScode\uff0c\u5199c++ \u90fd\u4e0d\u77e5\u9053\u8981\u7528\u540d\u5b57\u7a7a\u95f4std\uff1b</p> <p>using namespace std;</p> <p>\u3010\u7b28\u601d\u8def\u3011 \u4e00\u5982\u65e2\u5f80\u7684switch\u8ba1\u7b97\u5668\u601d\u8def\uff01 \u5728\u8fd0\u7b97\u51cf\u6cd5\u7684\u60c5\u51b5\u4e0b\u8bef\u7528\u4e86\u9012\u5f52\uff01\u5bfc\u81f4\u8fd0\u7b97\u51fa\u9519\uff01</p> <pre><code>\u8f93\u5165\uff1a10\n\u8f93\u51fa\uff1a12\n\u89e3\u91ca\uff1a12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n(\u5982\u679c\u51cf\u6cd5\u7528\u9012\u5f52\uff0c +3 \u5c31\u4f1a\u53d8\u6210 -3 )  </code></pre> <pre><code>class Solution {\npublic:\nint clumsy(int N){\nint flag = 0; //\u6807\u8bc6\u7b26\uff0c\u7528\u6765\u66f4\u6539\u8fd0\u7b97\u7b26\uff0c\u7b2c\u4e00\u6b21\u4e3a\u4e58\u6cd5\u8fd0\u7b97\nint ans = N; //\u8fd4\u56de\u503c\nN--;\nwhile(N){\nswitch(flag % 4){\ncase 0:\nans *= N;\nbreak;\ncase 1:\nans /= N;\nbreak;\ncase 2:\nans += N;\nbreak;\ncase 3:\nif(N &gt;= 3){\nans -= N * (N - 1) / (N - 2);\nN -= 2;\nflag = 1;\n}else if( N == 2){\nans -= 2;\nN = 1;\n}else{\nans--;\n}\nbreak;\ndefault:\nbreak;\n}\nflag++;\nN--;\n}\nreturn ans; }\n};\n</code></pre> <p>\u3010\u8bc4\u8bba\u533a\u7684\u795e\u5947\u601d\u8def\u3011</p> <pre><code>// \u5206\u62104\u7684\u9012\u5f52\u601d\u8def\nclass Solution {\npublic:\nint clumsy(int N) {\nif(N&lt;=2)return N;\nif(N==3)return 6;\nint sum=N*(N-1)/(N-2)+N-3;\nN-=4;\nwhile(N&gt;=4){\nsum+=(-N*(N-1)/(N-2)+N-3);\nN-=4;\n}\nreturn sum-clumsy(N);\n}\n};\n//\u627e\u89c4\u5f8b\nclass Solution {\npublic:\nint clumsy(int N){\nif(N&gt;4)\n{\nswitch(N%4)\n{\ncase 0:return N+1;break;\ncase 1:return N+2;break;\ncase 2:return N+2;break;\ncase 3:return N-1;break;\ndefault:break;\n}\n}\nswitch(N)\n{\ncase 0:return 0;\ncase 1:return 1;\ncase 2:return 2;\ncase 3:return 6;\ncase 4:return 7;\ndefault:break;\n}\nreturn 0;\n}\n};\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#02","title":"02 \u76f4\u65b9\u56fe\u7684\u6c34\u91cf","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#03","title":"03 \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#04","title":"04 \u68ee\u6797\u4e2d\u7684\u5154\u5b50","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#05","title":"05 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#06-ii","title":"06 \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 II","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u7c7b\u4f3c\u53ea\u7559\u4e00\u4e2a\u91cd\u590d\u9879\u7684\u601d\u8def\uff0c\u6dfb\u52a0\u4e86\u7b2c\u4e8c\u4e2a\u5224\u65ad\u6761\u4ef6\uff0c\u8ba9\u5176\u80fd\u4fdd\u6709\u4e24\u4e2a\u91cd\u590d\u7684\u5143\u7d20\u3002</li> <li>\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e2\u65f6\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\u3002</li> <li>\u56e0\u4e3a\u8981\u5904\u7406 +2 \u7684\u60c5\u51b5\uff0c\u6709\u6570\u636e\u8d8a\u754c\u7684\u60c5\u51b5\u53d1\u751f\uff0c\u5e72\u8106\u5728\u540e\u9762\u52a0\u4e86\u4e24\u4e2a\u5143\u7d20\uff0c\u540e\u9762\u5728\u628a\u5b83\u5220\u6389\u3002</li> </ol> <p>\u3010\u4e0d\u8db3\u3011</p> <ol> <li> <p>\u6ca1\u6709\u5145\u5206\u5229\u7528\u6570\u7ec4\u9012\u589e\u8fd9\u4e2a\u6761\u4ef6\uff0c\u53ea\u5728\u63d2\u5165\u6570\u636e\u7684\u65f6\u5019\u7528\u4e86\u4e00\u4e0b\u3002</p> </li> <li> <p>\u4ee3\u7801\u5f88\u7b28\u62d9\uff1a</p> </li> </ol> <p>\u6267\u884c\u7528\u65f6\uff1a8 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8657.79%\u7684\u7528\u6237</p> <p>\u5185\u5b58\u6d88\u8017\uff1a10.7 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8638.78%\u7684\u7528\u6237</p> <p>\u3010\u4ee3\u7801\u3011</p> <pre><code>class Solution {\npublic:\nint removeDuplicates(vector&lt;int&gt;&amp; nums) {\nif(nums.size() &lt; 3)\nreturn nums.size();\nint i = 0, j = 0;\nnums.push_back(nums[0]-1);\nnums.push_back(nums[0]-1);\nfor (; i &lt; nums.size() - 2; ++i ){\nif(nums[i] != nums[i + 1])\nnums[j++] = nums[i];\nelse if(nums[i + 1] != nums[i + 2])\nnums[j++] = nums[i];\n}\ni += 2;\nwhile(i - j){\nnums.pop_back();\nj++;\n}\nreturn nums.size();\n}\n};\n</code></pre> <p>\u3010\u8bc4\u8bba\u533a\u3011\u8bb8\u540c\u5b66\u4e0d\u4f1a\u8ba4\u8f93\u7684</p> <ol> <li> <p>\u5904\u7406\u6570\u7ec4\u8d8a\u754c\u95ee\u9898\u4e0a\u91c7\u7528\u76f8\u53cd\u7684\u601d\u8def\uff0c\u65e2\u7136\u6570\u636e\u8d8a\u754c\u7684\u60c5\u51b5\u5fc5\u7136\u662f\u5728\u6570\u7ec4\u957f\u5ea6\u5927\u4e8e2\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u53d1\u751f\uff0c\u6545\u4e0b\u6807index - 2 &gt; 0  \u4e00\u5b9a\u6210\u7acb\u3002</p> </li> <li> <p>\u601d\u8def\u4e5f\u4e0d\u592a\u4e00\u6837\uff0cTa\u7684\u601d\u8def(\u6211\u6240\u7406\u89e3\u7684)\uff0c\u5e94\u8be5\u662f\uff0cindex\u4f5c\u4e3a\u76ee\u6807\u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u4e00\u5b9a\u4f1a\u6709\uff0c</p> </li> </ol> <p>nums[index] != nums[index - 2] </p> <p>\u56e0\u6b64\u53ea\u9700\u627e\u5230\u539f\u6570\u7ec4\u4e2d\u7b26\u5408 nums[i] != nums[index - 2] \u7684 nums[i] \u5e76\u5c06\u5176\u8d4b\u503c\u7ed9nums[index] \u5373\u53ef\uff0c\u540c\u65f6index\u9700\u8981\u81ea\u52a8\u52a0\u4e00\uff0c\u5373\u80fd\u591f\u5bfb\u627e\u4e0b\u4e00\u5143\u7d20\u3002</p> <p>\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c</p> <p>nums  = [1,2,2,2,3,3];</p> <p>index = 2, i = 2;</p> <p>\u663e\u7136\uff0c</p> <p>nums[index] = 2, nums[index - 2] = 0, nums[i] = 2,</p> <p>\u6545 line a \u8bed\u53e5\u4f1a\u88ab\u6267\u884c\uff0c\u6267\u884c\u540e\u6709\uff0c</p> <p>index = 3, nums[index] = 2, nums[index - 2] = 2;</p> <p>\u5faa\u73af\u4e00\u6b21\u540e(\u5373\u4e0a\u8ff0line a\u6267\u884c\u540e i \u4f1a\u52a01)\uff0c</p> <p>\u200b    i = 3, nums[i] = 2,</p> <p>\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u800c\u540e,</p> <pre><code>    i = 4, nums[i] = 3,\n</code></pre> <p>\u6ee1\u8db3\u6761\u4ef6\uff0cline a\u88ab\u6267\u884c\uff0c</p> <p>index = 4,  nums[index] = 3, nums [index - 2] = 2, nums  = [1,2,2,3,3,3]</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5143\u7d202\u53ea\u4fdd\u7559\u4e86\u4e24\u9879\uff0c\u540c\u6837\u7684\uff0c\u540e\u7eed\u7684\u5143\u7d203\u4e5f\u4f1a\u53ea\u4fdd\u7559\u4e24\u9879\uff08index\u53ea\u4f1a\u8bb0\u5230\u7b2c\u4e8c\u4e2a\u5143\u7d203\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u540eindex\u7684\u503c\u4f4d\u4e3a5\u800c\u4e0d\u662f6\uff09\u3002</p> <ol> <li>\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e2\u7684\u6570\u7ec4\u53ef\u4ee5\u4e0d\u4f5c\u5904\u7406\u3002</li> </ol> <pre><code>// \u4ee3\u7801\u53c2\u8003\u540e\u7565\u6709\u4fee\u6539\uff0c\u8bc4\u8bba\u8005\u4f3c\u4e4e\u662f\u7528\u7684C#\u4ee3\u7801\nclass Solution {\npublic:\nint removeDuplicates(vector&lt;int&gt;&amp; nums){\nif(nums.size() &lt;= 2) return nums.size();\nint index = 2;\nfor(int i = 2; i &lt; nums.size(); i++){\nif(nums[i] != nums[index-2])\nnums[index++] = nums[i];// line a\n}\nreturn index;\n}\n};\n</code></pre> <p>\u3010\u5176\u4ed6\u53c2\u8003\u3011</p> <ol> <li>\u5b9d\u5b9d\u53ef\u4e56\u4e86</li> <li>\u5c06\u524d\u9762\u7684\u957f\u5ea6\u5224\u65ad\u53d6\u6d88\u7684\u65b9\u6cd5: Passion</li> <li>\u5b98\u65b9\u9898\u89e3</li> </ol> <p>\u3010\u603b\u7ed3\u3011</p> <ol> <li>\u5728\u6bd4\u8f83\u5f53\u4e2d\uff0c\u91c7\u7528+1\uff0c+2\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u7ec4\u603b\u8981\u8003\u8651\u6570\u7ec4\u8d8a\u754c\u95ee\u9898\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u7528\u51cf\u6cd5\u7684\u65b9\u5f0f\u8bbf\u95ee\u6bd4\u8f83\u3002</li> </ol>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#07-ii","title":"07 \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 II","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#08","title":"08 \u5bfb\u627e\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u503c","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u6211\u80fd\u4e0d\u80fd\u76f4\u63a5\u627e\u6700\u5c0f\u503c\u554a\uff0cfind\u65b9\u6cd5QAQ\u3002</li> <li>\u4ece\u4e24\u8fb9\u903c\u8fd1\uff0c\u627e\u5230\u6700\u5c0f\u503c</li> </ol> <p>\u3010\u4ee3\u7801\u3011\uff08\u6709\u8bef\uff09</p> <pre><code>class Solution {\npublic:\nint findMin(vector&lt;int&gt;&amp; nums) {\nif(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\nreturn nums[0];\nint len = nums.size();\nint index = 0;\nwhile(nums[index] &gt; nums[len - index]) //from sides to center to find the minimum\nindex++;\n// two situations\nreturn (nums[index] &lt; nums[len - index + 1]) ? nums[index] : nums[len - index + 1]; }\n};  </code></pre> <p>\u3010\u9519\u8bef\u3011</p> <p>\u6267\u884c\u51fa\u9519</p> <p>\u6700\u540e\u6267\u884c\u7684\u8f93\u5165\uff1a[2,1]</p> <p>\u3010\u5206\u6790\u539f\u56e0\u3011</p> <ol> <li>\u6570\u7ec4\u4e0b\u6807\u95ee\u9898\uff0c\u8d8a\u754c\u4e86(\u53c8\u662f\u8d8a\u754c)\uff0c\u5e94\u8be5\u662flen\u5fd8\u8bb0\u51cf1\u4e86\u3002</li> </ol> <p>\u3010\u6539\u52a8\u3011</p> <pre><code>class Solution {\npublic:\nint findMin(vector&lt;int&gt;&amp; nums) {\nif(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\nreturn nums[0];\nint len = nums.size() - 1;\nint index = 0;\nwhile(nums[index] &gt; nums[len - index]) //from sides to center to find the minimum\nindex++;\n// two situations\nreturn (nums[index] &lt; nums[len - index + 1]) ? nums[index] : nums[len - index + 1]; }\n};  // or \nclass Solution {\npublic:\nint findMin(vector&lt;int&gt;&amp; nums) {\nif(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\nreturn nums[0];\nint len = nums.size();\nint index = 0;\nwhile(nums[index] &gt; nums[len - index - 1]) //from sides to center to find the minimum\nindex++;\n// two situations\nreturn (nums[index] &lt; nums[len - index]) ? nums[index] : nums[len - index]; }\n};  </code></pre> <p>\u3010\u8bc4\u4ef7\u3011</p> <p>150 / 150 \u4e2a\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b</p> <p>\u72b6\u6001\uff1a\u901a\u8fc7</p> <p>\u6267\u884c\u7528\u65f6: 0 ms </p> <p>\u5185\u5b58\u6d88\u8017: 9.8 MB </p> <p>\u5b98\u65b9\u9898\u89e3</p> <p>\u4e8c\u5206\u641c\u7d22</p> <p>\u6211\u4eec\u8003\u8651\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 x\uff1a\u5728\u6700\u5c0f\u503c\u53f3\u4fa7\u7684\u5143\u7d20\uff08\u4e0d\u5305\u62ec\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u672c\u8eab\uff09\uff0c\u5b83\u4eec\u7684\u503c\u4e00\u5b9a\u90fd\u4e25\u683c\u5c0f\u4e8e x\uff1b\u800c\u5728\u6700\u5c0f\u503c\u5de6\u4fa7\u7684\u5143\u7d20\uff0c\u5b83\u4eec\u7684\u503c\u4e00\u5b9a\u90fd\u4e25\u683c\u5927\u4e8e x\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e00\u6761\u6027\u8d28\uff0c\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\u627e\u51fa\u6700\u5c0f\u503c\u3002</p> <pre><code>class Solution {\npublic:\nint findMin(vector&lt;int&gt;&amp; nums) {\nint low = 0;\nint high = nums.size() - 1;\nwhile (low &lt; high) {\nint pivot = low + (high - low) / 2;\nif (nums[pivot] &lt; nums[high]) {\nhigh = pivot;\n}\nelse {\nlow = pivot + 1;\n}\n}\nreturn nums[low];\n}\n};\n\u4f5c\u8005\uff1aLeetCode-Solution\n\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/xun-zhao-xuan-zhuan-pai-xu-shu-zu-zhong-5irwp/\n\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n</code></pre> <p>\u3010\u603b\u7ed3\u3011</p> <p>\u5173\u4e8e\u6709\u5e8f\u641c\u7d22\u67e5\u627e\u7684\u95ee\u9898\uff0c\u591a\u591a\u8003\u8651\u5229\u7528\u4e8c\u5206\u6cd5\u3002\u4ece\u4e0d\u540c\u89d2\u5ea6\u5bf9\u4e8c\u5206\u6cd5\u8fdb\u884c\u4f7f\u7528\uff0c\u53ef\u4ee5\u52a0\u6df1\u5bf9\u4e8c\u5206\u6cd5\u7684\u7406\u89e3\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#09-ii","title":"09 \u5bfb\u627e\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u503c II","text":"<p>\u3010\u601d\u8def\u3011</p> <ol> <li> <p>\u548c\u6628\u5929\u7684\u9898\u7c7b\u4f3c\uff0c\u90a3\u4e48\u5e94\u8be5\u53ea\u9700\u8981\u5bf9\u4e8c\u5206\u6cd5\u7a0d\u4f5c\u4fee\u6539\u5c31\u884c\u4e86\u3002</p> </li> <li> <p>\u521a\u5f00\u59cb\u60f3\u7684\u591a\u4e2a\u6761\u4ef6\u5c31\u884c\u4e86\u3002</p> </li> </ol> <pre><code>class Solution {\npublic:\nint findMin(vector&lt;int&gt;&amp; nums) {\nint low = 0, high = nums.size() - 1;\nint mid = 0;\nwhile(low &lt; high) {\nmid = (low + high) / 2;\nif(nums[mid] &lt; nums[high])\nhigh = mid;\nelse if(nums[mid] &gt; nums[high])\nlow = mid + 1;\nelse\nhigh--; //\u65b0\u52a0\u7684\u8bed\u53e5\n}\nreturn nums[low];\n}\n};\n//\u6267\u884c\u7528\u65f6\uff1a0 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e86100.00%\u7684\u7528\u6237\n//\u5185\u5b58\u6d88\u8017\uff1a11.9 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8678.69%\u7684\u7528\u6237\n</code></pre> <ol> <li>\u540e\u6765\u60f3\u7740\u80fd\u4e0d\u80fd\u9012\u5f52\uff0c\u7ed3\u679c\u7279\u522b\u6162\u3002\u3002\u3002</li> </ol> <pre><code>class Solution {\npublic:\nint findMin(vector&lt;int&gt;&amp; nums) {\nint low = 0, high = nums.size() - 1;\nint mid = 0;\nwhile(low &lt; high) {\nmid = (low + high) / 2;\nif(nums[mid] &lt; nums[high])\nhigh = mid;\nelse if(nums[mid] &gt; nums[high])\nlow = mid + 1;\nelse{\nif(low == mid)\nreturn nums[low];\nvector&lt;int&gt; pre(nums.begin() + low, nums.begin() + mid);\nvector&lt;int&gt; last(nums.begin() + mid, nums.begin() + high + 1);\nreturn (findMin(pre) &lt; findMin(last)) ? findMin(pre) : findMin(last);\n}    }\nreturn nums[low];\n}\n};\n//\u6267\u884c\u7528\u65f6\uff1a96 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8622.48%\u7684\u7528\u6237\n//\u5185\u5b58\u6d88\u8017\uff1a37.8 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e865.12%\u7684\u7528\u6237\n</code></pre> <p>\u5b98\u65b9\u9898\u89e3\u4e0e\u601d\u8def\u4e00\u6700\u5f00\u59cb\u7684\u60f3\u6cd5\u4e00\u81f4\u3002</p> <p>\u3010\u603b\u7ed3\u3011</p> <p>\u200b   \u6709\u65f6\u6ca1\u5fc5\u8981\u82db\u6c42\u7279\u522b\u7684\u7b97\u6cd5\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#12","title":"12 \u6700\u5927\u6570","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u57fa\u6570\u6392\u5e8f\uff1f</li> <li>\u592a\u96be\u4e86\uff0c\u6ca1\u505a\u51fa\u6765\uff0c\u82b1\u4e86\u65f6\u95f4\u90fd\u6ca1\u505a\u51fa\u6765</li> </ol> <p>\u5b98\u65b9\u9898\u89e3</p> <p>\u5bab\u6c34\u4e09\u53f6\u306e\u76f8\u4fe1\u79d1\u5b66\u7cfb\u5217</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#13","title":"13  \u4e8c\u53c9\u641c\u7d22\u6811\u8282\u70b9\u6700\u5c0f\u8ddd\u79bb","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u53ea\u9700\u6bd4\u8f83root-&gt;right - root \u548c root - root-&gt;left\u7684\u503c\u7684\u5927\u5c0f\u5373\u53ef\u3002</li> <li>\u9700\u8981\u4f7f\u7528\u9012\u5f52\u3002</li> <li>\u8981\u8003\u8651\u6ca1\u6709\u5de6\u53f3\u5b50\u6811\u6216\u53ea\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u60c5\u51b5\u3002</li> </ol> <pre><code>class Solution {\npublic:\nint minDiffInBST(TreeNode* root) {\nif(root-&gt;left){ //\u6709\u5de6\u5b50\u6811\nif(root-&gt;right){ // \u5de6\u53f3\u5b50\u6811\u90fd\u6709\nint min = ((root-&gt;val - root-&gt;left-&gt;val) &lt; (root-&gt;right-&gt;val - root-&gt;val)) ?  (root-&gt;val - root-&gt;left-&gt;val) : (root-&gt;right-&gt;val - root-&gt;val);\nmin = (min &lt; minDiffInBST(root-&gt;left)) ? min : minDiffInBST(root-&gt;left);\nreturn (min &lt; minDiffInBST(root-&gt;right)) ? min : minDiffInBST(root-&gt;right);\n}\n//\u53ea\u6709\u5de6\u5b50\u6811\nreturn ((root-&gt;val - root-&gt;left-&gt;val) &lt; minDiffInBST(root-&gt;left)) ? (root-&gt;val - root-&gt;left-&gt;val) : minDiffInBST(root-&gt;left);\n}else if(root-&gt;right) // \u53ea\u6709\u53f3\u5b50\u6811\nreturn ((root-&gt;right-&gt;val - root-&gt;val) &lt; minDiffInBST(root-&gt;right)) ? (root-&gt;right-&gt;val - root-&gt;val) : minDiffInBST(root-&gt;right);\nelse //\u53f6\u5b50\u8282\u70b9\uff0c\u7531\u9898\u53ef\u77e5\uff0c\u6811\u4e0d\u4f1a\u662f\u5355\u4e2a\u7684\u53f6\u5b50\u7ed3\u70b9\nreturn root-&gt;val;\n}\n};\n/*\n\u6267\u884c\u7ed3\u679c\uff1a\u89e3\u7b54\u9519\u8bef\n\u663e\u793a\u8be6\u60c5\n\u8f93\u5165\uff1a\n[1,0,48,null,null,12,49]\n\u8f93\u51fa\uff1a\n0\n\u9884\u671f\u7ed3\u679c\uff1a\n1\n*/\n</code></pre> <p>\u3010\u89e3\u7b54\u51fa\u9519\u3011</p> <ol> <li>\u53f6\u5b50\u7ed3\u70b9\u7684\u89e3\u51b3\u529e\u6cd5\u51fa\u73b0\u9519\u8bef\u3002</li> </ol> <p>\u3010\u89e3\u51b3\u529e\u6cd5\u3011</p> <ol> <li> <p>\u53f6\u5b50\u8282\u70b9\u60c5\u51b5\u4e0b\u5e94\u8fd4\u8fd8\u6700\u5927\u503c\uff08100000\uff09\u3002</p> </li> <li> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u6811\u4e2d\u8282\u70b9\u6570\u76ee\u5728\u8303\u56f4 <code>[2, 100]</code> \u5185</li> <li><code>0 &lt;= Node.val &lt;= 100000</code></li> </ul> </li> </ol> <pre><code>class Solution {\npublic:\nint minDiffInBST(TreeNode* root) {\nif(root-&gt;left){ //\u6709\u5de6\u5b50\u6811\nif(root-&gt;right){ // \u5de6\u53f3\u5b50\u6811\u90fd\u6709\nint min = ((root-&gt;val - root-&gt;left-&gt;val) &lt; (root-&gt;right-&gt;val - root-&gt;val)) ?  (root-&gt;val - root-&gt;left-&gt;val) : (root-&gt;right-&gt;val - root-&gt;val);\nmin = (min &lt; minDiffInBST(root-&gt;left)) ? min : minDiffInBST(root-&gt;left);\nreturn (min &lt; minDiffInBST(root-&gt;right)) ? min : minDiffInBST(root-&gt;right);\n}\n//\u53ea\u6709\u5de6\u5b50\u6811\nreturn ((root-&gt;val - root-&gt;left-&gt;val) &lt; minDiffInBST(root-&gt;left)) ? (root-&gt;val - root-&gt;left-&gt;val) : minDiffInBST(root-&gt;left);\n}else if(root-&gt;right) // \u53ea\u6709\u53f3\u5b50\u6811\nreturn ((root-&gt;right-&gt;val - root-&gt;val) &lt; minDiffInBST(root-&gt;right)) ? (root-&gt;right-&gt;val - root-&gt;val) : minDiffInBST(root-&gt;right);\nelse //\u53f6\u5b50\u8282\u70b9\uff0c\u7531\u9898\u53ef\u77e5\uff0c\u6811\u4e0d\u4f1a\u662f\u5355\u4e2a\u7684\u53f6\u5b50\u7ed3\u70b9\nreturn 100000;\n}\n};\n/*\n\u6267\u884c\u7ed3\u679c\uff1a\u89e3\u7b54\u9519\u8bef\n\u663e\u793a\u8be6\u60c5\n\u8f93\u5165\uff1a\n[90,69,null,49,89,null,52]\n\u8f93\u51fa\uff1a\n3\n\u9884\u671f\u7ed3\u679c\uff1a\n1\n*/\n</code></pre> <p>\u3010\u89e3\u7b54\u51fa\u9519\u3011</p> <ol> <li>\u201c\u4efb\u610f\u201d\u7ed3\u70b9\uff0c\u800c\u4e0d\u662f\u201c\u76f8\u90bb\u201d\u7ed3\u70b9\uff08\u611f\u8c22\u8bc4\u8bba\u533a\u6458\u661f\uff09\u3002</li> </ol> <p>\u3010\u89e3\u51b3\u529e\u6cd5\u3011</p> <ol> <li>\u7c7b\u4f3c\u4e2d\u5e8f\u904d\u5386\u5bfb\u627e\u95f4\u8ddd\u6700\u5c0f\uff08\u611f\u8c22\u8bc4\u8bba\u533aCoding_Gengjiabo\uff09\u3002</li> </ol> <pre><code>\n</code></pre> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#14-trie","title":"14 \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)","text":"<p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#15-ii","title":"15 \u6253\u5bb6\u52ab\u820d II","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u8d2a\u5fc3\u7b97\u6cd5\u3002</li> </ol> <p>\u4e3e\u51fa\u53cd\u4f8b\u540e\u53d1\u73b0\u4e0d\u884c</p> <p>\u53cd\u4f8b: {1, 3, 4, 3, 0} </p> <p>\u6700\u4f18\u89e3\u5e94\u8be5\u662f 3+3\uff0c \u800c\u4e0d\u662f 4 + 1 + 0, \u4e0d\u80fd\u4f18\u5148\u9009\u6700\u5927\u7684\uff1f\u90a3\u600e\u4e48\u529e\u5462\uff1f</p> <ol> <li> <p>\u4e0d\u80fd\u6392\u5e8f\uff0c\u6392\u5e8f\u4f1a\u6253\u4e71\u539f\u6709\u76f8\u90bb\u5173\u7cfb\u3002</p> </li> <li> <p>\u8fd8\u662f\u8003\u8651\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u5e8f\u5217(x, y, z)\uff0c \u5982\u679c\u6ee1\u8db3 \uff1a</p> </li> <li> <p>y &gt;= x + z\uff0c \u5219\u53ef\u4ee5\u9009\u62e9y\u800c\u629b\u5f03x\u3001z\u3002</p> </li> <li>y &lt; x + z, \u4e14 x \u548c z \u4e0d\u76f8\u90bb\uff0c \u5219\u629b\u5f03y\uff0c\u7ee7\u7eed\u8d2a\u5fc3\u7b97\u6cd5\u3002</li> <li> <p>x \u548c z \u76f8\u90bb\uff0c\u53ea\u80fd\u9009\u62e9y\uff0c\u6b64\u65f6\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fay\u3002</p> </li> <li> <p>\u5982\u4f55\u629b\u5f03\uff1f</p> </li> <li> <p>\u7f6e\u96f6\u3002\u5c06\u629b\u5f03\u7684\u9009\u62e9\u5728\u6570\u7ec4\u4e2d\u7684\u503c\u7f6e\u4e3a\u96f6\u3002</p> </li> <li> <p>\u5982\u4f55\u5904\u7406\u9996\u5c3e\u76f8\u90bb\u95ee\u9898\uff1a</p> </li> <li> <p>\u6dfb\u52a0\u5224\u65ad\u8bed\u53e5\uff0c\u6bcf\u6b21\u8bbf\u95ee\u65f6\u8003\u8651\u662f\u5426\u4e3a\u9996\u90e8\u6216\u5c3e\u90e8\u3002</p> </li> <li> <p>\u6a21\u957f\u9664\u4f59\u6cd5(\u81ea\u5df1\u778e\u8d77\u7684\u540d\u5b57)\uff0c\u5bf9\u6bcf\u4e2a\u4e0b\u6807 x, nums[x]\u5b58\u5728\uff0c\u5219nums[(x+length-1) % length] \u548cnums[(i+1)%length]\u5fc5\u7136\u5b58\u5728\uff08\u5c31\u662f\u4e0d\u4f1a\u6709\u6570\u7ec4\u8d8a\u754c\u95ee\u9898\uff09\u3002</p> </li> <li> <p>\u5982\u4f55\u5224\u65ad\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7ed3\u675f\uff1f</p> </li> <li> <p>\u5bf9\u6bcf\u4e2a\u5df2\u9009\u62e9\u548c\u5df2\u7ecf\u629b\u5f03\u7684\u6570\u636e\uff0c\u90fd\u7f6e\u4e3a0\uff0c\u6570\u7ec4\u5168\u96f6\u5219\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c</p> </li> <li> <p>\u4ee3\u7801\u5982\u4e0b</p> </li> </ol> <pre><code>class Solution {\npublic:\nint rob(vector&lt;int&gt;&amp; nums) {\nint len = nums.size();\nint i = 0; // a Loop control variable\nint max_index = 0;\nint answer = 0;\nbool flag = false; // whether this solution gets the answer\nwhile(!flag) {\nmax_index = 0;\nfor(i = 1; i &lt; len; i++) { // find the maximum\nmax_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n}\n// three situation\n// for (x, y, z)\nif (nums[max_index] &gt;= (nums[(max_index + len - 1) % len] + nums[(max_index + 1) % len])){ // y &gt;= x + z\nanswer += nums[max_index];\nnums[max_index] = 0;\nnums[(max_index + len - 1) % len] = 0;\nnums[(max_index + 1) % len] = 0;\n}else if(3 == len)\nreturn nums[1];\nelse // y &lt; x + z &amp;&amp; x and z are not adjacent\nnums[max_index] = 0;\n// whether gets the answer\nfor (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n;\nflag = (i == len) ? 1 : 0;\n}\n//return answer\nreturn answer;\n}\n};\n//\u90e8\u5206\u4f18\u5316\nclass Solution {\npublic:\nint rob(vector&lt;int&gt;&amp; nums) {\nint len = nums.size();\nint i = 0; // a Loop control variable\nint max_index = 0;\nint answer = 0;\nbool flag = false; // whether this solution gets the answer\nwhile(!flag) {\nmax_index = 0;\nfor(i = 1; i &lt; len; i++) { // find the maximum\nmax_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n}\n// three situation\n// for (x, y, z)\nif (nums[max_index] &gt;= (nums[(max_index + len - 1) % len] + nums[(max_index + 1) % len])){ // y &gt;= x + z\nanswer += nums[max_index];\nnums[max_index] = 0;\nnums[(max_index + len - 1) % len] = 0;\nnums[(max_index + 1) % len] = 0;\n}else if(len &lt; 4)\nreturn nums[max_index];\nelse // y &lt; x + z &amp;&amp; x and z are not adjacent\nnums[max_index] = 0;\n// whether gets the answer\nfor (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n;\nflag = i == len;\n}\n//return answer\nreturn answer;\n}\n};\n</code></pre> <p>\u3010\u81ea\u5df1\u8c03\u8bd5\u9636\u6bb5\u627e\u5230\u7684\u9519\u8bef\u3011</p> <p>\u6d4b\u8bd5\u6837\u4f8b\uff1anums = {1, 3, 4, 3, 3};</p> <p>\u7b54\u6848\u5e94\u8be5\u662f 7 \u4f46\u662f\u8f93\u51fa\u4e3a6\uff0c\u8fd8\u662f\u5728\u60c5\u51b5\u5224\u65ad\u4e0a\u5931\u7b56\u4e86\uff0c\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u53c8\u611f\u89c9\u8d2a\u5fc3\u8d70\u4e0d\u901a\u4e86\u3002\u3002\u3002</p> <ol> <li>\u4e00\u79cd\u9012\u5f52\u7684\u89e3\u51b3\u65b9\u5f0f</li> </ol> <pre><code>class Solution {\npublic:\nint rob(vector&lt;int&gt; nums) { int len = nums.size();\nint max_index = 0;\nint i = 0;\nfor (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n;\nif(i == len)\nreturn 0;\nmax_index = 0;\nfor(i = 1; i &lt; len; i++) { // find the maximum\nmax_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n}\nif(len &lt; 4)\nreturn nums[max_index];\nint temp = nums[max_index];\nnums[max_index] = 0;\nint temp_a = rob(nums);\nnums[(max_index + len - 1) % len] = 0;\nnums[(max_index + 1) % len] = 0;\nint temp_b = rob(nums) + temp;\n//return answer\nreturn temp_a &gt; temp_b ? temp_a : temp_b;\n}\n};\n/*\n\u53ef\u60dc\u7684\u662f\n\u8fd9\u79cd\u65b9\u6cd5\u8d85\u65f6\u4e86\u3002\u3002\n\u5f53\u6570\u7ec4\u53d8\u957f\u65f6\uff0c\u5bf9\u6bcf\u4e2a\u6700\u5927\u503c\u90fd\u8981\u4e24\u6b21\u9012\u5f52\n\u65f6\u95f4\u590d\u6742\u5ea6\u6210\u6307\u6570\u589e\u957f\uff0c\u8d39\u65f6\u8d39\u8d44\n*/\n</code></pre> <ol> <li>\u8003\u8651\u53ef\u80fd\u8981\u7528\u52a8\u6001\u89c4\u5212\uff0c\u53ef\u662f\u6211\u4e0d\u4f1a\u554a\u3002\u3002\u3002</li> <li>\u592a\u96be\u4e86\uff0c\u6211\u662f\u5783\u573e\uff0c\u5199\u7684\u90fd\u662f\u5783\u573e\u3002</li> </ol> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#16-1","title":"16-1 \u6270\u4e71\u5b57\u7b26\u4e32","text":"<p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#16-2","title":"16-2 \u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li> <p>\u4e0d\u7528\u9664\u6cd5\u8fd8\u8981\u518dO(n)\u65f6\u95f4\u5185\u5b8c\u6210(\u9898\u76ee\u8981\u6c42)\uff1f\uff1f</p> </li> <li> <p>\u521d\u59cb\u5316\u8f93\u51fa\u6570\u7ec4\uff0c\u5176\u503c\u4e3a\u8f93\u5165\u6570\u7ec4\u5411\u5de6\u79fb\u52a8\u540e\u7684\u503c\u3002</p> </li> </ol> <p>\u4f8b\uff1a</p> <p>\u8f93\u5165\uff1a[1, 2, 3, 4]</p> <p>\u8f93\u51fa\uff1a[2, 3, 4, 1]</p> <ol> <li>\u7136\u540e\uff0c\u5de6\u79fb\uff0c\u6570\u7ec4\u76f8\u4e58\uff1f</li> <li>\u4e0d\u884c\uff0c\u9996\u5148\uff0c\u6ca1\u6cd5\u5de6\u79fb\u53f3\u79fb\u7684\uff0c\u8fd9\u4e0d\u662f\u961f\u5217\uff0c\u5176\u6b21\uff0c\u4e5f\u4e0d\u652f\u6301\u4e24\u4e2a\u6570\u7ec4\u76f4\u63a5\u4e58\u3002</li> </ol> <p>\u3010\u6709\u6548\u601d\u8def\u3011</p> <ol> <li> <p>yauldmar\uff1a\u6700\u76f4\u63a5\u7684\u60f3\u6cd5\u5e94\u8be5\u662f\uff1a\u521d\u59cb\u5316\u7ed3\u679c\u6570\u7ec4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u4fdd\u5b58\u6240\u6709\u6570\u7684\u4e58\u79ef\uff0c\u7136\u540e\u6bcf\u4e2a\u4f4d\u7f6e\u9664\u4ee5nums\u6570\u7ec4\u5f53\u524d\u4f4d\u7f6e\u7684\u503c\uff0c\u4f46\u8fd9\u6837\u6700\u5927\u7684\u95ee\u9898\u662f\u5982\u679c\u6570\u7ec4\u5b58\u57280\uff0c\u5c31\u6709\u95ee\u9898\u4e86\uff0c\u800c\u4e14\u9898\u76ee\u4e2d\u660e\u786e\u4e0d\u5141\u8bb8\u4f7f\u7528\u9664\u6cd5\uff0c\u8fd9\u4e2a\u601d\u8def\u6392\u9664\u3002</p> </li> <li> <p>\u90a3\u4e48\u6211\u8003\u8651\u5c06\u8f93\u51fa\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u51681\u6570\u7ec4\uff0c\u7136\u540e\u8bbe\u7f6e\u4e00\u4e2a\u4e34\u65f6\u7684\u79eftemp\uff0c\u521d\u59cb\u503c\u4e3a\u4e00\uff0c\u904d\u5386\u6570\u7ec4\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u8bbf\u95ee\u4e00\u4e2anums[i]\uff0ctemp\u5c31\u4e58\u4ee5nums[i]\uff0c\u7136\u540eout[i+1]\u4e58\u4ee5temp\uff0c\u6ce8\u610f\u5230\u4e0d\u80fd\u8d8a\u754c\uff0c\u56e0\u6b64\u5faa\u73af\u6761\u4ef6\u662f  i &lt; nums.size() - 1\u3002</p> </li> </ol> <p>[a, b, c, d], [1, 1, 1, 1]</p> <p>[1, 1, 1, 1] ==&gt; [1, a, ab, abc]</p> <ol> <li> <p>\u7136\u540e\uff0c\u518d\u5c06 (2.) \u53cd\u8fc7\u6765\u6267\u884c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u5566\uff01</p> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6:O(2n) = O(n)</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6:O(1)</p> </li> <li> <p>\u4ee3\u7801</p> </li> </ol> <pre><code>// 1.0\nclass Solution {\npublic:\nvector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\nvector&lt;int&gt; ans(nums.size(),1);\nint temp = 1, len = nums.size();\nfor(int i = 0; i &lt; len - 1; i++){\ntemp *= nums[i];\nans[i + 1] *= temp;\n}\ntemp = 1;\nfor(int i = len - 1; i &gt; 0 ; i--){\ntemp *= nums[i];\nans[i - 1] *= temp;\n}\nreturn ans;\n}\n};\n/*\n\u6267\u884c\u7ed3\u679c\uff1a\u901a\u8fc7\n\u6267\u884c\u7528\u65f6\uff1a24 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8683.25%\u7684\u7528\u6237\n\u5185\u5b58\u6d88\u8017\uff1a23.3 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8685.40%\u7684\u7528\u6237\n*/\n</code></pre> <p>\u611f\u8c22yauldmar, \u8ba9\u6211\u53d1\u73b0C\u3001\u4e24\u4e2afor\u5faa\u73af\u8bed\u53e5\u5176\u5b9e\u80fd\u6574\u5408\u5728\u4e00\u8d77\u3002</p> <pre><code>//1.1\nclass Solution {\npublic:\nvector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\nvector&lt;int&gt; ans(nums.size(),1);\nint left = 1, right = 1, len = nums.size();\nfor(int i = 0; i &lt; len - 1; i++){\nleft *= nums[i];\nright *= nums[len - 1 - i];\nans[i + 1] *= left;\nans[len - i - 2] *= right;\n}\nreturn ans;\n}\n};\n</code></pre> <ol> <li>\u81ea\u6211\u601d\u8def\u6700\u7ec8\u60f3\u6cd5</li> </ol> <p>\u6613\u8bc1\uff0c\u82e5\u6570\u7ec4\u4e2d\u5b58\u5728\u4e24\u4e2a\u4e3a\u96f6\u7684\u5143\u7d20\uff0c\u5219\u8f93\u51fa\u6570\u7ec4\u4e00\u5b9a\u662f\u5168\u96f6\u6570\u7ec4\u3002</p> <pre><code>//2.0\n#include&lt;algorithm&gt;\nclass Solution {\npublic:\nvector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\nif(count(nums.begin(), nums.end(), 0) &gt; 1)\nreturn vector&lt;int&gt;(nums.size(), 0);\nvector&lt;int&gt; ans(nums.size(),1);\nint left = 1, right = 1, len = nums.size();\nfor(int i = 0; i &lt; len - 1; i++){\nleft *= nums[i];\nright *= nums[len - 1 - i];\nans[i + 1] *= left;\nans[len - i - 2] *= right;\n}\nreturn ans;\n}\n};\n/*\n\u53c2\u8003\u8bc4\u4ef7\n\u6267\u884c\u7ed3\u679c\uff1a\u901a\u8fc7\n\u6267\u884c\u7528\u65f6\uff1a20 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8694.43%\u7684\u7528\u6237\n\u5185\u5b58\u6d88\u8017\uff1a23.3 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8690.47%\n\u7684\u7528\u6237\n*/\n</code></pre> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011\u3010\u6211\u7684\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#17-iii","title":"17 \u5b58\u5728\u91cd\u590d\u5143\u7d20 III","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u904d\u5386\u6570\u7ec4\u52a0\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\u3002</li> </ol> <pre><code>class Solution {\npublic:\nbool containsNearbyAlmostDuplicate(vector&lt;int&gt;&amp; nums, int k, int t) {\nfor(int i = 0; i &lt; nums.size() ;i++)\nfor(int j = i + 1; j &lt; i + k + 1 &amp;&amp; j &lt; nums.size(); j++){\nif(abs(nums[i] - nums[j]) &lt;= t)\nreturn true;\n}\nreturn false;\n}\n};\n</code></pre> <ol> <li> <p>\u7b2c\u4e00\uff0c\u6ca1\u6ce8\u610f\u5206\u6790\u6570\u636e\u8303\u56f4\uff0cint\u4e0d\u591f\u957f</p> <p>[-2147483648,2147483647] 1 1</p> <p>\u6d4b\u8bd5\u6837\u4f8b\u4e0d\u901a\u8fc7</p> <p>\u6539\u7248</p> <pre><code>class Solution {\npublic:\nbool containsNearbyAlmostDuplicate(vector&lt;int&gt;&amp; nums, int k, int t) {\nfor(int i = 0; i &lt; nums.size() ;i++)\nfor(int j = i + 1; j &lt; i + k + 1 &amp;&amp; j &lt; nums.size(); j++){\nif(abs((long long int)nums[i] - (long long int)nums[j]) &lt;= t)\nreturn true;\n}\nreturn false;\n}\n};\n</code></pre> <p>\u8fd8\u662f\u9519\u8bef\u7684\uff0c\u6ca1\u6ce8\u610f\u6570\u7ec4\u957f\u5ea6\u9650\u5236\uff0cO(n^2) \u8d85\u65f6\u3002</p> </li> <li> <p>\u8003\u8651\u53e6\u5916\u4e00\u79cd\u7b97\u6cd5\uff0c\u5148\u6392\u5e8f\uff0c\u7136\u540e\u770b\u524d\u4e24\u4e2a\u5143\u7d20\u5c31\u884c\u4e86\u3002</p> </li> <li>\u4e0d\u884c\uff01\u7edd\u5bf9\u4e0d\u884c\uff0c\u6392\u5e8f\u4f1a\u6253\u4e71\u539f\u6709\u7684\u6570\u7ec4\u5e8f\uff0c\u4e0d\u7b26\u5408\u9898\u610f\u8981\u6c42\u3002</li> </ol> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#18","title":"18 \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","text":"<p>\u3010\u601d\u8def\u3011</p> <ol> <li>\u6b64\u9898\u4e3a06\u65e5\u505a\u7684\u9898\u7684\u524d\u8eab\u7248\u672c\uff0c\u6211\u7684\u601d\u8def\u8fd8\u662f\u548c\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u91cd\u590d\u7684\u4e00\u6837\u3002</li> </ol> <p>\u3010\u53cc\u6307\u9488\u3011</p> <pre><code>class Solution {\npublic:\nint removeDuplicates(vector&lt;int&gt;&amp; nums) {\nif(nums.size() &lt; 2) // \u9898\u9762\u6709\u8bf4\u6570\u7ec4\u53ef\u80fd\u4e3a\u7a7a\nreturn nums.size(); int j = 0;\nnums.push_back(10001); // \u63d2\u5165\u4e00\u4e2a\u6570\u636e\u8303\u56f4\u4e4b\u5916\u7684\u6570\u636e\uff0c\u7528\u4f5c\u6700\u540e\u7684 i + 1\nfor(int i = 0; i &lt; nums.size() - 1; i++)\nif(nums[i] != nums[i+1])\nnums[j++] = nums[i];\nreturn j;\n}\n};\n</code></pre> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p> <p>\u3010\u603b\u7ed3\u5fc3\u5f97\u3011</p> <ul> <li>\u591a\u591a\u6ce8\u610f\u9898\u9762\u4fe1\u606f\uff0c\u9898\u76ee\u5f80\u5f80\u90fd\u4e0d\u4f1a\u9519\uff0c\u597d\u597d\u7406\u89e3\u9898\u76ee\u610f\u601d\uff0c\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u3002</li> </ul>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#19","title":"19 \u79fb\u9664\u5143\u7d20","text":"<p>\u3010\u53cc\u6307\u9488\u3011</p> <p>\u3010\u4ee3\u7801\u3011</p> <pre><code>class Solution {\npublic:\nint removeElement(vector&lt;int&gt;&amp; nums, int val) {\nint index = 0;\nif(nums.size()){ // \u6570\u7ec4\u6709\u53ef\u80fd\u4e3a\u7a7a\u56e0\u6b64\u8981\u5224\u65ad\u4e00\u4e0b\nfor(int i = 0; i &lt; nums.size(); ++i)\nif(nums[i] != val)\nnums[index++] = nums[i];\n}else\nreturn 0;\nreturn index;\n}\n};\n//\u6539\u8fdb\nclass Solution {\npublic:\nint removeElement(vector&lt;int&gt;&amp; nums, int val) {\nint index = 0;\n//\u6570\u7ec4\u7a7a\u4e0d\u6ee1\u8db3for\u7684\u6761\u4ef6\u8bed\u53e5\nfor(int i = 0; i &lt; nums.size(); ++i)\nif(nums[i] != val)\nnums[index++] = nums[i];\nreturn index;\n}\n};\n/* \u53c2\u8003\u8bc4\u4ef7\n\u6267\u884c\u7528\u65f6\uff1a0 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e86100.00%\u7684\u7528\u6237\n\u5185\u5b58\u6d88\u8017\uff1a8.3 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8699.26%\u7684\u7528\u6237\n*/\n</code></pre> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#20-strstr","title":"20\u5b9e\u73b0 strStr()","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#21","title":"21\u89e3\u7801\u65b9\u6cd5","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#22-k","title":"22 \u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7 K \u7684\u6700\u5927\u6570\u503c\u548c","text":"<p>\u3010\u5ba1\u9898\u3011</p> <ol> <li>\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u603b\u4f1a\u5b58\u5728\u4e00\u4e2a\u6570\u503c\u548c\u4e0d\u8d85\u8fc7 <code>k</code> \u7684\u77e9\u5f62\u533a\u57df\u3002</li> <li>\u8fd4\u56de\u503c\u4e3a\u4e0d\u8d85\u8fc7<code>k</code>\u7684\u6700\u5927\u6570\u503c\u548c\u3002</li> <li>\u9898\u76ee\u6240\u7ed9\u7684\u4fe1\u606f\u5f88\u5c11\u3002</li> </ol>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/","title":"March 2021","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#02","title":"02 \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u7a9c","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <ol> <li>\u4ece\u9996\u5b57\u7b26\u5f00\u59cb\u589e\u52a0\u5b50\u4e32\u957f\u5ea6\uff0c\u5f80\u540e\u6bcf\u4e2a\u5b57\u7b26\u5f97\u5148\u770b\u662f\u5426\u5728\u5b50\u4e32\u4e2d\u51fa\u73b0\u8fc7\uff0c\u540c\u65f6\u8bb0\u5f55\u5f53\u524d\u65e0\u91cd\u590d\u5b50\u4e32\u957f\u5ea6CurrentLength\u4ee5\u53ca\u6700\u957f\u65e0\u91cd\u590d\u5b50\u4e32\u957f\u5ea6MaxLength\u3002</li> <li>\u51fa\u73b0\u91cd\u590d\u5219\u4ece\u9996\u5b57\u7b26\u7684\u4e0b\u4e00\u5b57\u7b26\u5f00\u59cb\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u7b97\u51fa\u6700\u957f\u65e0\u91cd\u590d\u5b50\u4e32\u957f\u5ea6\u3002</li> </ol> <p>\u3010\u5173\u952e\u4f18\u5316\u3011</p> <ol> <li>\u548cKMP\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u51fa\u73b0\u91cd\u590d\u65f6\uff0c\u91cd\u590d\u5b57\u7b26\u4e4b\u524d\u7684\u5b57\u7b26\u65e0\u9700\u518d\u8fdb\u884c\u6b65\u9aa4\u4e00\uff0c\u76f4\u63a5\u6539\u4e3a\u4ece\u8be5\u91cd\u590d\u5b57\u7b26\u4e4b\u540e\u7684\u5b57\u7b26\u4f5c\u4e3a\u5f53\u524d\u65e0\u91cd\u590d\u5b50\u4e32\u7684\u9996\u5b57\u7b26\uff0c\u540c\u65f6\u5bf9\u5f53\u524d\u65e0\u91cd\u590d\u5b50\u4e32\u7684\u957f\u5ea6\u8fdb\u884c\u524a\u51cf\u3002\u7136\u540e\u7ee7\u7eed\u7ed9\u5b50\u4e32\u52a0\u5b57\u7b26\u800c\u6ca1\u5fc5\u8981\u518d\u91cd\u590d\u591a\u4f59\u6b65\u9aa4\u3002    \u4f8b\u5b50\uff1a     s = \"abcdefgdcba921\"    c = \"abcdefg\" char = 'd' \u51fa\u73b0\u91cd\u590d\u65f6    cl = 7, maxl = 7    \u4ee4 c = \"efgd\", cl = cl + 0(a) - 3(d) = 4    \u6700\u540e c = \"efgdcba921\" cl = 10, maxl = 10</li> <li>\u5f53\u6700\u957f\u65e0\u91cd\u590d\u5b50\u4e32\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u7269\u5f53\u524d\u65e0\u91cd\u590d\u5b50\u4e32\u80fd\u8fbe\u5230\u7684\u6700\u5927\u957f\u5ea6\u65f6\uff0c\u65e0\u9700\u8fdb\u884c\u8ba1\u7b97\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa\u6700\u5927\u65e0\u91cd\u590d\u5b50\u4e32\u957f\u5ea6\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5c31\u5f88\u597d\u7406\u89e3\u3002    \u4f8b\u5b50\uff1a    s = \"abcce\"    c = \"abc\", char = 'c'    cl = 3, maxl = 3    \u7ecf\u8fc7\u7b2c\u4e00\u6b65\u4f18\u5316    c = \"c\" , char = 'e'    cl = 1, maxl = 3, cl(max) = 2 &lt; maxl    \u6545maxl = 3\u3002</li> </ol> <p>\u3010\u4ee3\u7801\u5f85\u8865\u3011 \u4ed4\u7ec6\u60f3\u4e86\u4e00\u4e0b\u601d\u8def\uff0c\u4f46\u9274\u4e8e\u590d\u4e60\u8ba1\u7ec4\u53ef\u80fd\u6ca1\u65f6\u95f4\u5199\u4ee3\u7801\uff0c\u65e5\u540e\u8865\u4e0a\u4ee3\u7801\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#03","title":"03 \u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570","text":"<p>\u3010\u601d\u8def\u3011</p> <ol> <li>\u88ab\u5b83\u9a97\u5f97\u53bb\u5408\u5e76\u6570\u7ec4\uff08\u8bef\uff0c\u8fd9\u6837\u6307\u5b9a\u633a\u9ebb\u70e6\uff09    \u4f46\u5176\u5b9e\u6211\u81ea\u5df1\u7684\u601d\u8def\u66f4\u9ebb\u70e6\u3002</li> <li>\u53ee\u53ee\uff0c\u5c31\u662f\u8981\u627e\u4e2d\u4f4d\u6570\u561b\uff0c\u90a3\u5c31\u53bb\u6570\uff0c\u56e0\u4e3a\u4e24\u4e2a\u6570\u5217\u672c\u8eab\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u53ea\u8981\u628a\u6bd4\u4e2d\u4f4d\u6570\u5c0f\u7684\u90a3\u4e9b\u6570\u5168\u90e8\u627e\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u4e3e\u4e2a\ud83c\udf30\uff1a    1\uff0c2\uff0c4 m = 3    3\uff0c5 n = 2    m+n=5 5/2=2 \u8fd9\u4e2a\u503c\u53ef\u4ee5\u8bb0\u4e3aflag    \u90a3\u5c31\u8981\u5148\u627e\u4e24\u4e2a\u5c0f\u7684\uff0c\u663e\u7136\uff0c1\u548c2\uff0c    \u5177\u4f53\u4e00\u70b9    1\u548c3\u6bd4\u8f83\u4e00\u4e0b\uff0c1\u66f4\u5c0f\uff0cm\u6570\u7ec4\u4e0b\u6807\u52a0\u4e00    2\u548c3\u6bd4\u8f83\u4e00\u4e0b\uff0c2\u66f4\u5c0f\uff0cm\u6570\u7ec4\u4e0b\u6807\u52a0\u4e00    \u6b64\u65f6\uff0c\u5df2\u7ecf\u5b8c\u6210\u4e86\u5bf9\u4e2d\u4f4d\u6570\u4e4b\u524d\u7684\u6570\u7684\u5254\u9664\u5de5\u4f5c\uff0c\u73b0\u5728\u5c31\u662f\u8981\u627e\u51fa\u4e2d\u4f4d\u6570\u4e86\uff0c\u53ea\u9700\u5c063\u548c4\u7684\u8fdb\u884c\u6bd4\u8f83\uff0c\u9009\u62e9\u8f83\u5c0f\u9879\u5373\u53ef\u3002\u90a3\u4e48\u4e2d\u4f4d\u6570\u5c31\u662f3\u3002    \\March_2021\\3. m\u548cn\u7684\u548c\u4e3a\u5947\u6570\u65f6\uff0c\u6309\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u770b\u8d77\u6765\u6ca1\u95ee\u9898\uff0c\u90a3\u4e48\u548c\u4e3a\u5076\u6570\u7684\u60c5\u51b5\u4e0b\u5462\uff1f    \u4e3e\u4e2a\ud83c\udf30\uff1a    1\uff0c2\uff0c4    3\uff0c5\uff0c6    \u540c\u6837\u7ecf\u8fc7\u4e0a\u8ff0\u8fc7\u7a0b\u7684\u8bdd\uff0c    \u56e0\u4e3am+n=6\uff0c6/2=3\uff0c    \u6700\u540e\u6bd4\u8f83\u7684\u4e24\u4e2a\u6570\u5c06\u4f1a\u662f4\u548c5    \u5076\u6570\u4e2a\u6570\u627e\u4e2d\u4f4d\u6570\uff0c\u5b9e\u9645\u4e0a\u662f\u4e2d\u95f4\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u503c\uff0c\u5c31\u5e94\u8be5\u662f3\u548c4\u7684\u5e73\u5747\u503c\uff0c\u53ef\u662f\u6700\u540e\uff08\u6570\u7ec4\u4e0b\u6807\u5bf9\u5e94\uff09\u6307\u5411\u7684\u5374\u662f4\u548c5\u3002    \u9010\u6b65\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5254\u9664\u4e86\u4e09\u4f4d\u6570\u636e\uff0c\u800c\u6570\u636e3\u662f\u6700\u540e\u5254\u9664\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u5176\u4e3a\u6709\u7528\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u5e94\u8be5\u5c06\u5176\u5254\u9664\uff0c\u5bf9\u5e94\u7684\uff0c\u5254\u9664\u6b21\u6570\u5c31\u5e94\u8be5\u51cf\u4e00\uff0c    \u5373 m+n/2 - 1\u3002    \uff08\u5c0f\u4f18\u5316\uff0c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\uff09    \u8fdb\u4e00\u6b65\u89c2\u5bdf\u53d1\u73b0\uff0cm+n\u4e3a5\u548c6\u65f6\u7684\u5254\u9664\u6b21\u6570\u76f8\u540c\uff0c\u610f\u5473\u7740\u5c0f\u5947\u6570\u548c\u5927\u5076\u6570\u7684\u5254\u9664\u6b21\u6570\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\uff0c\u5254\u9664\u8fc7\u7a0b\u5b8c\u5168\u53ef\u4ee5\u65e0\u89c6\u5947\u5076\u6027\uff0c\u5373    \u5254\u9664\u6b21\u6570 flag = (m+n-1)/2\u3002</li> </ol> <p>\u3010\u5b58\u5728\u95ee\u9898\u53ca\u89e3\u51b3\u529e\u6cd5\u3011</p> <ol> <li> <p>\u4e0a\u8ff0\u8fc7\u7a0b\u5ffd\u7565\u4e86\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u4e24\u6570\u7ec4\u4e2d\u6709\u4e00\u6570\u7ec4\u8fc7\u5206\u957f\u4e86\uff0c\u5bfc\u81f4\u5728\u5254\u9664\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u6570\u7ec4\u8d8a\u754c\u3002</p> </li> <li> <p>\u9519\u8bef\u89e3\u51b3\u529e\u6cd5\uff1a\u5ffd\u89c6\u8f83\u77ed\u6570\u7ec4\u6570\u636e\uff0c\u76f4\u63a5\u5c06\u5176\u957f\u5ea6\u52a0\u5230\u957f\u6570\u7ec4\u4e2d\uff0c\u901a\u8fc7\u7b80\u5355\u65b9\u6cd5\u76f4\u63a5\u6c42\u4e2d\u4f4d\u6570\u3002\u60f3\u51fa\u8fd9\u79cd\u9519\u8bef\u65b9\u6848\u4e3b\u8981\u539f\u56e0\u662f\uff1a\u5355\u7eaf\u7684\u8ba4\u4e3a\uff0c\u957f\u6570\u7ec4\u7684\u5b58\u5728\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u6570\u636e\u8d8a\u754c\uff0c\u800c\u5ffd\u89c6\u4e86\u77ed\u6570\u7ec4\u5185\u6570\u636e\u7684\u91cd\u8981\u6027\u3002</p> </li> <li> <p>\u89e3\u51b3\u529e\u6cd5\uff1a\u5f53\u8981\u53d1\u751f\u6570\u7ec4\u8d8a\u754c\u65f6\uff08\u6dfb\u52a0\u5faa\u73af\u6761\u4ef6\uff09\uff0c\u8df3\u51fa\u6bd4\u8f83\u5254\u9664\u6570\u636e\u5faa\u73af\uff0c\u6539\u4e3a\u76f4\u63a5\u4ece\u957f\u6570\u7ec4\u4e2d\u627e\u5230\u4e2d\u4f4d\u6570       \ud83c\udf30 \uff1a       1\uff0c2 m = 2       3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c111 n=12</p> </li> <li> <p>\u76f4\u63a5\u5bfb\u627e\u65b9\u6cd5\uff08\u5f97\u5148\u5224\u65ad\u54ea\u4e2a\u662f\u957f\u6570\u7ec4\uff09</p> <p>flag\uff08\u539f\u503c\u4e3a6\uff0c\u6bcf\u5254\u9664\u4e00\u6b21\u5c31\u51cf\u4e00\uff0c\u4e3a\u96f6\u5219\u8868\u793a\u5254\u9664\u5b8c\u4e86\uff0c\u7528\u4f5c\u5254\u9664\u5faa\u73af\u7684\u5faa\u73af\u6761\u4ef6\uff09 \u7ecf\u8fc7\u4e24\u6b21\u5254\u9664\u540e\u53d8\u4e3a4\u3002   \u957f\u6570\u7ec4\u6b64\u65f6\u4e0b\u6807\u4e3a0   \u5219\u4e0b\u6807+4\u4e3a4\uff0cOK\uff0c\u8fdb\u5165\u8ba1\u7b97\u4e2d\u4f4d\u6570\u7684\u65f6\u5019\uff0c\u548c\u4e3a\u5076\u6570\uff0c\u957f\u6570\u7ec4\u4e0b\u68074\u548c\u4e0b\u68075\u7684\u6570\u636e\u4e4b\u548c\u7684\u5e73\u5747\u503c\uff0c\u4e5f\u5c31\u662f7\u548c8\u7684\u5e73\u5747\u503c7.5\u3002</p> </li> </ol> <p>\u59d1\u4e14\u60f3\u4e86\u8fd9\u4e9b\uff0c\u6253\u5b57\u6253\u4e86\u534a\u5929\u3002\u3002\u3002\u3002</p> <p>\u3010\u4ee3\u7801\u5f85\u8865\u3011</p> <p>\u54e6\uff0c\u5b9e\u9645\u8fd8\u8981\u8003\u8651\u7a7a\u6570\u7ec4\u4ee5\u53ca\u6570\u636e\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5f97\u7b49\u4e0a\u624b\u5199\u4e86\u4ee3\u7801\u624d\u77e5\u9053\u5177\u4f53\u60c5\u51b5\u5982\u4f55\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#04","title":"04 \u6b63\u6574\u6570\u62c6\u5206","text":"<p>\u3010\u5f85\u8865\u3011</p> <pre><code>// \u540c\u5b66\u7684\u4ee3\u7801\n#include&lt;stdio.h&gt;\nint a[100], n;\nvoid rep(int k, int m, int t){\nfor(int i = m; i &gt; 0; i--)\nif(k - i == 0){\na[t] = i;\nprintf(\"%d=\", n);\nfor(int j = 0; j &lt; t; j++)\nprintf(\"%d+\", a[j]);\nprintf(\"%d\\n\", a[t]);\n}else if(k - i &gt; 0){\na[t] = i;\nrep(k - i, i, t + 1);\n}\n}\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#22","title":"22 \u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32","text":"<p>\u3010\u521d\u59cb\u601d\u8def\u3011</p> <pre><code>class Solution {\npublic:\nstring reverseLeftWords(string s, int n) {\nint length = s.length();\nstring ans = s;\nfor(int i = 0, j = n; i &lt;  length ; i++){\nans[i] = s[j];\nj = (j + 1) % length;\n}\nreturn ans;\n}\n};\n</code></pre> <p>\u3010\u8bc4\u8bba\u533a\u7684\u53e6\u7c7b\u65b9\u6cd5\u3011</p> <pre><code>class Solution {\npublic:\nstring reverseLeftWords(string s, int n) {\nreturn s.substr(n,s.length()-n)+(s.substr(0,n));\n// \u76f4\u63a5\u8c03\u7528string\u5e93~ \uff08\u6211\u89c9\u5f97\u9898\u76ee\u53ef\u80fd\u4e0d\u8ba9\u6211\u8fd9\u4e48\u505a\uff09\n}\n};\n</code></pre> <p>\u3010\u57fa\u4e8e\u8bc4\u8bba\u533a\u7684\u65b9\u6cd5\u3011</p> <pre><code>class Solution {\npublic:\nstring reverseLeftWords(string s, int n) {\nreturn (s+s.substr(0,n)).substr(n,s.length());\n}\n};\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#29","title":"29 \u98a0\u5012\u4e8c\u8fdb\u5236\u4f4d","text":"<p>\u5de6\u53f3\u79fb\u4f4d\u6307\u5b9a\u4e0d\u884c\u3002 \u6570\u636e\u58f0\u660e\u540e\u8981\u8bb0\u5f97\u521d\u59cb\u5316\uff01\uff01\uff01 \u521d\u59cb\u5316\uff01\uff01</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#30","title":"30 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635","text":"<p>\u3010\u601d\u8def\u3011</p> <ol> <li>\u5148\u6309\u884c\u641c\u7d22\uff0c\u627e\u5230\u5bf9\u5e94\u884c\u3002</li> <li>\u518d\u6309\u5217\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u8f83\u3002</li> </ol> <pre><code>class Solution {\npublic:\nbool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\nint row = 1, col = 0;\nfor(;row &lt; matrix.size(); row++){\nif( target &lt; matrix[row][0])\nbreak;\n}\nrow--;\nfor(;col &lt; matrix[row].size(); col++){\nif(target == matrix[row][col])\nreturn true;\n}\nreturn false;\n}\n};\n</code></pre> <p>\u3010\u9519\u8bef\u3011</p> <ol> <li>\u641c\u7d22\u884c\u65f6\u884c\u4e0b\u6807row\u5fd8\u8bb0-1\u3002</li> <li>\u641c\u7d22\u884c\u65f6\u63d0\u524d\u5224\u65ad\u6bcf\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u4e3atarget\uff0c\u81ea\u4ee5\u4e3a\u80fd\u591f\u65b9\u4fbf\u540e\u7eed\u7684\u5217\u67e5\u8be2\u64cd\u4f5c\uff0c\u4f7f\u5f97\u5217\u67e5\u8be2\u7684col\u4e0b\u6807\u521d\u59cb\u503c\u4e3a1\uff0c\u5bfc\u81f4\u5982\u679c\u77e9\u9635\u53ea\u6709\u4e00\u884c\uff0c\u4e0d\u6267\u884c\u884c\u641c\u7d22\u64cd\u4f5c\u65f6\uff0c\u5c06\u4f1a\u5ffd\u7565\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5c0f\u7ec6\u8282\uff0c\u5927\u6bdb\u75c5\uff01</li> </ol> <p>\u3010\u4e8c\u5206\u641c\u7d22\u7684\u7b56\u7565\u3011</p> <ol> <li>\u5c06\u4e8c\u7ef4\u77e9\u9635\u7684\u4e0b\u6807\u4e00\u7ef4\u5316\uff0c\u8fdb\u884c\u4e8c\u5206\u641c\u7d22\u3002</li> <li>\u5206\u6b65\u5bf9\u884c\u5217\u8fdb\u884c\u4e8c\u5206\u641c\u7d22\u3002</li> </ol> <pre><code>//\u4e8c\u5206\u641c\u7d22\nclass Solution {\npublic:\nbool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\nint col = matrix[0].size();\nint low = 0, high = matrix.size() * col - 1;\nint mid = 0;\nwhile (low &lt;= high){\nmid = (low+high)/2 ;\nif(target == matrix[mid / col][mid % col])\nreturn true;\nelse if (target &lt; matrix[mid / col][mid % col])\nhigh = mid - 1;\nelse\nlow = mid + 1;\n}\nreturn false;\n}\n};\n// \u5206\u6b65\u7684\u4e8c\u5206\u641c\u7d22\u7b56\u7565\nclass Solution {\npublic:\nbool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n//\u884c\u5217\u5206\u6b65\uff0c\u4e8c\u5206\u641c\u7d22 \nint low = 0, high = matrix.size() - 1;\nint mid = 0, row = 0;\nwhile (low &lt;= high){\nmid = (low+high)/2 ;\nif(target == matrix[mid][0])\nreturn true;\nelse if (target &lt; matrix[mid][0])\nhigh = mid - 1;\nelse\nlow = mid + 1;\n}\nrow = (mid == high) ? mid : high;\nif(row &lt; 0)\nreturn false;\nlow = 0;\nhigh = matrix[0].size() - 1;\nwhile (low &lt;= high){\nmid = (low+high)/2 ;\nif(target == matrix[row][mid])\nreturn true;\nelse if (target &lt; matrix[row][mid])\nhigh = mid - 1;\nelse\nlow = mid + 1;\n}\nreturn false;\n}\n};\n</code></pre> <p>\u3010\u95ee\u9898\u3011</p> <ol> <li>\u4e8c\u5206\u641c\u7d22\u7684\u6761\u4ef6\u662flow&lt;=high\uff0c\u4e0d\u8981\u5fd8\u8bb0\u7b49\u53f7\u3002</li> <li>row_index = mid / col\uff0ccol_index = mid % col </li> <li>\u5206\u6b65\u4e8c\u5206\u641c\u7d22\u65f6\u8981\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u540c\u65f6\u8981\u6ce8\u610f\u6709row&lt;0\u7684false\u60c5\u51b5\u3002</li> </ol> <p>\u3010\u8bc4\u8bba\u533a\u83b7\u5f97\u7684\u65b0\u77e5\u8bc6\u3011</p> <ol> <li>\u5229\u7528\u77e9\u9635\u5347\u5e8f\u7684\u7279\u6027\u4ece\u53f3\u4e0a\u89d2\u6216\u5de6\u4e0b\u89d2\u5f00\u59cb\u5207\u5165\u3002</li> </ol> <p>\u3010\u7c7b\u6bd4\u3011</p> <ol> <li>\u5982\u679c\u662f\u964d\u5e8f\u60c5\u51b5\u4e0b\u5462\uff1f    \u4ecd\u7136\u662f\u4ece\u53f3\u4e0a\u89d2\u6216\u5de6\u4e0b\u89d2\u5207\u5165</li> </ol> <p>\u3010\u603b\u7ed3\u3011\u8bef</p> <ol> <li>\u77e9\u9635\u6709\u5e8f\u65f6\u53ef\u4ee5\u4ece\u53f3\u4e0a\u89d2\u6216\u5de6\u4e0b\u89d2\u5f00\u59cb\u5207\u5165\u3002</li> </ol> <p>\u3010\u53cd\u601d\u3011</p> <ol> <li>\u5145\u5206\u5229\u7528\u4e8c\u5206\u6cd5!</li> <li>\u5176\u5b9e\u4ece\u54ea\u4e2a\u89d2\u5ea6\u5207\u5165\u90fd\u662f\u6b63\u786e\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5ea6\u90fd\u4e00\u6837\uff0c\u8981\u5feb\u8fd8\u662f\u4e8c\u5206\u6cd5\uff01</li> </ol>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#31-ii","title":"31 \u5b50\u96c6 II","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/","title":"September_2021","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#678","title":"678. \u6709\u6548\u7684\u62ec\u53f7\u5b57\u7b26\u4e32","text":"<p>\u81ea\u5df1\u7684\u601d\u8def\u662f\u7528\u6808\uff0c\u540e\u6765\u770b\u5230\u8fd9\u4e2a\u5927\u4f6c\uff0c\u5c5e\u5b9e\u819c\u62dc\u3002</p> <p>\u3010Ryugamine\u3011</p> <p>\u5bf9\u6211\u800c\u8a00\uff0c\u5173\u952e\u5728\u4e8e\u201c\u4e0b\u9650\u201d\u7684\u7406\u89e3\u548c\u6c42\u89e3\u3002</p> <p>\u503c\u5f97\u5b66\u4e60</p> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p> <p>\u3010\u5bab\u6c34\u4e09\u53f6\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#447","title":"447. \u56de\u65cb\u9556\u7684\u6570\u91cf","text":"<p>\u3010\u4ee5\u4e0b\u4ee3\u7801\u503c\u5f97\u5b66\u4e60\u3011</p> <p>\u3010\u5b98\u65b9\u9898\u89e3\u3011</p> <pre><code>class Solution {\npublic:\nint numberOfBoomerangs(vector&lt;vector&lt;int&gt;&gt;&amp; points) {\nint n = points.size();\nif (n &lt; 3) return 0;\nint i, j, x, y,dx,dy;\nvector&lt;vector&lt;int&gt;&gt; dis2(n);\n//\u5b66\u4e60\uff1a\u72ec\u7279\u7684\u8ba1\u7b97\u8ddd\u79bb\u65b9\u5f0f\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u95f4\u7684\u8ddd\u79bb\nfor (i = 0; i &lt; n; ++i) {\nx = points[i][0];\ny = points[i][1];\nfor (j = 0; j &lt; i; ++j) {\ndx = x - points[j][0];\ndy = y - points[j][1];\ndx = dx*dx + dy*dy;\ndis2[i].emplace_back(dx);\ndis2[j].emplace_back(dx);\n}\n}\n//\u7c7b\u4f3c\u7684\u6392\u5217\u7ec4\u5408\u8ba1\u7b97\uff0c\u4f46\u53c8\u6709\u533a\u522b\n//i \u7528\u4f5c\u8fd4\u56de\u503c\uff1bdis2[i]\u7684\u5927\u5c0f\u4e3an-1\uff0c\u6700\u5927\u79e9\u4e3an-2,x\u7528\u6765\u8ba1\u6570\ni = 0;\ny = n - 2;\nfor (auto &amp;v : dis2) {\nsort(v.begin(), v.end());\nx = 1;\nfor (j = 0; j &lt; y; ++j) {\nif (v[j] != v[j + 1]) { //\u8ba1\u7b97\u76f8\u540c\u8ddd\u79bb\u7684\u70b9\u7684\u6570\u91cf\ni += (x - 1)*x;\nx = 1;\n}\nelse {\n++x;\n}\n}\ni += (x - 1)*x;\n}\nreturn i;\n}\n};\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#524","title":"524. \u901a\u8fc7\u5220\u9664\u5b57\u6bcd\u5339\u914d\u5230\u5b57\u5178\u91cc\u6700\u957f\u5355\u8bcd","text":"<p>\u3010\u5b98\u65b9\u9898\u89e3\u3011 \u9700\u8981\u5b66\u4e60\uff1a\u52a8\u6001\u89c4\u5212</p> <p></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#162","title":"162. \u5bfb\u627e\u5cf0\u503c","text":"<p>\u3010\u5bab\u6c34\u4e09\u53f6\u306e\u76f8\u4fe1\u79d1\u5b66\u7cfb\u5217\u3011\u5173\u4e8e\u80fd\u591f\u300c\u4e8c\u5206\u300d\u7684\u4e24\u70b9\u8bc1\u660e</p> <p>\u503c\u5f97\u5b66\u4e60\u7684\u4ee3\u7801\uff0c\u5de7\u5999\u5229\u7528\u4e86\u6574\u578b\u6570\u636e\u9664\u6cd5(\u800c\u4e14\u5de7\u7528\u79fb\u4f4d\u8fd0\u7b97)\u5411\u4e0b\u53d6\u6574\u7684\u7279\u6027\u3002</p> <p>\u4f5c\u8005\u7684\u5176\u4ed6\u5b66\u4e60\u653b\u7565</p> <p>33. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 </p> <pre><code>class Solution {\npublic int findPeakElement(int[] nums) {\nint n = nums.length;\nint l = 0, r = n - 1;\nwhile (l &lt; r) {\nint mid = l + r &gt;&gt; 1;\nif (nums[mid] &gt; nums[mid + 1]) r = mid;\nelse l = mid + 1;\n}\nreturn r;\n}\n}\n\u4f5c\u8005\uff1aAC_OIer\n\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/find-peak-element/solution/gong-shui-san-xie-noxiang-xin-ke-xue-xi-qva7v/\n\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/","title":"VecQ \u5411\u91cf\u5316\u53c2\u6570\u91cf\u5316\u65b9\u6cd5","text":"<p>VecQ: Minimal Loss DNN Model Compression With Vectorized Weight Quantization. Cheng Gong, Yao Chen, Ye Lu, Tao Li, Cong Hao, Deming Chen, Fellow, IEEE</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_1","title":"\u5411\u91cf\u5316\u91cf\u5316\u6982\u8ff0","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_2","title":"\u4e3a\u4ec0\u4e48\u5411\u91cf\u5316","text":"<p>\u4f20\u7edf\u7684\u91cf\u5316\u65b9\u6cd5\u57fa\u672c\u90fd\u91c7\u7528L2 loss\u6765\u9009\u62e9\u6a21\u578b\u91cf\u5316\u6700\u4f18\u53c2\u6570\uff0c\u800c\u5176\u867d\u7136\u6548\u679c\u5c1a\u53ef\uff0c\u4f46\u4efb\u7136\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002  \u5982\u4e0a\u56fe\u56fe(b)\u6240\u793a\uff0c\u7531\u4e8e\u5728k\u4f4d\u7ea6\u675f\u4e0b\u4f18\u5316L2 loss\u7684\u975e\u51f8\u7279\u6027\uff0c\u91c7\u7528L2 loss\u8fed\u4ee3\u65b9\u6cd5\u627e\u5230\u7684\u6700\u4f18\u89e3\u4e3a\u7ea2\u70b9\uff0c\u867d\u7136\u662f\u6781\u503c\u70b9\uff0c\u4f46\u53ef\u80fd\u5e76\u4e0d\u662f\u6700\u4f18\u89e3\uff1b\u800c\u91c7\u7528\u5411\u91cf\u5316\u635f\u5931\u6c42\u89e3\uff0c\u6070\u597d\u80fd\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_3","title":"\u4f55\u4e3a\u5411\u91cf\u5316\u91cf\u5316","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c\u5411\u91cf\u5316\u91cf\u5316\u65b9\u6cd5\u5c31\u662f\u5c06\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u4e2d\u67d0\u5c42\u6216\u67d0\u901a\u9053\u7684\u6743\u91cd\u53c2\u6570\u91cf\u5316\u540e\u7684\u635f\u5931\u62c6\u5206\u4e3a\u65b9\u5411\u635f\u5931Jo\u4e0e\u6a21\u635f\u5931Jm\uff0c\u6839\u636e\u8fd9\u4e24\u79cd\u635f\u5931\uff08\u800c\u975eL2\u635f\u5931\uff09\u6765\u8c03\u6574\u91cf\u5316\u53c2\u6570\u8fdb\u800c\u5b9e\u73b0\u6a21\u578b\u91cf\u5316\u7684\u65b9\u6cd5\u3002</p> <p>\u5728\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u7ed9\u51fa\u4e86Jo\u4e0eJm\u7684\u5b9a\u4e49\uff0c\u5e76\u4e14\u5c06\u4e8c\u8005\u4e4b\u548c\u5b9a\u4e49\u4e3a\u5411\u91cf\u5316\u635f\u5931Jv\u3002  \u5728\u5206\u6790\u8868\u8fbe\u5f0f\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0cJo\u4e0eJm\u7684\u4f18\u5316\u53ef\u4ee5\u72ec\u7acb\u5b9e\u73b0\uff0c\u8fd9\u624d\u6709\u4e86\u540e\u7eed\u7684\u5411\u91cf\u5316\u91cf\u5316\u65b9\u6cd5\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_4","title":"\u5411\u91cf\u5316\u91cf\u5316\u6d41\u7a0b","text":"<p>\u7406\u8bba\u5206\u6790\u4e4b\u540e\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u5411\u91cf\u5316\u91cf\u5316\u65b9\u6848\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002  \u5176\u4e2d\uff0cSteering\u4ee3\u8868\u6700\u5c0f\u5316\u65b9\u5411\u635f\u5931\uff0cDriving\u4ee3\u8868\u6700\u5c0f\u5316\u6a21\u635f\u5931\u3002</p> <p>\u5173\u4e8eSteering\u64cd\u4f5c\uff0c\u6709\uff1a </p> <p>\u5173\u4e8eDriving\u64cd\u4f5c\uff0c\u6709: </p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5","text":"<p>\u7a0b\u5e8f\u5458\u7684\u57fa\u7840\u8bfe~</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/#20230228-dp","title":"2023/02/28 DP\u8fdb\u884c\u4e2d","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u52a8\u6001\u89c4\u5212  Dynamic Programming","text":"<p>!!!</p> <p>\u4e0d\u5b66\u4f1aDP\u4e0d\u6539\u7f51\u540d\uff01</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#01","title":"01\u80cc\u5305","text":"<p>\u6709n\u4e2a\u91cd\u91cf\u548c\u4ef7\u503c\u5206\u522b\u662fWi,vi\u7684\u7269\u54c1\u3002\u4ece\u8fd9\u4e9b\u7269\u54c1\u4e2d\u6311\u51fa\u603b\u91cd\u91cf\u4e0d\u8d85\u8fc7W\u7684\u7269\u54c1\uff0c\u6c42\u6240\u6709\u6311\u9009\u65b9\u6848\u4e2d\u4ef7\u503c\u603b\u548c\u7684\u6700\u5927\u503c\u3002</p> \u7a77\u7aed\u641c\u7d22(C++)<pre><code>    int n, W;\nint w[MAX_N], V[MAX_N];\n</code></pre>"},{"location":"%E5%A6%82%E6%88%91%E6%89%80%E8%A7%81/mkdocs_pro%26slove/","title":"mkdocs \u6240\u89c1\u6240\u89e3","text":""},{"location":"%E5%A6%82%E6%88%91%E6%89%80%E8%A7%81/mkdocs_pro%26slove/#mkdocsyml-nav-section","title":"mkdocs.yml --- nav section\u5d4c\u5957","text":"<p>\u5931\u8d25\u7684section\u5d4c\u5957</p> <p>nav:</p> <pre><code>- section:\n\n    - index.md\n\n    - sub_section:\n\n        - section/sub_section/index.md\n\n        - section/sub_section/part_1.md\n\n        - section/sub_section/part_2.md\n</code></pre> <p>\u6b63\u786e\u7684section\u5d4c\u5957</p> <p>nav:</p> <pre><code>- section:\n\n    - index.md\n\n    - sub_section:\n\n        - section/sub_section/index.md\n\n        - part_1: section/sub_section/part_1.md\n\n        - part_2: section/sub_section/part_2.md\n</code></pre> <p>\u95ee\u9898\uff1a\u7f3a\u5c11\u4e86part\u90e8\u5206\u7684\u547d\u540d\u3002</p>"},{"location":"%E5%A6%82%E6%88%91%E6%89%80%E8%A7%81/mkdocs_pro%26slove/#_1","title":"\u7ad9\u5185\u8df3\u8f6c\u94fe\u63a5","text":"<p>\u63a8\u8350\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u6700\u540e\u4e0d\u9700\u8981\u6dfb\u52a0\u6587\u4ef6\u540e\u7f00\u3002 \u6bd4\u5982<code>[\u8df3\u8f6c](./section/sub_section/part_1)</code>\u3002</p>"}]}