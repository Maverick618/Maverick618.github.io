{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":"<p>\u200b\u672c\u7ad9\u200b\u5171\u6709\u200b 36 \u200b\u4e2a\u200b\u9875\u9762\u200b\uff0c25191 \u200b\u4e2a\u200b\u5b57\u200b\uff0c4513 \u200b\u884c\u200b\u4ee3\u7801\u200b\u3002</p>"},{"location":"#_1","title":"\u5982\u200b\u6211\u200b\u6240\u89c1","text":"<p> \u200b\u7ea6\u200b 444 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p> <p>\u200b\u7d20\u200b\u65c5\u4e4b\u5f80\u200b\uff0c\u200b\u5fc3\u4e4b\u6240\u200b\u5411\u200b\u3002</p>"},{"location":"#_2","title":"\u6700\u65b0\u200b\u5185\u5bb9","text":"<ol> <li>Coq</li> <li>Isabelle</li> <li>GDB</li> <li>LiteOS-\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5206\u6790\u200b</li> </ol> \u200b\u76ee\u5f55\u200b \u200b\u5f53\u524d\u200b level 1 level 2 level 3 \u200b\u4f1a\u8bae\u200b/ CC\u200b\u4fe1\u606f\u5b89\u5168\u200b\u9ad8\u7b49\u7ea7\u200b\u8ba4\u8bc1\u200b\u53ca\u200b\u5f62\u5f0f\u5316\u200b\u65b9\u6cd5\u200b \u200b\u5fc3\u4e4b\u6240\u200b\u5411\u200b/ \u200b\u8bfb\u4e66\u200b/ \u200b\u767d\u94f6\u65f6\u4ee3\u200b\u9769\u547d\u200b\u65f6\u671f\u200b\u7684\u200b\u7231\u60c5\u200b \u200b\u8ba1\u7b97\u673a\u79d1\u5b66\u200b\u4e0e\u200b\u6280\u672f\u200b/ LeetCode/ April_2021March_2021September_2021 \u200b\u5b9a\u7406\u200b\u8bc1\u660e\u200b/ Coq/ environmentintros\u200b\u51fd\u6570\u200b\u4e0e\u200b\u8bc1\u660e\u200b Isabelle/ \u200b\u968f\u200b\u7b14\u8bb0\u200b ucos_correct/ init_goodis\u200b\u5206\u6790\u200b \u200b\u64cd\u4f5c\u7cfb\u7edf\u200b/ LiteOS/ note\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5206\u6790\u200b Linux\u200b\u8fdb\u7a0b\u200b\u901a\u4fe1\u200b \u200b\u6570\u636e\u7ed3\u6784\u200b\u4e0e\u200b\u7b97\u6cd5\u200b/ \u200b\u52a8\u6001\u200b\u89c4\u5212\u200b \u200b\u6742\u8bb0\u200b/ gdb_notesLatexMarkdownmkdocs_pro&amp;sloveML_notesVmware \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b/ PyTorch/ \u200b\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b\u6570\u636e\u5904\u7406\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u642d\u5efa\u200b\u7f51\u7edc\u200b\u8bad\u7ec3\u200b \u200b\u53c2\u6570\u200b\u91cf\u5316\u200b/ VecQ \u200b\u8bba\u6587\u200b/ \u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u9a8c\u8bc1\u200b/ Verification for eChronos OS \u200b\u7a0b\u5e8f\u903b\u8f91\u200b\u4e0e\u200b\u8bc1\u660e\u200b/ CaReSLhoare_logicSpoq <p>\u200b\u4f5c\u200b\u8bd7\u200b\u4e00\u9996\u200b</p> <p>\u200b\u4e34\u6c5f\u4ed9\u200b \u2022 \u200b\u5143\u591c\u200b\u6292\u6000\u200b</p> <p>\u200b\u6708\u200b\u4e0a\u200b\u67f3\u68a2\u200b\u706f\u6f2b\u200b\u6302\u200b\uff0c\u200b\u6843\u6c5f\u200b\u6708\u200b\u4e0b\u200b\u70df\u6865\u200b\u3002\u200b\u5f20\u706f\u7ed3\u5f69\u200b\u8fce\u200b\u5143\u5bb5\u200b\uff0c\u200b\u800c\u4eca\u200b\u597d\u666f\u200b\uff0c\u200b\u5374\u9022\u200b\u53cb\u4eba\u200b\u79bb\u200b\u3002</p> <p>\u200b\u8dc2\u671b\u200b\u773c\u6ce2\u200b\u7709\u9edb\u200b\u5904\u200b\uff0c\u200b\u5357\u5c71\u200b\u6811\u200b\u4e0b\u200b\u65b0\u82d7\u200b\u3002\u200b\u76f8\u51ed\u200b\u98ce\u597d\u200b\u4e0a\u200b\u91cd\u9704\u200b\uff0c\u200b\u6625\u98ce\u200b\u5341\u91cc\u200b\uff0c\u200b\u501f\u200b\u628a\u200b\u82e6\u6101\u200b\u6d88\u200b\u3002</p> <p>\u200b\u96ea\u540e\u200b\u968f\u6539\u200b</p> <p>\u200b\u5929\u96ea\u200b\u4e00\u8272\u200b\u65e0\u200b\u7ea4\u5c18\u200b\uff0c\u200b\u768e\u200b\u768e\u200b\u7a7a\u4e2d\u200b\u5bd2\u9165\u821e\u200b\u3002</p>"},{"location":"#_3","title":"\u66f4\u65b0\u200b\u65e5\u5fd7","text":"<ul> <li>2024/08/28 \u200b\u65b0\u589e\u200bindex\u200b\u7684\u200b\u6587\u4ef6\u200b\u5bfc\u822a\u200b\u8868\u200b\uff1b\u200b\u65b0\u589e\u200b\u751f\u6210\u200b\u6587\u4ef6\u200b\u5bfc\u822a\u200b\u8868\u683c\u200b\u7684\u200b\u811a\u672c\u200b\u3002</li> <li>2024/08/26 \u200b\u4fee\u6539\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e2d\u6587\u200b\u76ee\u5f55\u200b\u4ee5\u200b\u9002\u5e94\u200b\u81ea\u52a8\u5316\u200b\u811a\u672c\u200b\uff0c\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u66f4\u52a0\u200b\u5408\u7406\u200b\uff1b\u200b\u65b0\u589e\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u7b14\u8bb0\u200b\u3002</li> <li>2024/05/11 \u200b\u65b0\u589e\u200b\u201cLiteOS-\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5206\u6790\u200b\u201d\u3002</li> <li>2024/05/05 \u200b\u4fee\u6539\u200b\u4e3b\u9898\u200b\u548c\u200b\u5b57\u4f53\u200b\uff1b\u200b\u6dfb\u52a0\u200b\u641c\u7d22\u200b\u529f\u80fd\u200b\uff1b\u200b\u6dfb\u52a0\u200b\u8bc4\u8bba\u200b\u529f\u80fd\u200b\uff1b\u200b\u6dfb\u52a0\u200b\u7edf\u8ba1\u200b\u63d2\u4ef6\u200b\uff1b\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b\u8bfb\u4e66\u7b14\u8bb0\u200b\u548c\u200b\u8bba\u6587\u200b\u7b14\u8bb0\u200b\uff1b\u200b\u4fee\u6539\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u3002</li> <li>2023/05/06 \u200b\u65b0\u589e\u200bmkdocs_pro&amp;slove; \u200b\u5b8c\u5584\u200b\u7b14\u8bb0\u200b\u3002</li> <li>2023/05/05 \u200b\u65b0\u589e\u200b\u4e00\u4e9b\u200b\u76ee\u5f55\u200b\uff0c\u200b\u4fee\u6539\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\uff1b\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u7b14\u8bb0\u200b\u3002</li> </ul>"},{"location":"%E4%BC%9A%E8%AE%AE/CC%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%AB%98%E7%AD%89%E7%BA%A7%E8%AE%A4%E8%AF%81%E5%8F%8A%E5%BD%A2%E5%BC%8F%E5%8C%96%E6%96%B9%E6%B3%95/","title":"CC\u200b\u4fe1\u606f\u5b89\u5168\u200b\u9ad8\u7b49\u7ea7\u200b\u8ba4\u8bc1\u200b\u53ca\u200b\u5f62\u5f0f\u5316\u200b\u65b9\u6cd5","text":"<p> \u200b\u7ea6\u200b 301 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"%E4%BC%9A%E8%AE%AE/CC%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%AB%98%E7%AD%89%E7%BA%A7%E8%AE%A4%E8%AF%81%E5%8F%8A%E5%BD%A2%E5%BC%8F%E5%8C%96%E6%96%B9%E6%B3%95/#_1","title":"\u80cc\u666f","text":"<ul> <li>\u200b\u6570\u5b57\u5316\u200b\u53d1\u5c55\u200b\uff1a\u200b\u63d0\u4f9b\u200b\u4fbf\u5229\u200b\u7684\u200b\u540c\u65f6\u200b\u4e5f\u200b\u5e26\u6765\u200b\u4e86\u200b\u8bb8\u591a\u200b\u5b89\u5168\u6027\u200b\u7684\u200b\u6311\u6218\u200b\uff1b</li> <li>\u200b\u4e3a\u4ec0\u4e48\u200b\u8f6f\u4ef6\u200b\u6709\u200b\u8fd9\u4e48\u200b\u591a\u200b\u95ee\u9898\u200b\uff1f<ul> <li>\u200b\u5ba2\u89c2\u539f\u56e0\u200b\uff1a\u200b\u8f6f\u4ef6\u200b\u89c4\u6a21\u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u592a\u200b\u590d\u6742\u200b\uff1b</li> <li>\u200b\u4e3b\u89c2\u539f\u56e0\u200b\uff1a\u200b\u4e3b\u6d41\u200b\u8f6f\u4ef6\u5f00\u53d1\u200b\u65b9\u6cd5\u200b\u96be\u4ee5\u200b\u6ee1\u8db3\u200b\u5b89\u5168\u53ef\u9760\u200b\u8981\u6c42\u200b\u3002</li> </ul> </li> <li>\u200b\u5b89\u5168\u200b\u8ba4\u8bc1\u200b\uff1a<ul> <li>\u200b\u56fd\u9645\u200b\u4fe1\u606f\u6280\u672f\u200b\u5b89\u5168\u200b\u8bc4\u4f30\u200b\u6807\u51c6\u200b CC\uff08Common Criteria\uff09\uff1a\u200b\u5b9a\u6027\u5206\u6790\u200b</li> <li>\u200b\u5404\u884c\u5404\u4e1a\u200b\u5404\u6709\u200b\u6807\u51c6\u200b</li> <li>\u200b\u901a\u8fc7\u200b\u4e25\u683c\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e0e\u200b\u8bc1\u636e\u200b\u6765\u200b\u89e3\u51b3\u200b\u8f6f\u4ef6\u200b\u95ee\u9898\u200b</li> <li>\u200b\u5fc5\u5907\u200b\u6280\u672f\u200b\uff1a\u200b\u5f62\u5f0f\u5316\u200b\u65b9\u6cd5\u200b</li> </ul> </li> </ul> <p>## CC\u200b\u8ba4\u8bc1\u200b\u7684\u200b\u6807\u51c6\u200b\u548c\u200b\u65b9\u6cd5\u8bba\u200b   - \u200b\u4ece\u200b\u7cfb\u7edf\u200b\u7684\u200b\u201c\u200b\u63a5\u53e3\u200b + \u200b\u5f31\u70b9\u200b\u201d\u200b\u4e0a\u6765\u200b\u62b5\u5fa1\u200b\u653b\u51fb\u200b     - \u200b\u63a5\u53e3\u200b\u7684\u200b\u5f3a\u200b\u7ea6\u675f\u200b     - \u200b\u8bbe\u8ba1\u200b\u7684\u200b\u6f0f\u6d1e\u200b bug     - \u200b\u73af\u5883\u200b\u8fc7\u7a0b\u200b   - CC\u200b\u6807\u51c6\u200b\u8ba4\u8bc1\u200b\u662f\u200b\u5b89\u5168\u200b\u884c\u4e1a\u200b\u6700\u6709\u200b\u542b\u91d1\u91cf\u200b\u7684\u200b\u8ba4\u8bc1\u200b   - \u200b\u5b89\u5168\u200b\u76ee\u6807\u200b\uff1a\u200b\u4e0d\u540c\u200b\u4ea7\u54c1\u200b\u7684\u200b\u201c\u200b\u5b89\u5168\u200b\u201d\u200b\u662f\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b\uff0c\u200b\u9762\u4e34\u200b\u7684\u200b\u5a01\u80c1\u200b\u4e5f\u200b\u662f\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b\u3002\u200b\u8981\u200b\u4fdd\u62a4\u200b\u4ec0\u4e48\u200b\uff1f\u200b\u8981\u200b\u9632\u5fa1\u200b\u4ec0\u4e48\u200b\uff1f    </p>"},{"location":"%E4%BC%9A%E8%AE%AE/CC%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%AB%98%E7%AD%89%E7%BA%A7%E8%AE%A4%E8%AF%81%E5%8F%8A%E5%BD%A2%E5%BC%8F%E5%8C%96%E6%96%B9%E6%B3%95/#cc_1","title":"CC\u200b\u8ba4\u8bc1\u200b\u6d41\u7a0b\u200b\u3001\u200b\u6848\u4f8b\u200b\u548c\u200b\u5de5\u5177","text":""},{"location":"%E4%BC%9A%E8%AE%AE/CC%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%AB%98%E7%AD%89%E7%BA%A7%E8%AE%A4%E8%AF%81%E5%8F%8A%E5%BD%A2%E5%BC%8F%E5%8C%96%E6%96%B9%E6%B3%95/#cc_2","title":"\u56fd\u5185\u200bCC\u200b\u8ba4\u8bc1\u200b\u6d41\u7a0b","text":"<p> \u200b\u671b\u5b89\u200b\u597d\u50cf\u200b\u662f\u200b\u8d75\u8001\u5e08\u200b\u5f00\u200b\u7684\u200b\u516c\u53f8\u200b\u3002 \u200b\u5c0f\u89c4\u6a21\u200b\u7684\u200b\u597d\u200b\u505a\u200b\uff0c\u200b\u5927\u89c4\u6a21\u200b\u7684\u200b\u5b89\u5168\u200b\u9700\u6c42\u200b\u6761\u6570\u200b\u53ef\u80fd\u200b\u51e0\u5341\u6761\u200b\u6216\u8005\u200b\u4e0a\u200b\u767e\u6761\u200b\uff0c\u200b\u505a\u200b\u8d77\u6765\u200b\u5c31\u200b\u96be\u200b\u4e86\u200b\u3002</p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/","title":"\u5fc3\u4e4b\u6240\u200b\u5411","text":"<p> \u200b\u7ea6\u200b 20 \u200b\u4e2a\u200b\u5b57\u200b </p> \u200b\u76ee\u5f55\u200b \u200b\u5f53\u524d\u200b level 1 \u200b\u8bfb\u4e66\u200b/ \u200b\u767d\u94f6\u65f6\u4ee3\u200b\u9769\u547d\u200b\u65f6\u671f\u200b\u7684\u200b\u7231\u60c5"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/","title":"\u8bfb\u4e66","text":"<p> \u200b\u7ea6\u200b 0 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E7%99%BD%E9%93%B6%E6%97%B6%E4%BB%A3/","title":"\u767d\u94f6\u65f6\u4ee3","text":"<p> \u200b\u7ea6\u200b 16 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E7%99%BD%E9%93%B6%E6%97%B6%E4%BB%A3/#-","title":"- \u200b\u5728\u200b\u4e00\u7247\u200b\u9ed1\u6697\u200b\u91cc\u200b\uff0c\u200b\u4f60\u200b\u53ea\u80fd\u200b\u628a\u200b\u81ea\u5df1\u200b\u4ea4\u4ed8\u7ed9\u200b\u98ce\u200b\u3002","text":""},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E9%9D%A9%E5%91%BD%E6%97%B6%E6%9C%9F%E7%9A%84%E7%88%B1%E6%83%85/","title":"\u9769\u547d\u200b\u65f6\u671f\u200b\u7684\u200b\u7231\u60c5\u200b \u200b\u6458\u5f55\u200b\u4e0e\u200b\u60f3\u6cd5","text":"<p> \u200b\u7ea6\u200b 1354 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 5 \u200b\u5206\u949f\u200b</p> <p>\u200b\u800c\u4e14\u200b\u5979\u200b\u8fd8\u200b\u8bf4\u200b\uff0c\u200b\u770b\u6765\u200b\u751f\u6d3b\u200b\u5c31\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff0c\u200b\u7528\u4e0d\u7740\u200b\u5bf9\u200b\u5b83\u200b\u592a\u8fc7\u200b\u8ba4\u771f\u200b\u3002</p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E9%9D%A9%E5%91%BD%E6%97%B6%E6%9C%9F%E7%9A%84%E7%88%B1%E6%83%85/#_2","title":"\u81ed\u6c14","text":"<p>\u200b\u751f\u6d3b\u200b\u5728\u200b\u81ed\u6c14\u200b\u4e2d\u200b\uff0c\u200b\u6211\u200b\u6e10\u6e10\u200b\u628a\u200b\u59d3\u200b\u989c\u8272\u200b\u7684\u200b\u5927\u5b66\u751f\u200b\u5fd8\u6389\u200b\u4e86\u200b\u3002\u200b\u4e0d\u4ec5\u200b\u5fd8\u6389\u200b\u4e86\u200b\u59d3\u200b\u989c\u8272\u200b\u7684\u200b\u5927\u5b66\u751f\u200b\uff0c\u200b\u4e5f\u200b\u5fd8\u6389\u200b\u4e86\u200b\u6211\u200b\u66fe\u7ecf\u200b\u53d7\u200b\u632b\u6298\u200b\u3002\u200b\u6e10\u6e10\u200b\u5730\u200b\u6211\u200b\u548c\u200b\u5927\u5bb6\u200b\u4e00\u6837\u200b\uff0c\u200b\u76f8\u4fe1\u200b\u4e86\u200b\u81ed\u6c14\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u7684\u200b\u547d\u8fd0\u200b\u3002</p> <p>\u200b\u6709\u5173\u200b\u55c5\u89c9\u200b\uff0c\u200b\u8fd8\u6709\u200b\u4e00\u70b9\u200b\u8981\u200b\u8865\u5145\u200b\u7684\u200b\u5730\u65b9\u200b\u3002\u200b\u5f53\u200b\u4f60\u200b\u8d70\u8fdb\u200b\u4e00\u56e2\u200b\u81ed\u6c14\u200b\u65f6\u200b\uff0c\u200b\u603b\u5171\u200b\u53ea\u6709\u200b\u4e00\u6b21\u200b\u673a\u4f1a\u200b\u95fb\u5230\u200b\u5b83\u200b\uff0c\u200b\u7136\u540e\u200b\u5c31\u200b\u518d\u4e5f\u200b\u95fb\u200b\u4e0d\u5230\u200b\u4e86\u200b\u3002\u200b\u5f53\u200b\u8d70\u51fa\u200b\u81ed\u6c14\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u611f\u5230\u200b\u7a7a\u6c14\u200b\u65b0\u9c9c\u200b\u65e0\u6bd4\u200b\uff0c\u200b\u7cbe\u795e\u200b\u4e3a\u4e4b\u4e00\u632f\u200b\u3002\u200b\u6240\u4ee5\u200b\u5047\u5982\u200b\u4eba\u200b\u80fd\u591f\u200b\u95fb\u200b\u4e0d\u89c1\u200b\u521d\u59cb\u200b\u7684\u200b\u81ed\u6c14\u200b\uff0c\u200b\u53ea\u200b\u611f\u5230\u200b\u540e\u6765\u200b\u7684\u200b\u7a7a\u6c14\u200b\u65b0\u9c9c\u200b\uff0c\u200b\u4e00\u56e2\u200b\u81ed\u6c14\u200b\u5c31\u200b\u80fd\u200b\u53d8\u6210\u200b\u4ea7\u751f\u200b\u5feb\u4e50\u200b\u7684\u200b\u6c38\u52a8\u673a\u200b\u3002\u200b\u4f60\u200b\u53ea\u8981\u200b\u4e0d\u505c\u200b\u5730\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5927\u7caa\u200b\u573a\u91cc\u200b\u8dd1\u200b\u8fdb\u200b\u8dd1\u200b\u51fa\u200b\u5c31\u200b\u80fd\u200b\u5feb\u4e50\u200b\u3002\u200b\u5047\u5982\u200b\u4f60\u200b\u81ea\u5df1\u200b\u5c31\u662f\u200b\u6ee1\u8eab\u200b\u7684\u200b\u81ed\u6c14\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u66f4\u597d\u200b\uff0c\u200b\u65e0\u8bba\u200b\u5230\u200b\u54ea\u91cc\u200b\u90fd\u200b\u89c9\u5f97\u200b\u7a7a\u6c14\u200b\u65b0\u9c9c\u200b\u3002\u200b\u7a7a\u6c14\u200b\u91cc\u200b\u6ca1\u200b\u4e86\u200b\u81ed\u6c14\u200b\u5c31\u200b\u663e\u5f97\u200b\u7a00\u8584\u200b\uff0c\u200b\u6709\u200b\u4e86\u200b\u81ed\u6c14\u200b\u624d\u200b\u9ecf\u7a20\u200b\u3002</p> <p>\u200b\u636e\u6211\u6240\u77e5\u200b\uff0c\u200b\u4e16\u754c\u200b\u4e0a\u200b\u5404\u79cd\u200b\u4e1c\u897f\u200b\u91cc\u200b\uff0c\u200b\u5c31\u6570\u200b\u6c14\u5473\u200b\u6700\u200b\u6682\u65f6\u200b\u4e86\u200b\uff0c\u200b\u65e2\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u7559\u4e0b\u200b\u5e9f\u589f\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u7559\u4e0b\u200b\u5316\u77f3\u200b\u3002</p> <p>\u200b\u60f3\u6cd5\u200b\ud83e\udd14 </p> <p>T.S. \u200b\u827e\u7565\u7279\u200b\u8bf4\u200b\uff1a\u200b\u56db\u6708\u200b\u662f\u200b\u6b8b\u9177\u200b\u7684\u200b\u5b63\u8282\u200b\u3002\u200b\u4ed6\u200b\u8bf4\u5f97\u5bf9\u200b\u3002</p> <p>\u200b\u60f3\u6cd5\u200b:\u200b\u770b\u5230\u200b\u8fd9\u53e5\u200b\u8bdd\u200b\u65f6\u200b\u6b63\u597d\u200b\u662f\u200b\u56db\u6708\u200b\uff0c\u200b\u5929\u200b\uff0c\u200b\u6700\u8fd1\u200b\u5fc3\u60c5\u200b\u4e5f\u200b\u786e\u5b9e\u200b\u4e0d\u597d\u200b\u3002 \u200b\u7fbd\u6bdb\u7403\u200b\u9009\u62d4\u8d5b\u200b\u8f93\u200b\u4e86\u200b\uff0c\u200b\u5dee\u4e00\u70b9\u200b\u5c31\u200b\u80fd\u200b\u8fdb\u5165\u200b\u516b\u5f3a\u200b\u6253\u200b\u4e8c\u5341\u4e00\u5206\u200b\u7684\u200b\u6dd8\u6c70\u8d5b\u200b\u3002 \u200b\u4e0a\u8bfe\u200b\uff0c\u200b\u4e4b\u524d\u200b\u559c\u6b22\u200b\u90a3\u4e2a\u200b\u5973\u5b69\u200b\u5750\u5728\u200b\u6211\u200b\u540e\u9762\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u77e5\u9053\u200b\u662f\u200b\u662f\u200b\u5e78\u8fd0\u200b\u6216\u662f\u200b\u4e0d\u5e78\u200b\u3002\u200b\u5fc3\u60c5\u200b\u5f88\u200b\u590d\u6742\u200b\u3002\u200b\u68a6\u5230\u200b\u4e86\u200b\u4ee5\u524d\u200b\u7684\u200b\u4eba\u200b\uff0c\u200b\u8d8a\u200b\u56de\u5fc6\u200b\u8d8a\u200b\u96be\u53d7\u200b\u3002 \u200b\u4e0d\u5982\u200b\u591a\u200b\u770b\u70b9\u200b\u4e66\u200b\uff0c\u200b\u5b66\u4f1a\u200b\u4e60\u5fd9\u200b\u8d77\u6765\u200b\uff0c\u200b\u7d2f\u200b\u4e86\u200b\u6253\u4f1a\u200b\u6e38\u620f\u200b\uff0c\u200b\u633a\u200b\u597d\u200b\u7684\u200b\uff0c\u200b\u5c0f\u65f6\u5019\u200b\u60f3\u200b\u7684\u200b\u4e5f\u200b\u5b9e\u73b0\u200b\u4e86\u200b\uff0c\u200b\u6709\u200b\u7535\u8111\u200b\u4e86\u200b\u80fd\u200b\u73a9\u200b\u5f88\u591a\u200b\u6e38\u620f\u200b\uff0c\u200b\u4f46\u662f\u200b\u600e\u4e48\u200b\u611f\u89c9\u200b\u6ca1\u200b\u5c0f\u65f6\u5019\u200b\u90a3\u4e48\u200b\u5f00\u5fc3\u200b\u4e86\u200b\u5462\u200b\uff1f</p> <p>\u200b\u8bbd\u523a\u200b\u4e48\u200b</p> <p>\u200b\u6211\u200b\u8fde\u200b\u60f3\u90fd\u4e0d\u60f3\u200b\u3002\u200b\u90a3\u4e2a\u200b\u65f6\u671f\u200b\u7684\u200b\u4e00\u5207\u200b\u8981\u200b\u6709\u200b\u6700\u9ad8\u7ea7\u200b\u7684\u200b\u667a\u6167\u200b\u624d\u80fd\u200b\u7406\u89e3\u200b\uff0c\u200b\u800c\u200b\u6211\u200b\u53ea\u6709\u200b\u6700\u200b\u4f4e\u7ea7\u200b\u7684\u200b\u667a\u6167\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u6839\u672c\u200b\u5c31\u200b\u4e0d\u662f\u200b\u6218\u58eb\u200b\uff0c\u200b\u800c\u662f\u200b\u5c0f\u5b69\u5b50\u200b\u624b\u91cc\u200b\u7684\u200b\u6ce5\u4eba\u200b\u2014\u2014\u200b\u4e00\u5ffd\u513f\u200b\u88ab\u200b\u6446\u200b\u5230\u200b\u684c\u9762\u4e0a\u200b\u6392\u5217\u6210\u200b\u9635\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u6218\u4e89\u573a\u9762\u200b\uff1b\u200b\u4e00\u5ffd\u513f\u200b\u53c8\u200b\u88ab\u200b\u5c0f\u624b\u200b\u4e00\u6325\u200b\uff0c\u200b\u7f3a\u200b\u80f3\u818a\u200b\u5c11\u817f\u200b\u5730\u200b\u8dcc\u200b\u56de\u200b\u73a9\u5177\u7bb1\u200b\u91cc\u200b\u3002\u200b\u4f46\u662f\u200b\u6211\u4eec\u200b\u6210\u4e3a\u200b\u522b\u4eba\u200b\u624b\u91cc\u200b\u7684\u200b\u6ce5\u4eba\u200b\u5374\u200b\u4e0d\u662f\u200b\u81ea\u5df1\u200b\u7684\u200b\u8d23\u4efb\u200b\u3002\u200b\u6211\u200b\u8fd8\u200b\u6ca1\u6709\u200b\u51fa\u4e16\u200b\uff0c\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u6210\u200b\u4e86\u200b\u6ce5\u4eba\u200b\u3002\u200b\u8fd9\u79cd\u200b\u4e8b\u5b9e\u200b\u4f7f\u200b\u6211\u200b\u6df1\u53d7\u200b\u4f24\u5bb3\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u4e0d\u914d\u200b\uff0c\u200b\u800c\u662f\u200b\u56e0\u4e3a\u200b\u6ca1\u4eba\u200b\u62ff\u200b\u6211\u4eec\u200b\u5f53\u771f\u200b\u2014\u2014\u200b\u800c\u200b\u81ea\u5df1\u200b\u62ff\u200b\u81ea\u5df1\u200b\u5f53\u771f\u200b\u53c8\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u3002</p> <p>\u200b\u60f3\u6cd5\u200b\ud83e\udd14</p> <p>\u200b\u5979\u200b\u7684\u200b\u4e00\u4e3e\u4e00\u52a8\u200b\uff0c\u200b\u8fd8\u6709\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5ff5\u5934\u200b\u90fd\u200b\u662f\u200b\u51fa\u4e8e\u200b\u522b\u4eba\u200b\u7684\u200b\u6446\u5e03\u200b\u3002\u200b\u8fd9\u5c31\u662f\u8bf4\u200b\uff0c\u200b\u5979\u200b\u4ece\u200b\u9aa8\u5934\u200b\u91cc\u200b\u4e0d\u200b\u771f\u200b\u3002\u200b\u60f3\u5230\u200b\u4e86\u200b\u8fd9\u200b\u4e00\u70b9\u200b\uff0c\u200b\u6211\u200b\u5c31\u200b\u5f00\u59cb\u200b\u9633\u75ff\u200b\u4e86\u200b\u3002</p> <p>\u200b\u60f3\u6cd5\u200b:\u200b\u90fd\u200b\u4e0d\u200b\u201c\u200b\u771f\u200b\u201d\uff0c\u200b\u786e\u5b9e\u200b\u6709\u200b\u6000\u7591\u200b\u8272\u5f69\u200b</p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E9%9D%A9%E5%91%BD%E6%97%B6%E6%9C%9F%E7%9A%84%E7%88%B1%E6%83%85/#_3","title":"\u6211","text":"<p>\u200b\u6211\u200b\u4e0d\u200b\u77e5\u9053\u200b\u6211\u200b\u5f88\u200b\u53ef\u7231\u200b\u3002\u200b\u6211\u200b\u4e0d\u200b\u77e5\u9053\u200b\u6211\u200b\u662f\u200b\u72e0\u5fc3\u200b\u7684\u200b\u9b3c\u5b50\u200b\u3002\u200b\u6211\u200b\u53ea\u200b\u77e5\u9053\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8c1c\u5e95\u200b\u5c31\u8981\u200b\u63ed\u5f00\u200b\u3002\u200b\u800c\u200b\u8fd9\u4e2a\u200b\u8c1c\u5e95\u200b\u63ed\u5f00\u200b\u4e86\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4e00\u5207\u200b\u53c8\u200b\u90fd\u200b\u7d22\u7136\u65e0\u5473\u200b\u3002</p> <p>\u200b\u76f4\u5230\u73b0\u5728\u200b\u6709\u200b\u597d\u591a\u200b\u4e8b\u60c5\u200b\u6211\u200b\u8fd8\u662f\u200b\u4e0d\u200b\u660e\u767d\u200b\uff0c\u200b\u6211\u200b\u60f3\u200b\uff0c\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u8bf4\u660e\u200b\u6211\u200b\u7279\u522b\u200b\u806a\u660e\u200b\uff0c\u200b\u5c31\u662f\u200b\u8bf4\u660e\u200b\u6211\u200b\u7279\u522b\u200b\u7b28\u200b\uff0c\u200b\u4e24\u8005\u200b\u5fc5\u5c45\u5176\u4e00\u200b\u3002 </p> <p>\u200b\u6211\u200b\u89c9\u5f97\u200b\u81ea\u5df1\u200b\u662f\u200b\u4e2a\u200b\u4e0d\u4f1a\u200b\u79cd\u5730\u200b\u7684\u200b\u519c\u6c11\u200b\uff0c\u200b\u603b\u662f\u200b\u8d76\u4e0d\u4e0a\u200b\u8282\u6c14\u200b\u3002</p> <p>\u200b\u6709\u200b\u9769\u547d\u200b\u7684\u200b\u6027\u7231\u200b\uff0c\u200b\u8d77\u6e90\u4e8e\u200b\u9769\u547d\u200b\u9752\u6625\u200b\u6218\u6597\u200b\u53cb\u8c0a\u200b\uff1b\u200b\u6709\u200b\u4e0d\u200b\u9769\u547d\u200b\u7684\u200b\u6027\u7231\u200b\uff0c\u200b\u90a3\u200b\u5c31\u662f\u200b\u53d7\u5230\u200b\u8d44\u4ea7\u9636\u7ea7\u200b\u601d\u60f3\u200b\u7684\u200b\u8150\u8680\u200b\u548c\u200b\u9636\u7ea7\u200b\u654c\u4eba\u200b\u7684\u200b\u5f15\u8bf1\u200b\uff0c\u200b\u5e72\u200b\u51fa\u200b\u82df\u4e14\u200b\u7684\u200b\u4e8b\u6765\u200b\u3002\u200b\u5047\u5982\u200b\u4e00\u79cd\u200b\u996d\u200b\u4e0d\u200b\u6d89\u53ca\u200b\u65b0\u200b\u793e\u4f1a\u200b\uff0f\u200b\u65e7\u793e\u4f1a\u200b\uff0c\u200b\u4e00\u79cd\u200b\u6027\u7231\u200b\u4e0d\u200b\u6d89\u53ca\u200b\u9769\u547d\u200b\uff0f\u200b\u4e0d\u200b\u9769\u547d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5fc5\u5b9a\u200b\u5c42\u6b21\u200b\u5f88\u200b\u4f4e\u200b\u3002\u200b\u8fd9\u200b\u90fd\u200b\u662f\u200b\u4e9b\u200b\u5f88\u200b\u590d\u6742\u200b\u7684\u200b\u7406\u8bba\u200b\uff0c\u200b\u5728\u200b\u8fd9\u65b9\u9762\u200b\u6211\u200b\u5411\u6765\u200b\u9c81\u949d\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u5c0f\u5fc3\u7ffc\u7ffc\u200b\u5730\u200b\u907f\u5f00\u200b\u8fd9\u4e9b\u200b\u9886\u57df\u200b\uff0c\u200b\u957f\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u552f\u200b\u8da3\u5473\u200b\u4e3b\u4e49\u8005\u200b\uff0c\u200b\u53ea\u60f3\u200b\u5e72\u4e9b\u200b\u6709\u200b\u96be\u5ea6\u200b\u6709\u200b\u5174\u8da3\u200b\u7684\u200b\u4e8b\u200b\uff0c\u200b\u6027\u6b32\u200b\u98df\u6b32\u200b\u90fd\u200b\u5f88\u200b\u4f4e\u200b\u3002\u200b\u6211\u200b\u514b\u5236\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u65b9\u9762\u200b\uff0c\u200b\u662f\u56e0\u4e3a\u200b\u5b83\u4eec\u200b\u90fd\u200b\u88ab\u200b\u4eba\u200b\u8d25\u574f\u200b\u4e86\u200b\u3002</p> <p>\u200b\u6211\u200b\u88ab\u200b\u5939\u200b\u5728\u200b\u4e24\u79cd\u200b\u667a\u6167\u200b\u4e4b\u95f4\u200b\uff0c\u200b\u65e5\u6e10\u200b\u6194\u60b4\u200b\u3002</p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E9%9D%A9%E5%91%BD%E6%97%B6%E6%9C%9F%E7%9A%84%E7%88%B1%E6%83%85/#_4","title":"\u59d3\u200b\u989c\u8272\u200b\u7684\u200b\u5927\u5b66\u751f","text":"<p>\u200b\u5979\u200b\u8bf4\u200b\u662f\u200b\u5417\u200b\uff0c\u200b\u6f02\u4eae\u200b\u7684\u200b\u8138\u4e0a\u200b\u6beb\u65e0\u200b\u8868\u60c5\u200b\u3002</p> <p>\u200b\u90a3\u65f6\u200b\u6211\u200b\u60f3\u8d77\u200b\u59d3\u200b\u989c\u8272\u200b\u7684\u200b\u5927\u5b66\u751f\u200b\uff0c\u200b\u5634\u91cc\u200b\u5c31\u200b\u6709\u200b\u4e00\u80a1\u200b\u8840\u8165\u5473\u200b\uff0c\u200b\u548c\u200b\u8fd0\u52a8\u8fc7\u5ea6\u200b\u7684\u200b\u611f\u89c9\u200b\u662f\u200b\u4e00\u6837\u200b\u7684\u200b\u3002\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u5728\u200b\u4e00\u8d77\u200b\u7ecf\u5386\u200b\u4e86\u200b\u5931\u8d25\u200b\uff0c\u200b\u53c8\u200b\u76f8\u4e92\u200b\u7231\u8fc7\u200b\u2014\u2014\u200b\u518d\u200b\u6ca1\u6709\u200b\u6bd4\u200b\u8fd9\u200b\u66f4\u200b\u6b8b\u9177\u200b\u7684\u200b\u4e8b\u200b\u4e86\u200b\u3002\u200b\u5047\u5982\u200b\u6211\u4eec\u200b\u80fd\u200b\u5728\u200b\u4e00\u8d77\u200b\u751f\u6d3b\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u90fd\u200b\u4f1a\u200b\u60f3\u200b\u628a\u200b\u5bf9\u65b9\u200b\u6495\u788e\u200b\u3002\u200b\u5047\u5982\u200b\u4e0d\u80fd\u200b\u5728\u200b\u4e00\u8d77\u200b\u751f\u6d3b\u200b\uff0c\u200b\u53c8\u200b\u4f1a\u200b\u7ec8\u8eab\u200b\u4e92\u76f8\u200b\u6000\u5ff5\u200b\u3002\u200b\u4e00\u65b9\u200b\u7231\u200b\uff0c\u200b\u4e00\u65b9\u200b\u4e0d\u7231\u200b\uff0c\u200b\u90fd\u200b\u8981\u200b\u597d\u200b\u4e00\u70b9\u200b\u3002\u200b\u5047\u5982\u200b\u8c01\u200b\u90fd\u200b\u4e0d\u200b\u7231\u200b\u8c01\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u5fc3\u5e73\u6c14\u548c\u200b\u5730\u200b\u5728\u200b\u4e00\u8d77\u200b\u4eab\u53d7\u200b\u6027\u751f\u6d3b\u200b\u3002\u200b\u8fd9\u6837\u200b\u662f\u200b\u6700\u597d\u200b\u7684\u200b\u4e86\u200b\u3002\u200b\u867d\u7136\u200b\u5982\u6b64\u200b\uff0c\u200b\u6211\u200b\u8fd8\u662f\u200b\u60f3\u5ff5\u200b\u5979\u200b\u3002\u200b\u56e0\u4e3a\u200b\u90a3\u200b\u662f\u200b\u4e00\u6b21\u200b\u5931\u8d25\u200b\uff0c\u200b\u5931\u8d25\u200b\u603b\u662f\u200b\u8ba9\u200b\u6211\u200b\u9b42\u68a6\u7cfb\u200b\u4e4b\u200b\u3002</p>"},{"location":"%E5%BF%83%E4%B9%8B%E6%89%80%E5%90%91/%E8%AF%BB%E4%B9%A6/%E9%9D%A9%E5%91%BD%E6%97%B6%E6%9C%9F%E7%9A%84%E7%88%B1%E6%83%85/#_5","title":"\u201c\u200b\u5f00\u5f69\u200b\u201d","text":"<p>\u200b\u4ed6\u4eec\u200b\u90fd\u200b\u4e0d\u200b\u8ba4\u4e3a\u200b\u5f00\u5f69\u200b\u662f\u200b\u968f\u673a\u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u8ba4\u4e3a\u200b\u8fd9\u4ef6\u200b\u4e8b\u200b\u8fd8\u6709\u200b\u4eba\u7ba1\u200b\u7740\u200b\u54ea\u200b\u2014\u2014\u200b\u597d\u597d\u200b\u8868\u73b0\u200b\u5c31\u200b\u80fd\u200b\u4e0d\u200b\u72af\u9519\u8bef\u200b\uff0c\u200b\u5403\u200b\u4e86\u200b\u6708\u7ecf\u200b\u7eb8\u200b\u5c31\u200b\u80fd\u200b\u5f97\u200b\u4e00\u5927\u7b14\u200b\u5f69\u91d1\u200b\uff0c\u200b\u7b49\u7b49\u200b\u3002\u200b\u5f53\u7136\u200b\uff0c\u200b\u8d1f\u5f69\u200b\u548c\u200b\u6b63\u5f69\u200b\u6709\u200b\u5f88\u5927\u200b\u7684\u200b\u533a\u522b\u200b\u3002\u200b\u524d\u8005\u200b\u4e00\u671f\u200b\u671f\u5f00\u200b\u4e0b\u53bb\u200b\uff0c\u200b\u6478\u5f69\u200b\u7684\u200b\u4eba\u200b\u8d8a\u6765\u8d8a\u5c11\u200b\uff0c\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u8fdf\u65e9\u200b\u8981\u200b\u4e2d\u200b\u7684\u200b\u611f\u89c9\u200b\uff1b\u200b\u540e\u8005\u200b\u662f\u200b\u8d8a\u5f00\u200b\u6478\u5f69\u200b\u7684\u200b\u4eba\u200b\u8d8a\u200b\u591a\u200b\uff0c\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u6c38\u8fdc\u200b\u4e2d\u200b\u4e0d\u4e86\u200b\u7684\u200b\u611f\u89c9\u200b\u3002</p> <p>\u200b\u751f\u200b\u5728\u200b\u9769\u547d\u200b\u65f6\u671f\u200b\u7684\u200b\u4eba\u200b\u90fd\u200b\u80fd\u591f\u200b\u89e3\u5f00\u200b\u8fd9\u9053\u9898\u200b\uff0c\u200b\u53ea\u200b\u5dee\u4e2a\u200b\u65e9\u665a\u200b\u3002\u200b\u800c\u200b\u6ca1\u6709\u200b\u751f\u200b\u5728\u200b\u9769\u547d\u200b\u65f6\u671f\u200b\u7684\u200b\u4eba\u200b\u5c31\u200b\u6c38\u8fdc\u200b\u4e5f\u200b\u89e3\u4e0d\u5f00\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/","title":"\u8ba1\u7b97\u673a\u79d1\u5b66\u200b\u4e0e\u200b\u6280\u672f","text":"<p> \u200b\u7ea6\u200b 102 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/#_1","title":"\u8ba1\u7b97\u673a\u79d1\u5b66\u200b\u4e0e\u200b\u6280\u672f","text":"\u76ee\u5f55\u200b \u200b\u5f53\u524d\u200b level 1 level 2 LeetCode/ April_2021March_2021September_2021 \u200b\u5b9a\u7406\u200b\u8bc1\u660e\u200b/ Coq/ environmentintros\u200b\u51fd\u6570\u200b\u4e0e\u200b\u8bc1\u660e\u200b Isabelle/ \u200b\u968f\u200b\u7b14\u8bb0\u200b ucos_correct/ init_goodis\u200b\u5206\u6790\u200b \u200b\u64cd\u4f5c\u7cfb\u7edf\u200b/ LiteOS/ note\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5206\u6790\u200b Linux\u200b\u8fdb\u7a0b\u200b\u901a\u4fe1\u200b \u200b\u6570\u636e\u7ed3\u6784\u200b\u4e0e\u200b\u7b97\u6cd5\u200b/ \u200b\u52a8\u6001\u200b\u89c4\u5212\u200b \u200b\u6742\u8bb0\u200b/ gdb_notesLatexMarkdownmkdocs_pro&amp;sloveML_notesVmware \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b/ PyTorch/ \u200b\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b\u6570\u636e\u5904\u7406\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u642d\u5efa\u200b\u7f51\u7edc\u200b\u8bad\u7ec3\u200b \u200b\u53c2\u6570\u200b\u91cf\u5316\u200b/ VecQ"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/","title":"\u8bb0\u5f55\u200b\u529b\u6263\u200b\u5237\u9898\u200b\u6240\u200b\u60f3","text":"<p> \u200b\u7ea6\u200b 8 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/","title":"April 2021","text":"<p> \u200b\u7ea6\u200b 2086 \u200b\u4e2a\u200b\u5b57\u200b  548 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 14 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#01","title":"01 \u200b\u7b28\u200b\u9636\u4e58","text":"<p>\u3010\u200b\u7b28\u200b\u9636\u4e58\u200b\u3011</p> <ol> <li>\u200b\u628a\u200b\u6211\u200b\u7b28\u6b7b\u4e86\u200b\u3002</li> </ol> <p>\u200b\u7528\u200bVScode\uff0c\u200b\u5199\u200bc++ \u200b\u90fd\u200b\u4e0d\u200b\u77e5\u9053\u200b\u8981\u200b\u7528\u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200bstd\uff1b</p> <p>using namespace std;</p> <p>\u3010\u200b\u7b28\u200b\u601d\u8def\u200b\u3011 \u200b\u4e00\u5982\u65e2\u5f80\u200b\u7684\u200bswitch\u200b\u8ba1\u7b97\u5668\u200b\u601d\u8def\u200b\uff01 \u200b\u5728\u200b\u8fd0\u7b97\u200b\u51cf\u6cd5\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8bef\u7528\u200b\u4e86\u200b\u9012\u5f52\u200b\uff01\u200b\u5bfc\u81f4\u200b\u8fd0\u7b97\u200b\u51fa\u9519\u200b\uff01</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a10\n\u200b\u8f93\u51fa\u200b\uff1a12\n\u200b\u89e3\u91ca\u200b\uff1a12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n                        (\u200b\u5982\u679c\u200b\u51cf\u6cd5\u200b\u7528\u200b\u9012\u5f52\u200b\uff0c +3 \u200b\u5c31\u200b\u4f1a\u200b\u53d8\u6210\u200b -3 )  \n</code></pre> <pre><code>class Solution {\npublic:\n    int clumsy(int N){\n        int flag = 0; //\u200b\u6807\u8bc6\u7b26\u200b\uff0c\u200b\u7528\u6765\u200b\u66f4\u6539\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u7b2c\u4e00\u6b21\u200b\u4e3a\u200b\u4e58\u6cd5\u200b\u8fd0\u7b97\u200b\n        int ans = N; //\u200b\u8fd4\u56de\u503c\u200b\n        N--;\n        while(N){\n            switch(flag % 4){\n                case 0:\n                    ans *= N;\n                    break;\n                case 1:\n                    ans /= N;\n                    break;\n                case 2:\n                    ans += N;\n                    break;\n                case 3:\n                    if(N &gt;= 3){\n                        ans -= N * (N - 1) / (N - 2);\n                        N -= 2;\n                        flag = 1;\n                    }else if( N == 2){\n                        ans -= 2;\n                        N = 1;\n                    }else{\n                        ans--;\n                    }\n                    break;\n                default:\n                    break;\n            }\n            flag++;\n            N--;\n        }\n        return ans; \n    }\n};\n</code></pre> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7684\u200b\u795e\u5947\u200b\u601d\u8def\u200b\u3011</p> <pre><code>// \u200b\u5206\u6210\u200b4\u200b\u7684\u200b\u9012\u5f52\u200b\u601d\u8def\u200b\nclass Solution {\npublic:\n int clumsy(int N) {\n        if(N&lt;=2)return N;\n        if(N==3)return 6;\n        int sum=N*(N-1)/(N-2)+N-3;\n        N-=4;\n        while(N&gt;=4){\n         sum+=(-N*(N-1)/(N-2)+N-3);\n         N-=4;\n        }\n        return sum-clumsy(N);\n    }\n};\n\n//\u200b\u627e\u200b\u89c4\u5f8b\u200b\nclass Solution {\npublic:\n    int clumsy(int N){\n        if(N&gt;4)\n        {\n            switch(N%4)\n            {\n                case 0:return N+1;break;\n                case 1:return N+2;break;\n                case 2:return N+2;break;\n                case 3:return N-1;break;\n                default:break;\n            }\n        }\n        switch(N)\n        {\n            case 0:return 0;\n            case 1:return 1;\n            case 2:return 2;\n            case 3:return 6;\n            case 4:return 7;\n            default:break;\n        }\n        return 0;\n    }\n};\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#02","title":"02 \u200b\u76f4\u65b9\u56fe\u200b\u7684\u200b\u6c34\u91cf","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#03","title":"03 \u200b\u6700\u957f\u200b\u516c\u5171\u200b\u5b50\u200b\u5e8f\u5217","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#04","title":"04 \u200b\u68ee\u6797\u200b\u4e2d\u200b\u7684\u200b\u5154\u5b50","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#05","title":"05 \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#06-ii","title":"06 \u200b\u5220\u9664\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879\u200b II","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u7c7b\u4f3c\u200b\u53ea\u7559\u200b\u4e00\u4e2a\u200b\u91cd\u590d\u200b\u9879\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u7b2c\u4e8c\u4e2a\u200b\u5224\u65ad\u200b\u6761\u4ef6\u200b\uff0c\u200b\u8ba9\u200b\u5176\u80fd\u200b\u4fdd\u6709\u200b\u4e24\u4e2a\u200b\u91cd\u590d\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</li> <li>\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b2\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u4e0d\u7528\u200b\u5904\u7406\u200b\u3002</li> <li>\u200b\u56e0\u4e3a\u200b\u8981\u200b\u5904\u7406\u200b +2 \u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6709\u200b\u6570\u636e\u200b\u8d8a\u754c\u200b\u7684\u200b\u60c5\u51b5\u200b\u53d1\u751f\u200b\uff0c\u200b\u5e72\u8106\u200b\u5728\u200b\u540e\u9762\u200b\u52a0\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u540e\u9762\u200b\u5728\u200b\u628a\u200b\u5b83\u200b\u5220\u6389\u200b\u3002</li> </ol> <p>\u3010\u200b\u4e0d\u8db3\u200b\u3011</p> <ol> <li> <p>\u200b\u6ca1\u6709\u200b\u5145\u5206\u5229\u7528\u200b\u6570\u7ec4\u200b\u9012\u589e\u200b\u8fd9\u4e2a\u200b\u6761\u4ef6\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\u7684\u200b\u65f6\u5019\u200b\u7528\u200b\u4e86\u200b\u4e00\u4e0b\u200b\u3002</p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u5f88\u200b\u7b28\u62d9\u200b\uff1a</p> </li> </ol> <p>\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a8 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b57.79%\u200b\u7684\u200b\u7528\u6237\u200b</p> <p>\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a10.7 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b38.78%\u200b\u7684\u200b\u7528\u6237\u200b</p> <p>\u3010\u200b\u4ee3\u7801\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums) {\n        if(nums.size() &lt; 3)\n            return nums.size();\n\n        int i = 0, j = 0;\n        nums.push_back(nums[0]-1);\n        nums.push_back(nums[0]-1);\n        for (; i &lt; nums.size() - 2; ++i ){\n            if(nums[i] != nums[i + 1])\n                nums[j++] = nums[i];\n            else if(nums[i + 1] != nums[i + 2])\n                nums[j++] = nums[i];\n        }\n        i += 2;\n        while(i - j){\n            nums.pop_back();\n            j++;\n        }\n        return nums.size();\n    }\n};\n</code></pre> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u3011\u200b\u8bb8\u200b\u540c\u5b66\u200b\u4e0d\u4f1a\u200b\u8ba4\u8f93\u200b\u7684\u200b</p> <ol> <li> <p>\u200b\u5904\u7406\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\u4e0a\u200b\u91c7\u7528\u200b\u76f8\u53cd\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u65e2\u7136\u200b\u6570\u636e\u200b\u8d8a\u754c\u200b\u7684\u200b\u60c5\u51b5\u200b\u5fc5\u7136\u200b\u662f\u200b\u5728\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b2\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u624d\u200b\u4f1a\u200b\u53d1\u751f\u200b\uff0c\u200b\u6545\u200b\u4e0b\u6807\u200bindex - 2 &gt; 0  \u200b\u4e00\u5b9a\u200b\u6210\u7acb\u200b\u3002</p> </li> <li> <p>\u200b\u601d\u8def\u200b\u4e5f\u200b\u4e0d\u200b\u592a\u200b\u4e00\u6837\u200b\uff0cTa\u200b\u7684\u200b\u601d\u8def\u200b(\u200b\u6211\u200b\u6240\u200b\u7406\u89e3\u200b\u7684\u200b)\uff0c\u200b\u5e94\u8be5\u200b\u662f\u200b\uff0cindex\u200b\u4f5c\u4e3a\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e0b\u6807\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u6709\u200b\uff0c</p> </li> </ol> <p>nums[index] != nums[index - 2] </p> <p>\u200b\u56e0\u6b64\u200b\u53ea\u200b\u9700\u200b\u627e\u5230\u200b\u539f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7b26\u5408\u200b nums[i] != nums[index - 2] \u200b\u7684\u200b nums[i] \u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u8d4b\u503c\u200b\u7ed9\u200bnums[index] \u200b\u5373\u53ef\u200b\uff0c\u200b\u540c\u65f6\u200bindex\u200b\u9700\u8981\u200b\u81ea\u52a8\u200b\u52a0\u4e00\u200b\uff0c\u200b\u5373\u200b\u80fd\u591f\u200b\u5bfb\u627e\u200b\u4e0b\u200b\u4e00\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff0c</p> <p>nums  = [1,2,2,2,3,3];</p> <p>index = 2, i = 2;</p> <p>\u200b\u663e\u7136\u200b\uff0c</p> <p>nums[index] = 2, nums[index - 2] = 0, nums[i] = 2,</p> <p>\u200b\u6545\u200b line a \u200b\u8bed\u53e5\u200b\u4f1a\u200b\u88ab\u200b\u6267\u884c\u200b\uff0c\u200b\u6267\u884c\u200b\u540e\u200b\u6709\u200b\uff0c</p> <p>index = 3, nums[index] = 2, nums[index - 2] = 2;</p> <p>\u200b\u5faa\u73af\u200b\u4e00\u6b21\u200b\u540e\u200b(\u200b\u5373\u200b\u4e0a\u8ff0\u200bline a\u200b\u6267\u884c\u200b\u540e\u200b i \u200b\u4f1a\u52a0\u200b1)\uff0c</p> <p>\u200b    i = 3, nums[i] = 2,</p> <p>\u200b\u4e0d\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0c\u200b\u800c\u540e\u200b,</p> <pre><code>    i = 4, nums[i] = 3,\n</code></pre> <p>\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0cline a\u200b\u88ab\u200b\u6267\u884c\u200b\uff0c</p> <p>index = 4,  nums[index] = 3, nums [index - 2] = 2, nums  = [1,2,2,3,3,3]</p> <p>\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5143\u7d20\u200b2\u200b\u53ea\u200b\u4fdd\u7559\u200b\u4e86\u200b\u4e24\u9879\u200b\uff0c\u200b\u540c\u6837\u200b\u7684\u200b\uff0c\u200b\u540e\u7eed\u200b\u7684\u200b\u5143\u7d20\u200b3\u200b\u4e5f\u200b\u4f1a\u200b\u53ea\u200b\u4fdd\u7559\u200b\u4e24\u9879\u200b\uff08index\u200b\u53ea\u4f1a\u200b\u8bb0\u5230\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b3\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u6700\u540e\u200bindex\u200b\u7684\u200b\u503c\u4f4d\u200b\u4e3a\u200b5\u200b\u800c\u200b\u4e0d\u662f\u200b6\uff09\u3002</p> <ol> <li>\u200b\u540c\u6837\u200b\u7684\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b2\u200b\u7684\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u4f5c\u200b\u5904\u7406\u200b\u3002</li> </ol> <pre><code>// \u200b\u4ee3\u7801\u200b\u53c2\u8003\u200b\u540e\u200b\u7565\u6709\u200b\u4fee\u6539\u200b\uff0c\u200b\u8bc4\u8bba\u8005\u200b\u4f3c\u4e4e\u200b\u662f\u200b\u7528\u200b\u7684\u200bC#\u200b\u4ee3\u7801\u200b\nclass Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums){\n        if(nums.size() &lt;= 2) return nums.size();\n\n        int index = 2;\n        for(int i = 2; i &lt; nums.size(); i++){\n            if(nums[i] != nums[index-2])\n                nums[index++] = nums[i];// line a\n        }\n\n        return index;\n    }\n};\n</code></pre> <p>\u3010\u200b\u5176\u4ed6\u200b\u53c2\u8003\u200b\u3011</p> <ol> <li>\u200b\u5b9d\u5b9d\u200b\u53ef\u4e56\u200b\u4e86\u200b</li> <li>\u200b\u5c06\u200b\u524d\u9762\u200b\u7684\u200b\u957f\u5ea6\u200b\u5224\u65ad\u200b\u53d6\u6d88\u200b\u7684\u200b\u65b9\u6cd5\u200b: Passion</li> <li>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b</li> </ol> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011</p> <ol> <li>\u200b\u5728\u200b\u6bd4\u8f83\u200b\u5f53\u4e2d\u200b\uff0c\u200b\u91c7\u7528\u200b+1\uff0c+2\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8bbf\u95ee\u200b\u6570\u7ec4\u200b\u603b\u200b\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u7528\u200b\u51cf\u6cd5\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8bbf\u95ee\u200b\u6bd4\u8f83\u200b\u3002</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#07-ii","title":"07 \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#08","title":"08 \u200b\u5bfb\u627e\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u6211\u80fd\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u627e\u200b\u6700\u5c0f\u503c\u200b\u554a\u200b\uff0cfind\u200b\u65b9\u6cd5\u200bQAQ\u3002</li> <li>\u200b\u4ece\u200b\u4e24\u8fb9\u200b\u903c\u8fd1\u200b\uff0c\u200b\u627e\u5230\u200b\u6700\u5c0f\u503c\u200b</li> </ol> <p>\u3010\u200b\u4ee3\u7801\u200b\u3011\uff08\u200b\u6709\u8bef\u200b\uff09</p> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\n            return nums[0];\n        int len = nums.size();\n        int index = 0;\n\n        while(nums[index] &gt; nums[len - index]) //from sides to center to find the minimum\n            index++;\n        // two situations\n        return (nums[index] &lt; nums[len - index + 1]) ? nums[index] : nums[len - index + 1]; \n    }\n};  \n</code></pre> <p>\u3010\u200b\u9519\u8bef\u200b\u3011</p> <p>\u200b\u6267\u884c\u200b\u51fa\u9519\u200b</p> <p>\u200b\u6700\u540e\u200b\u6267\u884c\u200b\u7684\u200b\u8f93\u5165\u200b\uff1a[2,1]</p> <p>\u3010\u200b\u5206\u6790\u200b\u539f\u56e0\u200b\u3011</p> <ol> <li>\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u95ee\u9898\u200b\uff0c\u200b\u8d8a\u754c\u200b\u4e86\u200b(\u200b\u53c8\u200b\u662f\u200b\u8d8a\u754c\u200b)\uff0c\u200b\u5e94\u8be5\u200b\u662f\u200blen\u200b\u5fd8\u8bb0\u200b\u51cf\u200b1\u200b\u4e86\u200b\u3002</li> </ol> <p>\u3010\u200b\u6539\u52a8\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\n            return nums[0];\n        int len = nums.size() - 1;\n        int index = 0;\n\n        while(nums[index] &gt; nums[len - index]) //from sides to center to find the minimum\n            index++;\n        // two situations\n        return (nums[index] &lt; nums[len - index + 1]) ? nums[index] : nums[len - index + 1]; \n    }\n};  \n\n// or \nclass Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\n            return nums[0];\n        int len = nums.size();\n        int index = 0;\n\n        while(nums[index] &gt; nums[len - index - 1]) //from sides to center to find the minimum\n            index++;\n        // two situations\n        return (nums[index] &lt; nums[len - index]) ? nums[index] : nums[len - index]; \n    }\n};  \n</code></pre> <p>\u3010\u200b\u8bc4\u4ef7\u200b\u3011</p> <p>150 / 150 \u200b\u4e2a\u200b\u901a\u8fc7\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b</p> <p>\u200b\u72b6\u6001\u200b\uff1a\u200b\u901a\u8fc7\u200b</p> <p>\u200b\u6267\u884c\u200b\u7528\u65f6\u200b: 0 ms </p> <p>\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b: 9.8 MB </p> <p>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b</p> <p>\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b x\uff1a\u200b\u5728\u200b\u6700\u5c0f\u503c\u200b\u53f3\u4fa7\u200b\u7684\u200b\u5143\u7d20\u200b\uff08\u200b\u4e0d\u200b\u5305\u62ec\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u672c\u8eab\u200b\uff09\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u4e00\u5b9a\u200b\u90fd\u200b\u4e25\u683c\u200b\u5c0f\u4e8e\u200b x\uff1b\u200b\u800c\u200b\u5728\u200b\u6700\u5c0f\u503c\u200b\u5de6\u4fa7\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u4e00\u5b9a\u200b\u90fd\u200b\u4e25\u683c\u200b\u5927\u4e8e\u200b x\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u8fd9\u200b\u4e00\u6761\u200b\u6027\u8d28\u200b\uff0c\u200b\u901a\u8fc7\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u65b9\u6cd5\u200b\u627e\u51fa\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        int low = 0;\n        int high = nums.size() - 1;\n        while (low &lt; high) {\n            int pivot = low + (high - low) / 2;\n            if (nums[pivot] &lt; nums[high]) {\n                high = pivot;\n            }\n            else {\n                low = pivot + 1;\n            }\n        }\n        return nums[low];\n    }\n};\n\n\u200b\u4f5c\u8005\u200b\uff1aLeetCode-Solution\n\u200b\u94fe\u63a5\u200b\uff1ahttps://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/xun-zhao-xuan-zhuan-pai-xu-shu-zu-zhong-5irwp/\n\u200b\u6765\u6e90\u200b\uff1a\u200b\u529b\u6263\u200b\uff08LeetCode\uff09\n\u200b\u8457\u4f5c\u6743\u200b\u5f52\u200b\u4f5c\u8005\u200b\u6240\u6709\u200b\u3002\u200b\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u8054\u7cfb\u200b\u4f5c\u8005\u200b\u83b7\u5f97\u200b\u6388\u6743\u200b\uff0c\u200b\u975e\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002\n</code></pre> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011</p> <p>\u200b\u5173\u4e8e\u200b\u6709\u5e8f\u200b\u641c\u7d22\u200b\u67e5\u627e\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u591a\u591a\u200b\u8003\u8651\u200b\u5229\u7528\u200b\u4e8c\u5206\u6cd5\u200b\u3002\u200b\u4ece\u200b\u4e0d\u540c\u200b\u89d2\u5ea6\u200b\u5bf9\u200b\u4e8c\u5206\u6cd5\u200b\u8fdb\u884c\u200b\u4f7f\u7528\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u52a0\u6df1\u200b\u5bf9\u200b\u4e8c\u5206\u6cd5\u200b\u7684\u200b\u7406\u89e3\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#09-ii","title":"09 \u200b\u5bfb\u627e\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b II","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li> <p>\u200b\u548c\u200b\u6628\u5929\u200b\u7684\u200b\u9898\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5e94\u8be5\u200b\u53ea\u200b\u9700\u8981\u200b\u5bf9\u200b\u4e8c\u5206\u6cd5\u200b\u7a0d\u4f5c\u200b\u4fee\u6539\u200b\u5c31\u884c\u4e86\u200b\u3002</p> </li> <li> <p>\u200b\u521a\u200b\u5f00\u59cb\u200b\u60f3\u200b\u7684\u200b\u591a\u4e2a\u200b\u6761\u4ef6\u200b\u5c31\u884c\u4e86\u200b\u3002</p> </li> </ol> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        int low = 0, high = nums.size() - 1;\n        int mid = 0;\n        while(low &lt; high) {\n            mid = (low + high) / 2;\n            if(nums[mid] &lt; nums[high])\n                high = mid;\n            else if(nums[mid] &gt; nums[high])\n                low = mid + 1;\n            else\n                high--; //\u200b\u65b0\u52a0\u200b\u7684\u200b\u8bed\u53e5\u200b\n        }\n        return nums[low];\n    }\n};\n\n//\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a0 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b100.00%\u200b\u7684\u200b\u7528\u6237\u200b\n//\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a11.9 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b78.69%\u200b\u7684\u200b\u7528\u6237\u200b\n</code></pre> <ol> <li>\u200b\u540e\u6765\u200b\u60f3\u7740\u200b\u80fd\u200b\u4e0d\u80fd\u200b\u9012\u5f52\u200b\uff0c\u200b\u7ed3\u679c\u200b\u7279\u522b\u200b\u6162\u200b\u3002\u3002\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        int low = 0, high = nums.size() - 1;\n        int mid = 0;\n        while(low &lt; high) {\n            mid = (low + high) / 2;\n            if(nums[mid] &lt; nums[high])\n                high = mid;\n            else if(nums[mid] &gt; nums[high])\n                low = mid + 1;\n            else{\n                if(low == mid)\n                    return nums[low];\n                vector&lt;int&gt; pre(nums.begin() + low, nums.begin() + mid);\n                vector&lt;int&gt; last(nums.begin() + mid, nums.begin() + high + 1);\n                return (findMin(pre) &lt; findMin(last)) ? findMin(pre) : findMin(last);\n            }    \n        }\n        return nums[low];\n    }\n};\n\n//\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a96 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b22.48%\u200b\u7684\u200b\u7528\u6237\u200b\n//\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a37.8 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b5.12%\u200b\u7684\u200b\u7528\u6237\u200b\n</code></pre> <p>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u4e0e\u200b\u601d\u8def\u200b\u4e00\u200b\u6700\u200b\u5f00\u59cb\u200b\u7684\u200b\u60f3\u6cd5\u200b\u4e00\u81f4\u200b\u3002</p> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011</p> <p>\u200b   \u200b\u6709\u65f6\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u82db\u6c42\u200b\u7279\u522b\u200b\u7684\u200b\u7b97\u6cd5\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#12","title":"12 \u200b\u6700\u5927\u6570","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u57fa\u6570\u6392\u5e8f\u200b\uff1f</li> <li>\u200b\u592a\u96be\u200b\u4e86\u200b\uff0c\u200b\u6ca1\u200b\u505a\u200b\u51fa\u6765\u200b\uff0c\u200b\u82b1\u200b\u4e86\u200b\u65f6\u95f4\u200b\u90fd\u200b\u6ca1\u200b\u505a\u200b\u51fa\u6765\u200b</li> </ol> <p>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b</p> <p>\u200b\u5bab\u6c34\u200b\u4e09\u53f6\u200b\u306e\u200b\u76f8\u4fe1\u200b\u79d1\u5b66\u200b\u7cfb\u5217\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#13","title":"13  \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u8282\u70b9\u200b\u6700\u5c0f\u200b\u8ddd\u79bb","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u53ea\u200b\u9700\u200b\u6bd4\u8f83\u200broot-&gt;right - root \u200b\u548c\u200b root - root-&gt;left\u200b\u7684\u200b\u503c\u200b\u7684\u200b\u5927\u5c0f\u200b\u5373\u53ef\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u9012\u5f52\u200b\u3002</li> <li>\u200b\u8981\u200b\u8003\u8651\u200b\u6ca1\u6709\u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u6216\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5b50\u6811\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        if(root-&gt;left){ \n            //\u200b\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            if(root-&gt;right){ \n                // \u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u90fd\u200b\u6709\u200b\n                int min = ((root-&gt;val - root-&gt;left-&gt;val) &lt; (root-&gt;right-&gt;val - root-&gt;val)) ?  (root-&gt;val - root-&gt;left-&gt;val) : (root-&gt;right-&gt;val - root-&gt;val);\n                min = (min &lt; minDiffInBST(root-&gt;left)) ? min : minDiffInBST(root-&gt;left);\n                return (min &lt; minDiffInBST(root-&gt;right)) ? min : minDiffInBST(root-&gt;right);\n            }\n            //\u200b\u53ea\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            return ((root-&gt;val - root-&gt;left-&gt;val) &lt; minDiffInBST(root-&gt;left)) ? (root-&gt;val - root-&gt;left-&gt;val) : minDiffInBST(root-&gt;left);\n        }else if(root-&gt;right) // \u200b\u53ea\u6709\u200b\u53f3\u5b50\u200b\u6811\u200b\n            return ((root-&gt;right-&gt;val - root-&gt;val) &lt; minDiffInBST(root-&gt;right)) ? (root-&gt;right-&gt;val - root-&gt;val) : minDiffInBST(root-&gt;right);\n        else //\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u7531\u9898\u200b\u53ef\u77e5\u200b\uff0c\u200b\u6811\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u5355\u4e2a\u200b\u7684\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\n            return root-&gt;val;\n    }\n};\n\n/*\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u89e3\u7b54\u200b\u9519\u8bef\u200b\n\u200b\u663e\u793a\u200b\u8be6\u60c5\u200b\n\u200b\u8f93\u5165\u200b\uff1a\n[1,0,48,null,null,12,49]\n\u200b\u8f93\u51fa\u200b\uff1a\n0\n\u200b\u9884\u671f\u200b\u7ed3\u679c\u200b\uff1a\n1\n*/\n</code></pre> <p>\u3010\u200b\u89e3\u7b54\u200b\u51fa\u9519\u200b\u3011</p> <ol> <li>\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\u7684\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\u3002</li> </ol> <p>\u3010\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u3011</p> <ol> <li> <p>\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\u60c5\u51b5\u200b\u4e0b\u5e94\u200b\u8fd4\u8fd8\u200b\u6700\u5927\u503c\u200b\uff08100000\uff09\u3002</p> </li> <li> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u6811\u4e2d\u200b\u8282\u70b9\u200b\u6570\u76ee\u200b\u5728\u200b\u8303\u56f4\u200b <code>[2, 100]</code> \u200b\u5185\u200b</li> <li><code>0 &lt;= Node.val &lt;= 100000</code></li> </ul> </li> </ol> <pre><code>class Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        if(root-&gt;left){ \n            //\u200b\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            if(root-&gt;right){ \n                // \u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u90fd\u200b\u6709\u200b\n                int min = ((root-&gt;val - root-&gt;left-&gt;val) &lt; (root-&gt;right-&gt;val - root-&gt;val)) ?  (root-&gt;val - root-&gt;left-&gt;val) : (root-&gt;right-&gt;val - root-&gt;val);\n                min = (min &lt; minDiffInBST(root-&gt;left)) ? min : minDiffInBST(root-&gt;left);\n                return (min &lt; minDiffInBST(root-&gt;right)) ? min : minDiffInBST(root-&gt;right);\n            }\n            //\u200b\u53ea\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            return ((root-&gt;val - root-&gt;left-&gt;val) &lt; minDiffInBST(root-&gt;left)) ? (root-&gt;val - root-&gt;left-&gt;val) : minDiffInBST(root-&gt;left);\n        }else if(root-&gt;right) // \u200b\u53ea\u6709\u200b\u53f3\u5b50\u200b\u6811\u200b\n            return ((root-&gt;right-&gt;val - root-&gt;val) &lt; minDiffInBST(root-&gt;right)) ? (root-&gt;right-&gt;val - root-&gt;val) : minDiffInBST(root-&gt;right);\n        else //\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u7531\u9898\u200b\u53ef\u77e5\u200b\uff0c\u200b\u6811\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u5355\u4e2a\u200b\u7684\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\n            return 100000;\n    }\n};\n\n/*\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u89e3\u7b54\u200b\u9519\u8bef\u200b\n\u200b\u663e\u793a\u200b\u8be6\u60c5\u200b\n\u200b\u8f93\u5165\u200b\uff1a\n[90,69,null,49,89,null,52]\n\u200b\u8f93\u51fa\u200b\uff1a\n3\n\u200b\u9884\u671f\u200b\u7ed3\u679c\u200b\uff1a\n1\n*/\n</code></pre> <p>\u3010\u200b\u89e3\u7b54\u200b\u51fa\u9519\u200b\u3011</p> <ol> <li>\u201c\u200b\u4efb\u610f\u200b\u201d\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u201c\u200b\u76f8\u90bb\u200b\u201d\u200b\u7ed3\u70b9\u200b\uff08\u200b\u611f\u8c22\u200b\u8bc4\u8bba\u200b\u533a\u200b\u6458\u661f\u200b\uff09\u3002</li> </ol> <p>\u3010\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u3011</p> <ol> <li>\u200b\u7c7b\u4f3c\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u5bfb\u627e\u200b\u95f4\u8ddd\u200b\u6700\u5c0f\u200b\uff08\u200b\u611f\u8c22\u200b\u8bc4\u8bba\u200b\u533a\u200bCoding_Gengjiabo\uff09\u3002</li> </ol> <pre><code>\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#14-trie","title":"14 \u200b\u5b9e\u73b0\u200b Trie (\u200b\u524d\u7f00\u200b\u6811\u200b)","text":"<p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#15-ii","title":"15 \u200b\u6253\u5bb6\u52ab\u820d\u200b II","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u3002</li> </ol> <p>\u200b\u4e3e\u51fa\u200b\u53cd\u4f8b\u200b\u540e\u200b\u53d1\u73b0\u200b\u4e0d\u884c\u200b</p> <p>\u200b\u53cd\u4f8b\u200b: {1, 3, 4, 3, 0} </p> <p>\u200b\u6700\u4f18\u200b\u89e3\u200b\u5e94\u8be5\u200b\u662f\u200b 3+3\uff0c \u200b\u800c\u200b\u4e0d\u662f\u200b 4 + 1 + 0, \u200b\u4e0d\u80fd\u200b\u4f18\u5148\u200b\u9009\u200b\u6700\u5927\u200b\u7684\u200b\uff1f\u200b\u90a3\u200b\u600e\u4e48\u529e\u200b\u5462\u200b\uff1f</p> <ol> <li> <p>\u200b\u4e0d\u80fd\u200b\u6392\u5e8f\u200b\uff0c\u200b\u6392\u5e8f\u200b\u4f1a\u200b\u6253\u4e71\u200b\u539f\u6709\u200b\u76f8\u90bb\u200b\u5173\u7cfb\u200b\u3002</p> </li> <li> <p>\u200b\u8fd8\u662f\u200b\u8003\u8651\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u5e8f\u5217\u200b(x, y, z)\uff0c \u200b\u5982\u679c\u200b\u6ee1\u8db3\u200b \uff1a</p> </li> <li> <p>y &gt;= x + z\uff0c \u200b\u5219\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200by\u200b\u800c\u200b\u629b\u5f03\u200bx\u3001z\u3002</p> </li> <li>y &lt; x + z, \u200b\u4e14\u200b x \u200b\u548c\u200b z \u200b\u4e0d\u200b\u76f8\u90bb\u200b\uff0c \u200b\u5219\u200b\u629b\u5f03\u200by\uff0c\u200b\u7ee7\u7eed\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u3002</li> <li> <p>x \u200b\u548c\u200b z \u200b\u76f8\u90bb\u200b\uff0c\u200b\u53ea\u80fd\u200b\u9009\u62e9\u200by\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8f93\u51fa\u200by\u3002</p> </li> <li> <p>\u200b\u5982\u4f55\u200b\u629b\u5f03\u200b\uff1f</p> </li> <li> <p>\u200b\u7f6e\u200b\u96f6\u200b\u3002\u200b\u5c06\u200b\u629b\u5f03\u200b\u7684\u200b\u9009\u62e9\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u503c\u7f6e\u200b\u4e3a\u200b\u96f6\u200b\u3002</p> </li> <li> <p>\u200b\u5982\u4f55\u200b\u5904\u7406\u200b\u9996\u5c3e\u200b\u76f8\u90bb\u200b\u95ee\u9898\u200b\uff1a</p> </li> <li> <p>\u200b\u6dfb\u52a0\u200b\u5224\u65ad\u200b\u8bed\u53e5\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8bbf\u95ee\u200b\u65f6\u200b\u8003\u8651\u200b\u662f\u5426\u200b\u4e3a\u9996\u200b\u90e8\u200b\u6216\u200b\u5c3e\u90e8\u200b\u3002</p> </li> <li> <p>\u200b\u6a21\u957f\u200b\u9664\u4f59\u6cd5\u200b(\u200b\u81ea\u5df1\u200b\u778e\u8d77\u200b\u7684\u200b\u540d\u5b57\u200b)\uff0c\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u4e0b\u6807\u200b x, nums[x]\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200bnums[(x+length-1) % length] \u200b\u548c\u200bnums[(i+1)%length]\u200b\u5fc5\u7136\u200b\u5b58\u5728\u200b\uff08\u200b\u5c31\u662f\u200b\u4e0d\u4f1a\u200b\u6709\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\uff09\u3002</p> </li> <li> <p>\u200b\u5982\u4f55\u200b\u5224\u65ad\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u7684\u200b\u7ed3\u675f\u200b\uff1f</p> </li> <li> <p>\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u5df2\u200b\u9009\u62e9\u200b\u548c\u200b\u5df2\u7ecf\u200b\u629b\u5f03\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u90fd\u200b\u7f6e\u200b\u4e3a\u200b0\uff0c\u200b\u6570\u7ec4\u200b\u5168\u96f6\u5219\u200b\u8f93\u51fa\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b</p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b</p> </li> </ol> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int len = nums.size();\n        int i = 0; // a Loop control variable\n        int max_index = 0;\n        int answer = 0;\n        bool flag = false; // whether this solution gets the answer\n        while(!flag) {\n            max_index = 0;\n            for(i = 1; i &lt; len; i++) { // find the maximum\n                max_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n            }\n            // three situation\n            // for (x, y, z)\n            if (nums[max_index] &gt;= (nums[(max_index + len - 1) % len] + nums[(max_index + 1) % len])){ // y &gt;= x + z\n                answer += nums[max_index];\n                nums[max_index] = 0;\n                nums[(max_index + len - 1) % len] = 0;\n                nums[(max_index + 1) % len] = 0;\n            }else if(3 == len)\n                return nums[1];\n            else // y &lt; x + z &amp;&amp; x and z are not adjacent\n                nums[max_index] = 0;\n\n            // whether gets the answer\n            for (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n                ;\n            flag = (i == len) ? 1 : 0;\n        }\n        //return answer\n        return answer;\n    }\n};\n\n\n//\u200b\u90e8\u5206\u200b\u4f18\u5316\u200b\n\nclass Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int len = nums.size();\n        int i = 0; // a Loop control variable\n        int max_index = 0;\n        int answer = 0;\n        bool flag = false; // whether this solution gets the answer\n        while(!flag) {\n            max_index = 0;\n            for(i = 1; i &lt; len; i++) { // find the maximum\n                max_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n            }\n            // three situation\n            // for (x, y, z)\n            if (nums[max_index] &gt;= (nums[(max_index + len - 1) % len] + nums[(max_index + 1) % len])){ // y &gt;= x + z\n                answer += nums[max_index];\n                nums[max_index] = 0;\n                nums[(max_index + len - 1) % len] = 0;\n                nums[(max_index + 1) % len] = 0;\n            }else if(len &lt; 4)\n                return nums[max_index];\n            else // y &lt; x + z &amp;&amp; x and z are not adjacent\n                nums[max_index] = 0;\n\n            // whether gets the answer\n            for (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n                ;\n            flag = i == len;\n        }\n        //return answer\n        return answer;\n    }\n};\n</code></pre> <p>\u3010\u200b\u81ea\u5df1\u200b\u8c03\u8bd5\u200b\u9636\u6bb5\u200b\u627e\u5230\u200b\u7684\u200b\u9519\u8bef\u200b\u3011</p> <p>\u200b\u6d4b\u8bd5\u200b\u6837\u4f8b\u200b\uff1anums = {1, 3, 4, 3, 3};</p> <p>\u200b\u7b54\u6848\u200b\u5e94\u8be5\u200b\u662f\u200b 7 \u200b\u4f46\u662f\u200b\u8f93\u51fa\u200b\u4e3a\u200b6\uff0c\u200b\u8fd8\u662f\u200b\u5728\u200b\u60c5\u51b5\u200b\u5224\u65ad\u200b\u4e0a\u200b\u5931\u7b56\u200b\u4e86\u200b\uff0c\u200b\u600e\u4e48\u529e\u200b\u5462\u200b\uff1f</p> <p>\u200b\u53c8\u200b\u611f\u89c9\u200b\u8d2a\u5fc3\u200b\u8d70\u200b\u4e0d\u901a\u200b\u4e86\u200b\u3002\u3002\u3002</p> <ol> <li>\u200b\u4e00\u79cd\u200b\u9012\u5f52\u200b\u7684\u200b\u89e3\u51b3\u200b\u65b9\u5f0f\u200b</li> </ol> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt; nums) { \n        int len = nums.size();\n        int max_index = 0;\n        int i = 0;\n\n        for (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n            ;\n        if(i == len)\n            return 0;\n\n        max_index = 0;\n        for(i = 1; i &lt; len; i++) { // find the maximum\n            max_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n        }\n        if(len &lt; 4)\n            return nums[max_index];\n\n        int temp = nums[max_index];\n\n        nums[max_index] = 0;\n        int temp_a = rob(nums);\n\n        nums[(max_index + len - 1) % len] = 0;\n        nums[(max_index + 1) % len] = 0;\n        int temp_b = rob(nums) + temp;\n        //return answer\n        return temp_a &gt; temp_b ? temp_a : temp_b;\n    }\n};\n\n/*\n\u200b\u53ef\u60dc\u200b\u7684\u200b\u662f\u200b\n\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u8d85\u65f6\u200b\u4e86\u200b\u3002\u3002\n\u200b\u5f53\u200b\u6570\u7ec4\u200b\u53d8\u957f\u200b\u65f6\u200b\uff0c\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6700\u5927\u503c\u200b\u90fd\u200b\u8981\u200b\u4e24\u6b21\u200b\u9012\u5f52\u200b\n\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u6210\u200b\u6307\u6570\u200b\u589e\u957f\u200b\uff0c\u200b\u8d39\u65f6\u200b\u8d39\u8d44\u200b\n*/\n</code></pre> <ol> <li>\u200b\u8003\u8651\u200b\u53ef\u80fd\u200b\u8981\u200b\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\uff0c\u200b\u53ef\u662f\u200b\u6211\u200b\u4e0d\u4f1a\u200b\u554a\u200b\u3002\u3002\u3002</li> <li>\u200b\u592a\u96be\u200b\u4e86\u200b\uff0c\u200b\u6211\u200b\u662f\u200b\u5783\u573e\u200b\uff0c\u200b\u5199\u200b\u7684\u200b\u90fd\u200b\u662f\u200b\u5783\u573e\u200b\u3002</li> </ol> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#16-1","title":"16-1 \u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32","text":"<p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#16-2","title":"16-2 \u200b\u9664\u200b\u81ea\u8eab\u200b\u4ee5\u5916\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e58\u79ef","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li> <p>\u200b\u4e0d\u7528\u200b\u9664\u6cd5\u200b\u8fd8\u8981\u200b\u518d\u200bO(n)\u200b\u65f6\u95f4\u200b\u5185\u200b\u5b8c\u6210\u200b(\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b)\uff1f\uff1f</p> </li> <li> <p>\u200b\u521d\u59cb\u5316\u200b\u8f93\u51fa\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5176\u503c\u200b\u4e3a\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u5411\u200b\u5de6\u200b\u79fb\u52a8\u200b\u540e\u200b\u7684\u200b\u503c\u200b\u3002</p> </li> </ol> <p>\u200b\u4f8b\u200b\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a[1, 2, 3, 4]</p> <p>\u200b\u8f93\u51fa\u200b\uff1a[2, 3, 4, 1]</p> <ol> <li>\u200b\u7136\u540e\u200b\uff0c\u200b\u5de6\u79fb\u200b\uff0c\u200b\u6570\u7ec4\u200b\u76f8\u4e58\u200b\uff1f</li> <li>\u200b\u4e0d\u884c\u200b\uff0c\u200b\u9996\u5148\u200b\uff0c\u200b\u6ca1\u6cd5\u200b\u5de6\u79fb\u200b\u53f3\u79fb\u200b\u7684\u200b\uff0c\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u961f\u5217\u200b\uff0c\u200b\u5176\u6b21\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u652f\u6301\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u76f4\u63a5\u200b\u4e58\u200b\u3002</li> </ol> <p>\u3010\u200b\u6709\u6548\u200b\u601d\u8def\u200b\u3011</p> <ol> <li> <p>yauldmar\uff1a\u200b\u6700\u200b\u76f4\u63a5\u200b\u7684\u200b\u60f3\u6cd5\u200b\u5e94\u8be5\u200b\u662f\u200b\uff1a\u200b\u521d\u59cb\u5316\u200b\u7ed3\u679c\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u90fd\u200b\u4fdd\u5b58\u200b\u6240\u6709\u200b\u6570\u200b\u7684\u200b\u4e58\u79ef\u200b\uff0c\u200b\u7136\u540e\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u9664\u4ee5\u200bnums\u200b\u6570\u7ec4\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u6837\u200b\u6700\u5927\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u200b\u5982\u679c\u200b\u6570\u7ec4\u200b\u5b58\u5728\u200b0\uff0c\u200b\u5c31\u200b\u6709\u200b\u95ee\u9898\u200b\u4e86\u200b\uff0c\u200b\u800c\u4e14\u200b\u9898\u76ee\u200b\u4e2d\u200b\u660e\u786e\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u4f7f\u7528\u200b\u9664\u6cd5\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u601d\u8def\u200b\u6392\u9664\u200b\u3002</p> </li> <li> <p>\u200b\u90a3\u4e48\u200b\u6211\u200b\u8003\u8651\u200b\u5c06\u200b\u8f93\u51fa\u200b\u6570\u7ec4\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b\u5168\u200b1\u200b\u6570\u7ec4\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u4e34\u65f6\u200b\u7684\u200b\u79ef\u200btemp\uff0c\u200b\u521d\u59cb\u503c\u200b\u4e3a\u200b\u4e00\u200b\uff0c\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u200b\u8bbf\u95ee\u200b\u4e00\u4e2a\u200bnums[i]\uff0ctemp\u200b\u5c31\u200b\u4e58\u4ee5\u200bnums[i]\uff0c\u200b\u7136\u540e\u200bout[i+1]\u200b\u4e58\u4ee5\u200btemp\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\u4e0d\u80fd\u200b\u8d8a\u754c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5faa\u73af\u200b\u6761\u4ef6\u200b\u662f\u200b  i &lt; nums.size() - 1\u3002</p> </li> </ol> <p>[a, b, c, d], [1, 1, 1, 1]</p> <p>[1, 1, 1, 1] ==&gt; [1, a, ab, abc]</p> <ol> <li> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b (2.) \u200b\u53cd\u8fc7\u6765\u200b\u6267\u884c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u7b54\u6848\u200b\u5566\u200b\uff01</p> </li> <li> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b:O(2n) = O(n)</p> </li> <li> <p>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b:O(1)</p> </li> <li> <p>\u200b\u4ee3\u7801\u200b</p> </li> </ol> <pre><code>// 1.0\nclass Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; ans(nums.size(),1);\n        int temp = 1, len = nums.size();\n\n        for(int i = 0; i &lt; len - 1; i++){\n            temp *= nums[i];\n            ans[i + 1] *= temp;\n        }\n        temp = 1;\n        for(int i = len - 1; i &gt; 0 ; i--){\n            temp *= nums[i];\n            ans[i - 1] *= temp;\n        }\n\n        return ans;\n    }\n};\n\n/*\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u901a\u8fc7\u200b\n\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a24 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b83.25%\u200b\u7684\u200b\u7528\u6237\u200b\n\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a23.3 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b85.40%\u200b\u7684\u200b\u7528\u6237\u200b\n*/\n</code></pre> <p>\u200b\u611f\u8c22\u200byauldmar, \u200b\u8ba9\u200b\u6211\u200b\u53d1\u73b0\u200bC\u3001\u200b\u4e24\u4e2a\u200bfor\u200b\u5faa\u73af\u200b\u8bed\u53e5\u200b\u5176\u5b9e\u200b\u80fd\u200b\u6574\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u3002</p> <pre><code>//1.1\nclass Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; ans(nums.size(),1);\n        int left = 1, right = 1, len = nums.size();\n\n        for(int i = 0; i &lt; len - 1; i++){\n            left *= nums[i];\n            right *= nums[len - 1 - i];\n            ans[i + 1] *= left;\n            ans[len - i - 2] *= right;\n        }\n\n        return ans;\n    }\n};\n</code></pre> <ol> <li>\u200b\u81ea\u6211\u200b\u601d\u8def\u200b\u6700\u7ec8\u200b\u60f3\u6cd5\u200b</li> </ol> <p>\u200b\u6613\u8bc1\u200b\uff0c\u200b\u82e5\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5b58\u5728\u200b\u4e24\u4e2a\u200b\u4e3a\u200b\u96f6\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5219\u200b\u8f93\u51fa\u200b\u6570\u7ec4\u200b\u4e00\u5b9a\u200b\u662f\u200b\u5168\u96f6\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>//2.0\n#include&lt;algorithm&gt;\nclass Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        if(count(nums.begin(), nums.end(), 0) &gt; 1)\n            return vector&lt;int&gt;(nums.size(), 0);\n\n        vector&lt;int&gt; ans(nums.size(),1);\n        int left = 1, right = 1, len = nums.size();\n\n        for(int i = 0; i &lt; len - 1; i++){\n            left *= nums[i];\n            right *= nums[len - 1 - i];\n            ans[i + 1] *= left;\n            ans[len - i - 2] *= right;\n        }\n\n        return ans;\n    }\n};\n/*\n\u200b\u53c2\u8003\u200b\u8bc4\u4ef7\u200b\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u901a\u8fc7\u200b\n\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a20 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b94.43%\u200b\u7684\u200b\u7528\u6237\u200b\n\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a23.3 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b90.47%\n\u200b\u7684\u200b\u7528\u6237\u200b\n*/\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011\u3010\u200b\u6211\u200b\u7684\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#17-iii","title":"17 \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b III","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u52a0\u4e2a\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff1f\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200bO(n^2)\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector&lt;int&gt;&amp; nums, int k, int t) {\n\n        for(int i = 0; i &lt; nums.size() ;i++)\n            for(int j = i + 1; j &lt; i + k + 1 &amp;&amp; j &lt; nums.size(); j++){\n                if(abs(nums[i] - nums[j]) &lt;= t)\n                    return true;\n            }\n        return false;\n    }\n};\n</code></pre> <ol> <li> <p>\u200b\u7b2c\u4e00\u200b\uff0c\u200b\u6ca1\u200b\u6ce8\u610f\u200b\u5206\u6790\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\uff0cint\u200b\u4e0d\u591f\u200b\u957f\u200b</p> <p>[-2147483648,2147483647] 1 1</p> <p>\u200b\u6d4b\u8bd5\u200b\u6837\u4f8b\u200b\u4e0d\u200b\u901a\u8fc7\u200b</p> <p>\u200b\u6539\u7248\u200b</p> <pre><code>class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector&lt;int&gt;&amp; nums, int k, int t) {\n\n        for(int i = 0; i &lt; nums.size() ;i++)\n            for(int j = i + 1; j &lt; i + k + 1 &amp;&amp; j &lt; nums.size(); j++){\n                if(abs((long long int)nums[i] - (long long int)nums[j]) &lt;= t)\n                    return true;\n            }\n        return false;\n    }\n};\n</code></pre> <p>\u200b\u8fd8\u662f\u200b\u9519\u8bef\u200b\u7684\u200b\uff0c\u200b\u6ca1\u200b\u6ce8\u610f\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u9650\u5236\u200b\uff0cO(n^2) \u200b\u8d85\u65f6\u200b\u3002</p> </li> <li> <p>\u200b\u8003\u8651\u200b\u53e6\u5916\u200b\u4e00\u79cd\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5148\u200b\u6392\u5e8f\u200b\uff0c\u200b\u7136\u540e\u200b\u770b\u524d\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u5c31\u884c\u4e86\u200b\u3002</p> </li> <li>\u200b\u4e0d\u884c\u200b\uff01\u200b\u7edd\u5bf9\u200b\u4e0d\u884c\u200b\uff0c\u200b\u6392\u5e8f\u200b\u4f1a\u200b\u6253\u4e71\u200b\u539f\u6709\u200b\u7684\u200b\u6570\u7ec4\u200b\u5e8f\u200b\uff0c\u200b\u4e0d\u200b\u7b26\u5408\u200b\u9898\u610f\u200b\u8981\u6c42\u200b\u3002</li> </ol> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#18","title":"18 \u200b\u5220\u9664\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u6b64\u200b\u9898\u4e3a\u200b06\u200b\u65e5\u200b\u505a\u200b\u7684\u200b\u9898\u200b\u7684\u200b\u524d\u8eab\u200b\u7248\u672c\u200b\uff0c\u200b\u6211\u200b\u7684\u200b\u601d\u8def\u200b\u8fd8\u662f\u200b\u548c\u200b\u5220\u9664\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u91cd\u590d\u200b\u7684\u200b\u4e00\u6837\u200b\u3002</li> </ol> <p>\u3010\u200b\u53cc\u200b\u6307\u9488\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums) {\n        if(nums.size() &lt; 2) // \u200b\u9898\u9762\u200b\u6709\u200b\u8bf4\u200b\u6570\u7ec4\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\n            return nums.size(); \n\n        int j = 0;\n        nums.push_back(10001); // \u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u4e4b\u5916\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u7528\u4f5c\u200b\u6700\u540e\u200b\u7684\u200b i + 1\n        for(int i = 0; i &lt; nums.size() - 1; i++)\n            if(nums[i] != nums[i+1])\n                nums[j++] = nums[i];\n        return j;\n    }\n};\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p> <p>\u3010\u200b\u603b\u7ed3\u200b\u5fc3\u5f97\u200b\u3011</p> <ul> <li>\u200b\u591a\u591a\u200b\u6ce8\u610f\u200b\u9898\u9762\u200b\u4fe1\u606f\u200b\uff0c\u200b\u9898\u76ee\u200b\u5f80\u5f80\u200b\u90fd\u200b\u4e0d\u4f1a\u9519\u200b\uff0c\u200b\u597d\u597d\u200b\u7406\u89e3\u200b\u9898\u76ee\u200b\u610f\u601d\u200b\uff0c\u200b\u89c2\u5bdf\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u3002</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#19","title":"19 \u200b\u79fb\u9664\u200b\u5143\u7d20","text":"<p>\u3010\u200b\u53cc\u200b\u6307\u9488\u200b\u3011</p> <p>\u3010\u200b\u4ee3\u7801\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int index = 0;\n        if(nums.size()){ // \u200b\u6570\u7ec4\u200b\u6709\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\u56e0\u6b64\u200b\u8981\u200b\u5224\u65ad\u200b\u4e00\u4e0b\u200b\n            for(int i = 0; i &lt; nums.size(); ++i)\n                if(nums[i] != val)\n                    nums[index++] = nums[i];\n        }else\n            return 0;\n        return index;\n    }\n};\n\n//\u200b\u6539\u8fdb\u200b\nclass Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int index = 0;\n        //\u200b\u6570\u7ec4\u200b\u7a7a\u200b\u4e0d\u200b\u6ee1\u8db3\u200bfor\u200b\u7684\u200b\u6761\u4ef6\u200b\u8bed\u53e5\u200b\n        for(int i = 0; i &lt; nums.size(); ++i)\n            if(nums[i] != val)\n                nums[index++] = nums[i];\n\n        return index;\n    }\n};\n\n/* \u200b\u53c2\u8003\u200b\u8bc4\u4ef7\u200b\n\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a0 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b100.00%\u200b\u7684\u200b\u7528\u6237\u200b\n\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a8.3 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b99.26%\u200b\u7684\u200b\u7528\u6237\u200b\n*/\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#20-strstr","title":"20\u200b\u5b9e\u73b0\u200b strStr()","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#21","title":"21\u200b\u89e3\u7801\u200b\u65b9\u6cd5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/April_2021/#22-k","title":"22 \u200b\u77e9\u5f62\u200b\u533a\u57df\u200b\u4e0d\u200b\u8d85\u8fc7\u200b K \u200b\u7684\u200b\u6700\u5927\u200b\u6570\u503c\u200b\u548c","text":"<p>\u3010\u200b\u5ba1\u9898\u200b\u3011</p> <ol> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b\u603b\u4f1a\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u6570\u503c\u200b\u548c\u200b\u4e0d\u200b\u8d85\u8fc7\u200b <code>k</code> \u200b\u7684\u200b\u77e9\u5f62\u200b\u533a\u57df\u200b\u3002</li> <li>\u200b\u8fd4\u56de\u503c\u200b\u4e3a\u200b\u4e0d\u200b\u8d85\u8fc7\u200b<code>k</code>\u200b\u7684\u200b\u6700\u5927\u200b\u6570\u503c\u200b\u548c\u200b\u3002</li> <li>\u200b\u9898\u76ee\u200b\u6240\u200b\u7ed9\u200b\u7684\u200b\u4fe1\u606f\u200b\u5f88\u5c11\u200b\u3002</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/","title":"March 2021","text":"<p> \u200b\u7ea6\u200b 1599 \u200b\u4e2a\u200b\u5b57\u200b  117 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 7 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#02","title":"02 \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u200b\u957f\u5b50\u200b\u7a9c","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u4ece\u9996\u200b\u5b57\u7b26\u200b\u5f00\u59cb\u200b\u589e\u52a0\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5f80\u540e\u200b\u6bcf\u4e2a\u200b\u5b57\u7b26\u200b\u5f97\u200b\u5148\u200b\u770b\u200b\u662f\u5426\u200b\u5728\u200b\u5b50\u4e32\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u8fc7\u200b\uff0c\u200b\u540c\u65f6\u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200bCurrentLength\u200b\u4ee5\u53ca\u200b\u6700\u957f\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200bMaxLength\u3002</li> <li>\u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u5219\u200b\u4ece\u9996\u200b\u5b57\u7b26\u200b\u7684\u200b\u4e0b\u200b\u4e00\u200b\u5b57\u7b26\u200b\u5f00\u59cb\u200b\uff0c\u200b\u91cd\u590d\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u76f4\u5230\u200b\u7b97\u200b\u51fa\u200b\u6700\u957f\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200b\u3002</li> </ol> <p>\u3010\u200b\u5173\u952e\u200b\u4f18\u5316\u200b\u3011</p> <ol> <li>\u200b\u548c\u200bKMP\u200b\u7b97\u6cd5\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u65f6\u200b\uff0c\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u4e4b\u524d\u200b\u7684\u200b\u5b57\u7b26\u200b\u65e0\u9700\u200b\u518d\u200b\u8fdb\u884c\u200b\u6b65\u9aa4\u200b\u4e00\u200b\uff0c\u200b\u76f4\u63a5\u200b\u6539\u4e3a\u200b\u4ece\u200b\u8be5\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u4e4b\u540e\u200b\u7684\u200b\u5b57\u7b26\u200b\u4f5c\u4e3a\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u7684\u200b\u9996\u200b\u5b57\u7b26\u200b\uff0c\u200b\u540c\u65f6\u200b\u5bf9\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b\u8fdb\u884c\u200b\u524a\u51cf\u200b\u3002\u200b\u7136\u540e\u200b\u7ee7\u7eed\u200b\u7ed9\u200b\u5b50\u4e32\u200b\u52a0\u200b\u5b57\u7b26\u200b\u800c\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u518d\u200b\u91cd\u590d\u200b\u591a\u4f59\u200b\u6b65\u9aa4\u200b\u3002    \u200b\u4f8b\u5b50\u200b\uff1a     s = \"abcdefgdcba921\"    c = \"abcdefg\" char = 'd' \u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u65f6\u200b    cl = 7, maxl = 7    \u200b\u4ee4\u200b c = \"efgd\", cl = cl + 0(a) - 3(d) = 4    \u200b\u6700\u540e\u200b c = \"efgdcba921\" cl = 10, maxl = 10</li> <li>\u200b\u5f53\u200b\u6700\u957f\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b\u7b49\u7269\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u80fd\u200b\u8fbe\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u65f6\u200b\uff0c\u200b\u65e0\u9700\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8f93\u51fa\u200b\u6700\u5927\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200b\u3002\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5c31\u200b\u5f88\u200b\u597d\u200b\u7406\u89e3\u200b\u3002    \u200b\u4f8b\u5b50\u200b\uff1a    s = \"abcce\"    c = \"abc\", char = 'c'    cl = 3, maxl = 3    \u200b\u7ecf\u8fc7\u200b\u7b2c\u4e00\u6b65\u200b\u4f18\u5316\u200b    c = \"c\" , char = 'e'    cl = 1, maxl = 3, cl(max) = 2 &lt; maxl    \u200b\u6545\u200bmaxl = 3\u3002</li> </ol> <p>\u3010\u200b\u4ee3\u7801\u200b\u5f85\u8865\u200b\u3011 \u200b\u4ed4\u7ec6\u200b\u60f3\u200b\u4e86\u200b\u4e00\u4e0b\u200b\u601d\u8def\u200b\uff0c\u200b\u4f46\u200b\u9274\u4e8e\u200b\u590d\u4e60\u200b\u8ba1\u7ec4\u200b\u53ef\u80fd\u200b\u6ca1\u200b\u65f6\u95f4\u200b\u5199\u200b\u4ee3\u7801\u200b\uff0c\u200b\u65e5\u540e\u200b\u8865\u200b\u4e0a\u200b\u4ee3\u7801\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#03","title":"03 \u200b\u5bfb\u627e\u200b\u4e24\u4e2a\u200b\u6b63\u5e8f\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e2d\u4f4d\u6570","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u88ab\u200b\u5b83\u200b\u9a97\u200b\u5f97\u200b\u53bb\u200b\u5408\u5e76\u200b\u6570\u7ec4\u200b\uff08\u200b\u8bef\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6307\u5b9a\u200b\u633a\u200b\u9ebb\u70e6\u200b\uff09    \u200b\u4f46\u200b\u5176\u5b9e\u200b\u6211\u200b\u81ea\u5df1\u200b\u7684\u200b\u601d\u8def\u200b\u66f4\u200b\u9ebb\u70e6\u200b\u3002</li> <li>\u200b\u53ee\u53ee\u200b\uff0c\u200b\u5c31\u662f\u200b\u8981\u200b\u627e\u200b\u4e2d\u4f4d\u6570\u200b\u561b\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u53bb\u200b\u6570\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e24\u4e2a\u200b\u6570\u5217\u200b\u672c\u8eab\u200b\u90fd\u200b\u662f\u200b\u6709\u5e8f\u200b\u7684\u200b\uff0c\u200b\u53ea\u8981\u200b\u628a\u200b\u6bd4\u200b\u4e2d\u4f4d\u6570\u200b\u5c0f\u200b\u7684\u200b\u90a3\u4e9b\u200b\u6570\u200b\u5168\u90e8\u200b\u627e\u200b\u51fa\u6765\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\u3002\u200b\u4e3e\u4e2a\u200b\ud83c\udf30\uff1a    1\uff0c2\uff0c4 m = 3    3\uff0c5 n = 2    m+n=5 5/2=2 \u200b\u8fd9\u4e2a\u200b\u503c\u200b\u53ef\u4ee5\u200b\u8bb0\u200b\u4e3a\u200bflag    \u200b\u90a3\u200b\u5c31\u8981\u200b\u5148\u627e\u200b\u4e24\u4e2a\u200b\u5c0f\u200b\u7684\u200b\uff0c\u200b\u663e\u7136\u200b\uff0c1\u200b\u548c\u200b2\uff0c    \u200b\u5177\u4f53\u200b\u4e00\u70b9\u200b    1\u200b\u548c\u200b3\u200b\u6bd4\u8f83\u200b\u4e00\u4e0b\u200b\uff0c1\u200b\u66f4\u200b\u5c0f\u200b\uff0cm\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u52a0\u4e00\u200b    2\u200b\u548c\u200b3\u200b\u6bd4\u8f83\u200b\u4e00\u4e0b\u200b\uff0c2\u200b\u66f4\u200b\u5c0f\u200b\uff0cm\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u52a0\u4e00\u200b    \u200b\u6b64\u65f6\u200b\uff0c\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u4e86\u200b\u5bf9\u200b\u4e2d\u4f4d\u6570\u200b\u4e4b\u524d\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u5254\u9664\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u73b0\u5728\u200b\u5c31\u662f\u200b\u8981\u200b\u627e\u51fa\u200b\u4e2d\u4f4d\u6570\u200b\u4e86\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b3\u200b\u548c\u200b4\u200b\u7684\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u9009\u62e9\u200b\u8f83\u200b\u5c0f\u9879\u200b\u5373\u53ef\u200b\u3002\u200b\u90a3\u4e48\u200b\u4e2d\u4f4d\u6570\u200b\u5c31\u662f\u200b3\u3002    \\March_2021\\3. m\u200b\u548c\u200bn\u200b\u7684\u200b\u548c\u200b\u4e3a\u200b\u5947\u6570\u200b\u65f6\u200b\uff0c\u200b\u6309\u7167\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u770b\u8d77\u6765\u200b\u6ca1\u200b\u95ee\u9898\u200b\uff0c\u200b\u90a3\u4e48\u200b\u548c\u200b\u4e3a\u200b\u5076\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5462\u200b\uff1f    \u200b\u4e3e\u4e2a\u200b\ud83c\udf30\uff1a    1\uff0c2\uff0c4    3\uff0c5\uff0c6    \u200b\u540c\u6837\u200b\u7ecf\u8fc7\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u7684\u8bdd\u200b\uff0c    \u200b\u56e0\u4e3a\u200bm+n=6\uff0c6/2=3\uff0c    \u200b\u6700\u540e\u200b\u6bd4\u8f83\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6570\u5c06\u4f1a\u200b\u662f\u200b4\u200b\u548c\u200b5    \u200b\u5076\u6570\u200b\u4e2a\u6570\u200b\u627e\u200b\u4e2d\u4f4d\u6570\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u4e2d\u95f4\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u5c31\u200b\u5e94\u8be5\u200b\u662f\u200b3\u200b\u548c\u200b4\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u53ef\u662f\u200b\u6700\u540e\u200b\uff08\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u5bf9\u5e94\u200b\uff09\u200b\u6307\u5411\u200b\u7684\u200b\u5374\u662f\u200b4\u200b\u548c\u200b5\u3002    \u200b\u9010\u6b65\u200b\u5206\u6790\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u6211\u4eec\u200b\u5254\u9664\u200b\u4e86\u200b\u4e09\u4f4d\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u6570\u636e\u200b3\u200b\u662f\u200b\u6700\u540e\u200b\u5254\u9664\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u5176\u4e3a\u200b\u6709\u7528\u200b\u6570\u636e\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u5e94\u8be5\u200b\u5c06\u200b\u5176\u200b\u5254\u9664\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\uff0c\u200b\u5254\u9664\u200b\u6b21\u6570\u200b\u5c31\u200b\u5e94\u8be5\u200b\u51cf\u4e00\u200b\uff0c    \u200b\u5373\u200b m+n/2 - 1\u3002    \uff08\u200b\u5c0f\u200b\u4f18\u5316\u200b\uff0c\u200b\u51cf\u5c11\u200b\u91cd\u590d\u200b\u4ee3\u7801\u200b\uff09    \u200b\u8fdb\u4e00\u6b65\u200b\u89c2\u5bdf\u200b\u53d1\u73b0\u200b\uff0cm+n\u200b\u4e3a\u200b5\u200b\u548c\u200b6\u200b\u65f6\u200b\u7684\u200b\u5254\u9664\u200b\u6b21\u6570\u200b\u76f8\u540c\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u5c0f\u200b\u5947\u6570\u200b\u548c\u200b\u5927\u200b\u5076\u6570\u200b\u7684\u200b\u5254\u9664\u200b\u6b21\u6570\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\uff0c\u200b\u5254\u9664\u200b\u8fc7\u7a0b\u200b\u5b8c\u5168\u200b\u53ef\u4ee5\u200b\u65e0\u89c6\u200b\u5947\u5076\u6027\u200b\uff0c\u200b\u5373\u200b    \u200b\u5254\u9664\u200b\u6b21\u6570\u200b flag = (m+n-1)/2\u3002</li> </ol> <p>\u3010\u200b\u5b58\u5728\u200b\u95ee\u9898\u200b\u53ca\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u3011</p> <ol> <li> <p>\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u5ffd\u7565\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5373\u200b\u4e24\u200b\u6570\u7ec4\u200b\u4e2d\u6709\u200b\u4e00\u200b\u6570\u7ec4\u200b\u8fc7\u5206\u200b\u957f\u200b\u4e86\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u5728\u200b\u5254\u9664\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u3002</p> </li> <li> <p>\u200b\u9519\u8bef\u200b\u89e3\u51b3\u529e\u6cd5\u200b\uff1a\u200b\u5ffd\u89c6\u200b\u8f83\u200b\u77ed\u200b\u6570\u7ec4\u200b\u6570\u636e\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5c06\u200b\u5176\u200b\u957f\u5ea6\u200b\u52a0\u5230\u200b\u957f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u901a\u8fc7\u200b\u7b80\u5355\u200b\u65b9\u6cd5\u200b\u76f4\u63a5\u200b\u6c42\u200b\u4e2d\u4f4d\u6570\u200b\u3002\u200b\u60f3\u200b\u51fa\u200b\u8fd9\u79cd\u200b\u9519\u8bef\u200b\u65b9\u6848\u200b\u4e3b\u8981\u200b\u539f\u56e0\u200b\u662f\u200b\uff1a\u200b\u5355\u7eaf\u200b\u7684\u200b\u8ba4\u4e3a\u200b\uff0c\u200b\u957f\u200b\u6570\u7ec4\u200b\u7684\u200b\u5b58\u5728\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6570\u636e\u200b\u8d8a\u754c\u200b\uff0c\u200b\u800c\u200b\u5ffd\u89c6\u200b\u4e86\u200b\u77ed\u200b\u6570\u7ec4\u200b\u5185\u200b\u6570\u636e\u200b\u7684\u200b\u91cd\u8981\u6027\u200b\u3002</p> </li> <li> <p>\u200b\u89e3\u51b3\u529e\u6cd5\u200b\uff1a\u200b\u5f53\u8981\u200b\u53d1\u751f\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u65f6\u200b\uff08\u200b\u6dfb\u52a0\u200b\u5faa\u73af\u200b\u6761\u4ef6\u200b\uff09\uff0c\u200b\u8df3\u51fa\u200b\u6bd4\u8f83\u200b\u5254\u9664\u200b\u6570\u636e\u200b\u5faa\u73af\u200b\uff0c\u200b\u6539\u4e3a\u200b\u76f4\u63a5\u200b\u4ece\u957f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u627e\u5230\u200b\u4e2d\u4f4d\u6570\u200b       \ud83c\udf30 \uff1a       1\uff0c2 m = 2       3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c111 n=12</p> </li> <li> <p>\u200b\u76f4\u63a5\u200b\u5bfb\u627e\u200b\u65b9\u6cd5\u200b\uff08\u200b\u5f97\u200b\u5148\u200b\u5224\u65ad\u200b\u54ea\u4e2a\u200b\u662f\u200b\u957f\u200b\u6570\u7ec4\u200b\uff09</p> <p>flag\uff08\u200b\u539f\u503c\u200b\u4e3a\u200b6\uff0c\u200b\u6bcf\u200b\u5254\u9664\u200b\u4e00\u6b21\u200b\u5c31\u200b\u51cf\u4e00\u200b\uff0c\u200b\u4e3a\u200b\u96f6\u5219\u200b\u8868\u793a\u200b\u5254\u9664\u200b\u5b8c\u200b\u4e86\u200b\uff0c\u200b\u7528\u4f5c\u200b\u5254\u9664\u200b\u5faa\u73af\u200b\u7684\u200b\u5faa\u73af\u200b\u6761\u4ef6\u200b\uff09 \u200b\u7ecf\u8fc7\u200b\u4e24\u6b21\u200b\u5254\u9664\u200b\u540e\u200b\u53d8\u4e3a\u200b4\u3002   \u200b\u957f\u200b\u6570\u7ec4\u200b\u6b64\u65f6\u200b\u4e0b\u6807\u200b\u4e3a\u200b0   \u200b\u5219\u200b\u4e0b\u6807\u200b+4\u200b\u4e3a\u200b4\uff0cOK\uff0c\u200b\u8fdb\u5165\u200b\u8ba1\u7b97\u200b\u4e2d\u4f4d\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u548c\u200b\u4e3a\u200b\u5076\u6570\u200b\uff0c\u200b\u957f\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b4\u200b\u548c\u200b\u4e0b\u6807\u200b5\u200b\u7684\u200b\u6570\u636e\u200b\u4e4b\u200b\u548c\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b7\u200b\u548c\u200b8\u200b\u7684\u200b\u5e73\u5747\u503c\u200b7.5\u3002</p> </li> </ol> <p>\u200b\u59d1\u4e14\u200b\u60f3\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\uff0c\u200b\u6253\u5b57\u200b\u6253\u200b\u4e86\u200b\u534a\u5929\u200b\u3002\u3002\u3002\u3002</p> <p>\u3010\u200b\u4ee3\u7801\u200b\u5f85\u8865\u200b\u3011</p> <p>\u200b\u54e6\u200b\uff0c\u200b\u5b9e\u9645\u200b\u8fd8\u8981\u200b\u8003\u8651\u200b\u7a7a\u200b\u6570\u7ec4\u200b\u4ee5\u53ca\u200b\u6570\u636e\u200b\u76f8\u7b49\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5f97\u200b\u7b49\u200b\u4e0a\u200b\u624b\u5199\u200b\u4e86\u200b\u4ee3\u7801\u200b\u624d\u200b\u77e5\u9053\u200b\u5177\u4f53\u60c5\u51b5\u200b\u5982\u4f55\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#04","title":"04 \u200b\u6b63\u6574\u6570\u200b\u62c6\u5206","text":"<p>\u3010\u200b\u5f85\u8865\u200b\u3011</p> <pre><code>// \u200b\u540c\u5b66\u200b\u7684\u200b\u4ee3\u7801\u200b\n#include&lt;stdio.h&gt;\nint a[100], n;\nvoid rep(int k, int m, int t){\n    for(int i = m; i &gt; 0; i--)\n        if(k - i == 0){\n            a[t] = i;\n            printf(\"%d=\", n);\n            for(int j = 0; j &lt; t; j++)\n                printf(\"%d+\", a[j]);\n            printf(\"%d\\n\", a[t]);\n    }else if(k - i &gt; 0){\n        a[t] = i;\n        rep(k - i, i, t + 1);\n    }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#22","title":"22 \u200b\u5de6\u200b\u65cb\u8f6c\u200b\u5b57\u7b26\u4e32","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        int length = s.length();\n        string ans = s;\n        for(int i = 0, j = n; i &lt;  length ; i++){\n            ans[i] = s[j];\n            j = (j + 1) % length;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7684\u200b\u53e6\u7c7b\u200b\u65b9\u6cd5\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        return s.substr(n,s.length()-n)+(s.substr(0,n));\n        // \u200b\u76f4\u63a5\u200b\u8c03\u7528\u200bstring\u200b\u5e93\u200b~ \uff08\u200b\u6211\u200b\u89c9\u5f97\u200b\u9898\u76ee\u200b\u53ef\u80fd\u200b\u4e0d\u8ba9\u200b\u6211\u200b\u8fd9\u4e48\u200b\u505a\u200b\uff09\n    }\n};\n</code></pre> <p>\u3010\u200b\u57fa\u4e8e\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        return (s+s.substr(0,n)).substr(n,s.length());\n    }\n};\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#29","title":"29 \u200b\u98a0\u5012\u200b\u4e8c\u8fdb\u5236\u4f4d","text":"<p>\u200b\u5de6\u53f3\u200b\u79fb\u4f4d\u200b\u6307\u5b9a\u200b\u4e0d\u884c\u200b\u3002 \u200b\u6570\u636e\u200b\u58f0\u660e\u200b\u540e\u8981\u200b\u8bb0\u5f97\u200b\u521d\u59cb\u5316\u200b\uff01\uff01\uff01 \u200b\u521d\u59cb\u5316\u200b\uff01\uff01</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#30","title":"30 \u200b\u641c\u7d22\u200b\u4e8c\u7ef4\u200b\u77e9\u9635","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u5148\u200b\u6309\u884c\u200b\u641c\u7d22\u200b\uff0c\u200b\u627e\u5230\u200b\u5bf9\u5e94\u200b\u884c\u200b\u3002</li> <li>\u200b\u518d\u200b\u6309\u5217\u200b\u4e00\u4e2a\u200b\u4e00\u4e2a\u200b\u6bd4\u8f83\u200b\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        int row = 1, col = 0;\n\n        for(;row &lt; matrix.size(); row++){\n            if( target &lt; matrix[row][0])\n                break;\n        }\n        row--;\n        for(;col &lt; matrix[row].size(); col++){\n            if(target == matrix[row][col])\n                return true;\n        }\n        return false;\n    }\n};\n</code></pre> <p>\u3010\u200b\u9519\u8bef\u200b\u3011</p> <ol> <li>\u200b\u641c\u7d22\u200b\u884c\u65f6\u200b\u884c\u200b\u4e0b\u6807\u200brow\u200b\u5fd8\u8bb0\u200b-1\u3002</li> <li>\u200b\u641c\u7d22\u200b\u884c\u65f6\u200b\u63d0\u524d\u200b\u5224\u65ad\u200b\u6bcf\u884c\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u662f\u5426\u200b\u4e3a\u200btarget\uff0c\u200b\u81ea\u200b\u4ee5\u4e3a\u200b\u80fd\u591f\u200b\u65b9\u4fbf\u200b\u540e\u7eed\u200b\u7684\u200b\u5217\u200b\u67e5\u8be2\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5217\u200b\u67e5\u8be2\u200b\u7684\u200bcol\u200b\u4e0b\u6807\u200b\u521d\u59cb\u503c\u200b\u4e3a\u200b1\uff0c\u200b\u5bfc\u81f4\u200b\u5982\u679c\u200b\u77e9\u9635\u200b\u53ea\u6709\u200b\u4e00\u884c\u200b\uff0c\u200b\u4e0d\u200b\u6267\u884c\u200b\u884c\u200b\u641c\u7d22\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u5ffd\u7565\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5c0f\u200b\u7ec6\u8282\u200b\uff0c\u200b\u5927\u200b\u6bdb\u75c5\u200b\uff01</li> </ol> <p>\u3010\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u7684\u200b\u7b56\u7565\u200b\u3011</p> <ol> <li>\u200b\u5c06\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b\u7684\u200b\u4e0b\u6807\u200b\u4e00\u7ef4\u200b\u5316\u200b\uff0c\u200b\u8fdb\u884c\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u3002</li> <li>\u200b\u5206\u6b65\u200b\u5bf9\u200b\u884c\u5217\u200b\u8fdb\u884c\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u3002</li> </ol> <pre><code>//\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\nclass Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        int col = matrix[0].size();\n        int low = 0, high = matrix.size() * col - 1;\n        int mid = 0;\n\n        while (low &lt;= high){\n            mid = (low+high)/2 ;\n            if(target == matrix[mid / col][mid % col])\n                return true;\n            else if (target &lt; matrix[mid / col][mid % col])\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        return false;\n    }\n};\n\n// \u200b\u5206\u6b65\u200b\u7684\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u7b56\u7565\u200b\nclass Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        //\u200b\u884c\u5217\u200b\u5206\u6b65\u200b\uff0c\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b \n        int low = 0, high = matrix.size() - 1;\n        int mid = 0, row = 0;\n\n        while (low &lt;= high){\n            mid = (low+high)/2 ;\n            if(target == matrix[mid][0])\n                return true;\n            else if (target &lt; matrix[mid][0])\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        row = (mid == high) ? mid : high;\n        if(row &lt; 0)\n            return false;\n        low = 0;\n        high = matrix[0].size() - 1;\n\n        while (low &lt;= high){\n            mid = (low+high)/2 ;\n            if(target == matrix[row][mid])\n                return true;\n            else if (target &lt; matrix[row][mid])\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        return false;\n    }\n};\n</code></pre> <p>\u3010\u200b\u95ee\u9898\u200b\u3011</p> <ol> <li>\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u7684\u200b\u6761\u4ef6\u200b\u662f\u200blow&lt;=high\uff0c\u200b\u4e0d\u8981\u200b\u5fd8\u8bb0\u200b\u7b49\u200b\u53f7\u200b\u3002</li> <li>row_index = mid / col\uff0ccol_index = mid % col </li> <li>\u200b\u5206\u6b65\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u65f6\u8981\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u540c\u65f6\u200b\u8981\u200b\u6ce8\u610f\u200b\u6709\u200brow&lt;0\u200b\u7684\u200bfalse\u200b\u60c5\u51b5\u200b\u3002</li> </ol> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u83b7\u5f97\u200b\u7684\u200b\u65b0\u200b\u77e5\u8bc6\u200b\u3011</p> <ol> <li>\u200b\u5229\u7528\u200b\u77e9\u9635\u200b\u5347\u5e8f\u200b\u7684\u200b\u7279\u6027\u200b\u4ece\u200b\u53f3\u4e0a\u89d2\u200b\u6216\u200b\u5de6\u4e0b\u89d2\u200b\u5f00\u59cb\u200b\u5207\u5165\u200b\u3002</li> </ol> <p>\u3010\u200b\u7c7b\u6bd4\u200b\u3011</p> <ol> <li>\u200b\u5982\u679c\u200b\u662f\u200b\u964d\u5e8f\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5462\u200b\uff1f    \u200b\u4ecd\u7136\u200b\u662f\u4ece\u200b\u53f3\u4e0a\u89d2\u200b\u6216\u200b\u5de6\u4e0b\u89d2\u200b\u5207\u5165\u200b</li> </ol> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011\u200b\u8bef\u200b</p> <ol> <li>\u200b\u77e9\u9635\u200b\u6709\u5e8f\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u53f3\u4e0a\u89d2\u200b\u6216\u200b\u5de6\u4e0b\u89d2\u200b\u5f00\u59cb\u200b\u5207\u5165\u200b\u3002</li> </ol> <p>\u3010\u200b\u53cd\u601d\u200b\u3011</p> <ol> <li>\u200b\u5145\u5206\u5229\u7528\u200b\u4e8c\u5206\u6cd5\u200b!</li> <li>\u200b\u5176\u5b9e\u200b\u4ece\u200b\u54ea\u4e2a\u200b\u89d2\u5ea6\u200b\u5207\u5165\u200b\u90fd\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5ea6\u200b\u90fd\u200b\u4e00\u6837\u200b\uff0c\u200b\u8981\u200b\u5feb\u200b\u8fd8\u662f\u200b\u4e8c\u5206\u6cd5\u200b\uff01</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/March_2021/#31-ii","title":"31 \u200b\u5b50\u96c6\u200b II","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/September_2021/","title":"September_2021","text":"<p> \u200b\u7ea6\u200b 180 \u200b\u4e2a\u200b\u5b57\u200b  62 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/September_2021/#678","title":"678. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u81ea\u5df1\u200b\u7684\u200b\u601d\u8def\u200b\u662f\u200b\u7528\u200b\u6808\u200b\uff0c\u200b\u540e\u6765\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u5927\u4f6c\u200b\uff0c\u200b\u5c5e\u5b9e\u200b\u819c\u62dc\u200b\u3002</p> <p>\u3010Ryugamine\u3011</p> <p>\u200b\u5bf9\u200b\u6211\u200b\u800c\u8a00\u200b\uff0c\u200b\u5173\u952e\u5728\u4e8e\u200b\u201c\u200b\u4e0b\u9650\u200b\u201d\u200b\u7684\u200b\u7406\u89e3\u200b\u548c\u200b\u6c42\u89e3\u200b\u3002</p> <p>\u200b\u503c\u5f97\u200b\u5b66\u4e60\u200b</p> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p> <p>\u3010\u200b\u5bab\u6c34\u200b\u4e09\u53f6\u200b\u3011</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/September_2021/#447","title":"447. \u200b\u56de\u65cb\u200b\u9556\u200b\u7684\u200b\u6570\u91cf","text":"<p>\u3010\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u503c\u5f97\u200b\u5b66\u4e60\u200b\u3011</p> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p> <pre><code>class Solution {\npublic:\n\n    int numberOfBoomerangs(vector&lt;vector&lt;int&gt;&gt;&amp; points) {\n        int n = points.size();\n        if (n &lt; 3) return 0;\n        int i, j, x, y,dx,dy;\n        vector&lt;vector&lt;int&gt;&gt; dis2(n);\n\n\n        //\u200b\u5b66\u4e60\u200b\uff1a\u200b\u72ec\u7279\u200b\u7684\u200b\u8ba1\u7b97\u200b\u8ddd\u79bb\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u6bcf\u4e2a\u200b\u70b9\u95f4\u200b\u7684\u200b\u8ddd\u79bb\u200b\n        for (i = 0; i &lt; n; ++i) {\n            x = points[i][0];\n            y = points[i][1];\n            for (j = 0; j &lt; i; ++j) {\n                dx = x - points[j][0];\n                dy = y - points[j][1];\n                dx = dx*dx + dy*dy;\n                dis2[i].emplace_back(dx);\n                dis2[j].emplace_back(dx);\n            }\n        }\n\n        //\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u6392\u5217\u7ec4\u5408\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u4f46\u200b\u53c8\u200b\u6709\u200b\u533a\u522b\u200b\n        //i \u200b\u7528\u4f5c\u200b\u8fd4\u56de\u503c\u200b\uff1bdis2[i]\u200b\u7684\u200b\u5927\u5c0f\u200b\u4e3a\u200bn-1\uff0c\u200b\u6700\u5927\u200b\u79e9\u4e3a\u200bn-2,x\u200b\u7528\u6765\u200b\u8ba1\u6570\u200b\n        i = 0;\n        y = n - 2;\n        for (auto &amp;v : dis2) {\n            sort(v.begin(), v.end());\n            x = 1;\n            for (j = 0; j &lt; y; ++j) {\n                if (v[j] != v[j + 1]) { //\u200b\u8ba1\u7b97\u200b\u76f8\u540c\u200b\u8ddd\u79bb\u200b\u7684\u200b\u70b9\u200b\u7684\u200b\u6570\u91cf\u200b\n                    i += (x - 1)*x;\n                    x = 1;\n                }\n                else {\n                    ++x;\n                }\n            }\n            i += (x - 1)*x;\n        }\n        return i;\n    }\n\n};\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/September_2021/#524","title":"524. \u200b\u901a\u8fc7\u200b\u5220\u9664\u200b\u5b57\u6bcd\u200b\u5339\u914d\u200b\u5230\u200b\u5b57\u5178\u200b\u91cc\u200b\u6700\u957f\u200b\u5355\u8bcd","text":"<p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011 \u200b\u9700\u8981\u200b\u5b66\u4e60\u200b\uff1a\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b</p> <p></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/LeetCode/September_2021/#162","title":"162. \u200b\u5bfb\u627e\u200b\u5cf0\u503c","text":"<p>\u3010\u200b\u5bab\u6c34\u200b\u4e09\u53f6\u200b\u306e\u200b\u76f8\u4fe1\u200b\u79d1\u5b66\u200b\u7cfb\u5217\u200b\u3011\u200b\u5173\u4e8e\u200b\u80fd\u591f\u200b\u300c\u200b\u4e8c\u5206\u200b\u300d\u200b\u7684\u200b\u4e24\u70b9\u200b\u8bc1\u660e\u200b</p> <p>\u200b\u503c\u5f97\u200b\u5b66\u4e60\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5de7\u5999\u200b\u5229\u7528\u200b\u4e86\u200b\u6574\u578b\u200b\u6570\u636e\u200b\u9664\u6cd5\u200b(\u200b\u800c\u4e14\u200b\u5de7\u7528\u200b\u79fb\u4f4d\u200b\u8fd0\u7b97\u200b)\u200b\u5411\u4e0b\u200b\u53d6\u6574\u200b\u7684\u200b\u7279\u6027\u200b\u3002</p> <p>\u200b\u4f5c\u8005\u200b\u7684\u200b\u5176\u4ed6\u200b\u5b66\u4e60\u200b\u653b\u7565\u200b</p> <p>33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b </p> <pre><code>class Solution {\n    public int findPeakElement(int[] nums) {\n        int n = nums.length;\n        int l = 0, r = n - 1;\n        while (l &lt; r) {\n            int mid = l + r &gt;&gt; 1;\n            if (nums[mid] &gt; nums[mid + 1]) r = mid;\n            else l = mid + 1;\n        }\n        return r;\n    }\n}\n\n\u200b\u4f5c\u8005\u200b\uff1aAC_OIer\n\u200b\u94fe\u63a5\u200b\uff1ahttps://leetcode-cn.com/problems/find-peak-element/solution/gong-shui-san-xie-noxiang-xin-ke-xue-xi-qva7v/\n\u200b\u6765\u6e90\u200b\uff1a\u200b\u529b\u6263\u200b\uff08LeetCode\uff09\n\u200b\u8457\u4f5c\u6743\u200b\u5f52\u200b\u4f5c\u8005\u200b\u6240\u6709\u200b\u3002\u200b\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u8054\u7cfb\u200b\u4f5c\u8005\u200b\u83b7\u5f97\u200b\u6388\u6743\u200b\uff0c\u200b\u975e\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Coq/environment/","title":"environment","text":"<p> \u200b\u7ea6\u200b 768 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 3 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Coq/environment/#running-coq-coq","title":"Running Coq \u200b\u8fd0\u884c\u200b Coq","text":"<p>Every time a new shell is opened one has to type in the following lines in order to use Coq \u200b\u6bcf\u6b21\u200b\u6253\u5f00\u200b\u65b0\u200b\u5916\u58f3\u200b\u65f6\u200b\uff0c\u200b\u90fd\u200b\u5fc5\u987b\u200b\u8f93\u5165\u200b\u4ee5\u4e0b\u200b\u884c\u200b\u624d\u80fd\u200b\u4f7f\u7528\u200b Coq</p> <p>export OPAMROOT=~/opam-coq.8.9.0 eval <code>opam config env</code> After that coqc -v shall run and print the version of Coq. \u200b\u4e4b\u540e\u200b coqc -v \uff0c\u200b\u5e94\u200b\u8fd0\u884c\u200b\u5e76\u6253\u5370\u200b Coq \u200b\u7248\u672c\u200b\u3002</p> <p>\u200b\u5b9e\u6d4b\u200b<code>opam config env</code>\u200b\u597d\u4f7f\u200b\uff0c\u200b\u7136\u540e\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200bcoq\u200b\u7684\u200b\u547d\u4ee4\u200b\u4e86\u200b\uff0c\u200b\u5305\u62ec\u200b<code>coq_makefile -f _CoqProject *.v -o Makefile</code></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Coq/environment/#windows-coqproject","title":"windows \u200b\u4e0b\u200b CoqProject","text":"<p>\u200b\u5b89\u88c5\u200b\u597d\u200bcoq\u200b\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u914d\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b\uff0c\u200b\u7136\u540e\u200b\u91cd\u542f\u200b\u7535\u8111\u200b\u4ee5\u200b\u5237\u65b0\u200b\u73af\u5883\u53d8\u91cf\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Coq/environment/#vo","title":"\u7f16\u8bd1\u200b\u7f13\u5b58\u200b \u200b\u94fe\u63a5\u200b\uff08.vo\uff09","text":"<p>Software Foundation</p> <p>\u200b\u5728\u200b\u5f00\u59cb\u200b\u4e4b\u524d\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u628a\u200b\u4e0a\u200b\u4e00\u7ae0\u200b\u4e2d\u200b\u6240\u6709\u200b\u7684\u200b\u5b9a\u4e49\u200b\u90fd\u200b\u5bfc\u5165\u200b\u8fdb\u6765\u200b\uff1a</p> <p>From LF Require Export Basics. For the Require Export to work, Coq needs to be able to find a compiled version of Basics.v, called Basics.vo, in a directory associated with the prefix LF. This file is analogous to the .class files compiled from .java source files and the .o files compiled from .c files. First create a file named _CoqProject containing the following line (if you obtained the whole volume \"Logical Foundations\" as a single archive, a _CoqProject should already exist and you can skip this step): -Q . LF This maps the current directory (\".\", which contains Basics.v, Induction.v, etc.) to the prefix (or \"logical directory\") \"LF\". PG and CoqIDE read _CoqProject automatically, so they know to where to look for the file Basics.vo corresponding to the library LF.Basics. Once _CoqProject is thus created, there are various ways to build Basics.vo: In Proof General: The compilation can be made to happen automatically when you submit the Require line above to PG, by setting the emacs variable coq-compile-before-require to t. In CoqIDE: Open Basics.v; then, in the \"Compile\" menu, click on \"Compile Buffer\". From the command line: Generate a Makefile using the coq_makefile utility, that comes installed with Coq (if you obtained the whole volume as a single archive, a Makefile should already exist and you can skip this step): coq_makefile -f _CoqProject *.v -o Makefile Note: You should rerun that command whenever you add or remove Coq files to the directory. Then you can compile Basics.v by running make with the corresponding .vo file as a target: <code>make Basics.vo</code> All files in the directory can be compiled by giving no arguments: <code>make</code> Under the hood, make uses the Coq compiler, coqc. You can also run coqc directly: <code>coqc -Q . LF Basics.v</code> But make also calculates dependencies between source files to compile them in the right order, so make should generally be prefered over explicit coqc. \u200b\u5982\u679c\u200b\u4f60\u200b\u9047\u5230\u200b\u4e86\u200b\u95ee\u9898\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7a0d\u540e\u200b\u4f60\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5728\u200b\u672c\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u9047\u5230\u200b\u7f3a\u5c11\u200b\u6807\u8bc6\u7b26\u200b\u7684\u200b\u63d0\u793a\u200b\uff09\uff0c \u200b\u90a3\u200b\u53ef\u80fd\u200b\u662f\u56e0\u4e3a\u200b\u6ca1\u6709\u200b\u6b63\u786e\u200b\u8bbe\u7f6e\u200b Coq \u200b\u7684\u200b\u201c\u200b\u52a0\u8f7d\u200b\u8def\u5f84\u200b\u201d\u3002\u200b\u6307\u4ee4\u200b Print LoadPath. \u200b\u80fd\u200b\u5e2e\u200b\u4f60\u200b\u7406\u6e05\u200b\u8fd9\u200b\u7c7b\u200b\u95ee\u9898\u200b\u3002 \u200b\u7279\u522b\u200b\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u770b\u5230\u200b\u4e86\u200b\u50cf\u200b\u8fd9\u6837\u200b\u7684\u200b\u4fe1\u606f\u200b\uff1a Compiled library Foo makes inconsistent assumptions over library Bar check whether you have multiple installations of Coq on your machine. It may be that commands (like coqc) that you execute in a terminal window are getting a different version of Coq than commands executed by Proof General or CoqIDE. Another common reason is that the library Bar was modified and recompiled without also recompiling Foo which depends on it. Recompile Foo, or everything if too many files are affected. (Using the third solution above: make clean; make.) \u200b\u518d\u200b\u7ed9\u200b CoqIDE \u200b\u7528\u6237\u200b\u4e00\u70b9\u200b\u6280\u5de7\u200b\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u770b\u5230\u200b\u4e86\u200b Error: Unable to locate library Basics\uff0c\u200b\u90a3\u4e48\u200b\u53ef\u80fd\u200b\u7684\u200b\u539f\u56e0\u200b\u662f\u200b\u7528\u200b 'CoqIDE' \u200b\u7f16\u8bd1\u200b\u7684\u200b\u4ee3\u7801\u200b\u548c\u200b\u5728\u200b\u6307\u4ee4\u200b\u884c\u7528\u200b 'coqc' \u200b\u7f16\u8bd1\u200b\u7684\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u3002\u200b\u8fd9\u200b\u901a\u5e38\u200b\u5728\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u4e0d\u200b\u517c\u5bb9\u200b\u7684\u200b coqc \u200b\u65f6\u200b\u53d1\u751f\u200b \uff08\u200b\u4e00\u4e2a\u200b\u4e0e\u200b CoqIDE \u200b\u5173\u8054\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u6307\u4ee4\u200b\u884c\u200b\u7684\u200b coqc \u200b\u5173\u8054\u200b\uff09\u3002\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u7684\u200b\u53d8\u901a\u65b9\u6cd5\u200b \u200b\u5c31\u662f\u200b\u53ea\u200b\u4f7f\u7528\u200b CoqIDE \u200b\u6765\u200b\u7f16\u8bd1\u200b\uff08\u200b\u5373\u200b\u4ece\u200b\u83dc\u5355\u4e2d\u9009\u62e9\u200b\u201cmake\u201d\uff09\u200b\u5e76\u200b\u5b8c\u5168\u907f\u514d\u200b\u4f7f\u7528\u200b coqc\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Coq/intros/","title":"intros","text":"<p> \u200b\u7ea6\u200b 50 \u200b\u4e2a\u200b\u5b57\u200b </p> <p>\u200b\u603b\u4f53\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b</p> <p>\u200b\u6682\u65f6\u200b\u6309\u7167\u200bSoftware foundations\u200b\u7684\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\u6765\u200b\u7ec4\u7ec7\u200b\uff0c\u200b\u5185\u5bb9\u200b\u4e0a\u200b\u4f1a\u200b\u5939\u6742\u200bJean-Fran\u00e7ois Monin\u200b\u516c\u5f00\u8bfe\u200b\u5185\u5bb9\u200b\u7684\u200b\u7b14\u8bb0\u200b\uff0c\u200b\u540e\u7eed\u200b\u518d\u200b\u6839\u636e\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u8fdb\u884c\u200b\u8c03\u6574\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Coq/%E5%87%BD%E6%95%B0%E4%B8%8E%E8%AF%81%E6%98%8E/","title":"\u51fd\u6570\u200b\u4e0e\u200b\u8bc1\u660e","text":"<p> \u200b\u7ea6\u200b 1272 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 4 \u200b\u5206\u949f\u200b</p> <p>(** In the famous Curry-Howard correspondence,  \"[p] is a proof of formula [F]\" can be written [p : F], that is, [p] can be seen as a data or a functional program of type [F]. In the sequel we write \"function\" for as a shorthand for \"functional program\".</p> <p>The types seen until now in the programming part could be divided into basic data, such as [tlcolor], and functional types,  written with arrows [-&gt;]. Similarly, the previous statements of theorems were build with  basic equalities, implications written with [-&gt;] and universal quantification.</p> <p>This double use of the arrow is on purpose:   A proof of [P -&gt; Q] is a function that builds a proof of [Q]   from any proof of [P].</p> <p>To complete the picture about data, we have also tree-like structures both for data (binary trees, AST, etc.) and for proofs (that is, proof trees), to be presented soon.</p> <p>Finally, proofs of universally quantified formulas have also a natural functional interpretation:   A proof of [\u00e2\u02c6\u20acx, P x] is a function that builds a proof of [P x]   from any [x].  *)</p> <p>(* Actually, interesting theorems are stated by universally quantified formulae. From the point of view of functional programs, they involve a notion  of type that is not present in usual programming languages, including OCaml: dependent types. Reading or writing complete programs using dependent types requires some care and is posponed at the moment.  )</p> <p>(**  However a simple manipulation is easy and important to understand at this stage. Consider a theorem such as: [Theorem t : forall x : some_type, blablah x.] And consider an expression [e] of type [some_type], then [t] applied to [e], that is [t e] makes sense and yields a proof of [blablah e].</p> <p>Let us see an example.  *)</p> <p>(**  &lt;&lt;   +--------------------------+   | Summary to be remembered |   +--------------------------+</p> <p>In Coq we have two activities : write definitions, and prove theorems.   Though definitions are usually in [Set] while theorems are in [Prop],   it is actually the very same activity, because a proof is just   a function that builds a proof of a conclusion for all actual parameters   provided in input, for example a proof of   [next_col (next_col (next_col c)) = c]  for all [c].</p> <p>Curry-Howard correspondence : &lt;&lt;                                       proof   =   functional program                                     formula   =   type            provide a proof p of a formula T   =   write a program      checking that p is indeed a proof of T   =   type checking</p> <p>In order to see interesting theorems as types, we need dependent types.   Dependent types can also be used for programming, providing very accurate   information on inputs and outputs and additional programming facilities.   This is particularly interesting in combination with the capability to   write programs returning a type, whereas usual programs return a data,   because type-checking makes no difference between types that are   convertible (that is, computationally the same).   Formally, Type Theory includes a very powerful rule, called the conversion rule,   stating that if [p] has the type [T], then [p] has also any type [T'] such that    [T] reduces do [T'] or conversely (more generally: [T] and [T'] are convertible).  *)</p> <p>\u200b\u5728\u200b Coq \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u6709\u200b\u4e24\u79cd\u200b\u6d3b\u52a8\u200b\uff1a\u200b\u7f16\u5199\u200b\u5b9a\u4e49\u200b\u548c\u200b\u8bc1\u660e\u200b\u5b9a\u7406\u200b\u3002\u200b\u867d\u7136\u200b\u5b9a\u4e49\u200b\u901a\u5e38\u200b\u5728\u200b [Set] \u200b\u4e2d\u200b\uff0c\u200b\u800c\u200b\u5b9a\u7406\u200b\u5728\u200b [Prop] \u200b\u4e2d\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u540c\u200b\u4e00\u79cd\u200b\u6d3b\u52a8\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8bc1\u660e\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u4e3a\u200b\u6240\u6709\u200b\u8f93\u5165\u200b\u7684\u200b\u5b9e\u9645\u200b\u53c2\u6570\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u7ed3\u8bba\u200b\u7684\u200b\u8bc1\u660e\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6240\u6709\u200b\u7684\u200b [c]\uff0c\u200b\u8bc1\u660e\u200b [next_col (next_col (next_col c)) = c]\u3002</p> <p>\u200b\u8fd9\u200b\u6bb5\u200b\u6ce8\u91ca\u200b\u4e2d\u200b\u8fd8\u200b\u4ecb\u7ecd\u200b\u4e86\u200b Curry-Howard correspondence\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u79cd\u200b\u7406\u8bba\u200b\uff0c\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u7684\u200b\u6846\u67b6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5f00\u53d1\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u200b\u548c\u200b\u8bc1\u660e\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u6846\u67b6\u200b\u4e2d\u200b\uff0c\u200b\u8bc1\u660e\u200b\u7b49\u540c\u4e8e\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u516c\u5f0f\u200b\u7b49\u540c\u4e8e\u200b\u7c7b\u578b\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u516c\u5f0f\u200b T \u200b\u7684\u200b\u8bc1\u660e\u200b p \u200b\u7b49\u540c\u4e8e\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u68c0\u67e5\u200b p \u200b\u662f\u5426\u200b\u786e\u5b9e\u200b\u662f\u200b T \u200b\u7684\u200b\u8bc1\u660e\u200b\u7b49\u540c\u4e8e\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u5c06\u200b\u6709\u8da3\u200b\u7684\u200b\u5b9a\u7406\u200b\u89c6\u4e3a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u3002\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u7f16\u7a0b\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u975e\u5e38\u200b\u51c6\u786e\u200b\u7684\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u4fe1\u606f\u200b\u4ee5\u53ca\u200b\u989d\u5916\u200b\u7684\u200b\u7f16\u7a0b\u200b\u8bbe\u65bd\u200b\u3002\u200b\u8fd9\u200b\u4e0e\u200b\u80fd\u591f\u200b\u7f16\u5199\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u80fd\u529b\u200b\u7ed3\u5408\u200b\u8d77\u6765\u200b\u7279\u522b\u200b\u6709\u8da3\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u901a\u5e38\u200b\u7a0b\u5e8f\u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u5bf9\u200b\u53ef\u200b\u8f6c\u6362\u200b\u7684\u200b\u7c7b\u578b\u200b\uff08\u200b\u5373\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u4e0a\u200b\u76f8\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\uff09\u200b\u6ca1\u6709\u200b\u533a\u522b\u200b\u3002</p> <p>\u200b\u6b63\u5f0f\u200b\u5730\u8bf4\u200b\uff0c\u200b\u7c7b\u578b\u200b\u7406\u8bba\u200b\u5305\u62ec\u200b\u4e00\u4e2a\u200b\u975e\u5e38\u200b\u5f3a\u5927\u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u8f6c\u6362\u89c4\u5219\u200b\uff0c\u200b\u5b83\u200b\u58f0\u660e\u200b\u5982\u679c\u200b [p] \u200b\u6709\u200b\u7c7b\u578b\u200b [T]\uff0c\u200b\u90a3\u4e48\u200b [p] \u200b\u4e5f\u200b\u6709\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b [T']\uff0c\u200b\u53ea\u8981\u200b [T] \u200b\u53ef\u4ee5\u200b\u51cf\u5c11\u200b(\u200b\u5e94\u8be5\u200b\u662f\u200b\u89c4\u7ea6\u200b\uff1f)\u200b\u5230\u200b [T']\uff0c\u200b\u6216\u8005\u200b\u53cd\u8fc7\u6765\u200b\uff08\u200b\u66f4\u200b\u4e00\u822c\u5730\u8bf4\u200b\uff0c[T] \u200b\u548c\u200b [T'] \u200b\u662f\u200b\u53ef\u200b\u8f6c\u6362\u200b\u7684\u200b\uff09\u3002</p> <p>Copilot @workspace /explain \u200b\u8bf7\u95ee\u200b Coq \u200b\u4e2d\u200b\u7684\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u6709\u200b\u4ec0\u4e48\u200b\u7279\u70b9\u200b\u548c\u200b\u7528\u9014\u200b\uff1f \u200b\u5728\u200b Coq \u200b\u4e2d\u200b\uff0c\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u662f\u200b\u4e00\u79cd\u200b\u5f3a\u5927\u200b\u7684\u200b\u7c7b\u578b\u200b\u7cfb\u7edf\u200b\u7279\u6027\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u7c7b\u578b\u200b\u4f9d\u8d56\u4e8e\u200b\u503c\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\uff0c\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u5176\u200b\u5173\u8054\u200b\u7684\u200b\u503c\u200b\u8fdb\u884c\u200b\u6539\u53d8\u200b\uff0c\u200b\u8fd9\u4e3a\u200b\u7f16\u7a0b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u7cbe\u786e\u200b\u7684\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u989d\u5916\u200b\u7684\u200b\u7f16\u7a0b\u200b\u8bbe\u65bd\u200b\u3002</p> <p>\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e3b\u8981\u7528\u9014\u200b\u662f\u200b\u5728\u200b\u7c7b\u578b\u200b\u7ea7\u522b\u200b\u5bf9\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u884c\u4e3a\u200b\u8fdb\u884c\u200b\u7f16\u7801\u200b\uff0c\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u66f4\u5f3a\u200b\u7684\u200b\u7c7b\u578b\u200b\u5b89\u5168\u6027\u200b\u4fdd\u8bc1\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e3a\u200b \"\u200b\u957f\u5ea6\u200b\u4e3a\u200b n \u200b\u7684\u200b\u6574\u6570\u200b\u5217\u8868\u200b\" \u200b\u7684\u200b\u5217\u8868\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5176\u4e2d\u200b n \u200b\u662f\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7c7b\u578b\u200b\u7ea7\u522b\u200b\u9632\u6b62\u200b\u8bbf\u95ee\u200b\u8d85\u51fa\u200b\u5217\u8868\u200b\u957f\u5ea6\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u548c\u200b\u8bc1\u660e\u200b\u5b9a\u7406\u200b\u3002\u200b\u5728\u200b Coq \u200b\u4e2d\u200b\uff0c\u200b\u5b9a\u7406\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8bc1\u660e\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u8fd9\u4e9b\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u8fd9\u662f\u200b Curry-Howard correspondence \u200b\u7684\u200b\u4e00\u4e2a\u200b\u5e94\u7528\u200b\uff0c\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u7684\u200b\u6846\u67b6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5f00\u53d1\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7a0b\u5e8f\u200b\u548c\u200b\u8bc1\u660e\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u6846\u67b6\u200b\u4e2d\u200b\uff0c\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u5141\u8bb8\u200b\u6211\u4eec\u200b\u5c06\u200b\u590d\u6742\u200b\u7684\u200b\u903b\u8f91\u200b\u547d\u9898\u200b\u8868\u793a\u200b\u4e3a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u6784\u9020\u200b\u8fd9\u4e9b\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u6765\u200b\u8bc1\u660e\u200b\u8fd9\u4e9b\u200b\u547d\u9898\u200b\u3002</p> <p>\u200b\u603b\u7684\u6765\u8bf4\u200b\uff0c\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u662f\u200b Coq \u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u5de5\u5177\u200b\uff0c\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u5f3a\u200b\u7684\u200b\u7c7b\u578b\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u66f4\u200b\u7cbe\u786e\u200b\u7684\u200b\u7c7b\u578b\u4fe1\u606f\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5f3a\u5927\u200b\u7684\u200b\u8bc1\u660e\u200b\u80fd\u529b\u200b\u3002</p> <p>coq\u200b\u4e2d\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u7ed3\u5c3e\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\uff1aDefined\u200b\u548c\u200bQed\u3002\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u6709\u200b\u4ec0\u4e48\u200b\u533a\u522b\u200b\uff1f</p> <p>copilot\u200b\u751f\u6210\u200b\uff1a Defined\uff1a\u200b\u8868\u793a\u200b\u8be5\u200b\u5b9a\u4e49\u200b\u662f\u200b\u900f\u660e\u200b\u7684\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5c55\u5f00\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u66ff\u6362\u200b\u3002 Qed\uff1a\u200b\u8868\u793a\u200b\u8be5\u200b\u5b9a\u4e49\u200b\u662f\u200b\u4e0d\u200b\u900f\u660e\u200b\u7684\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u5c55\u5f00\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u66ff\u6362\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Isabelle/%E9%9A%8F%E7%AC%94%E8%AE%B0/","title":"\u968f\u200b\u7b14\u8bb0","text":"<p> \u200b\u7ea6\u200b 767 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 3 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Isabelle/%E9%9A%8F%E7%AC%94%E8%AE%B0/#_1","title":"\u4e2d\u6587\u200b\u5b57\u7b26\u200b\u4e71\u7801","text":"<p>\u200b\u5728\u200b Isabelle \u200b\u4e2d\u200b\u8f93\u5165\u200b\u4e2d\u6587\u200b\u5b57\u7b26\u200b\u65f6\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u4e71\u7801\u200b\u3002 \u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a\u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200b\u7684\u200bUTF-8\u200b\u7f16\u7801\u200b\uff08\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5e26\u6709\u200bIsabelle\u200b\u540e\u7f00\u200b\uff09\uff0c\u200b\u7f16\u8f91\u200b\u533a\u200b\u7684\u200b\u663e\u793a\u200b\u5b57\u4f53\u200b\u8981\u200b\u6539\u6210\u200bDialog\u3002 \u200b\u4e4b\u524d\u200b\u8bd5\u200b\u8fc7\u200b\u6539\u6210\u200b\u5fae\u8f6f\u200b\u96c5\u9ed1\u200b\uff0c\u200b\u8fd9\u6837\u200b\u4e2d\u6587\u200b\u786e\u5b9e\u200b\u80fd\u591f\u200b\u663e\u793a\u200b\uff0c\u200b\u4f46\u662f\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4e00\u4e9b\u200b\u6570\u5b66\u200b\u7b26\u53f7\u200b\u663e\u793a\u200b\u4e0d\u4e86\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Isabelle/%E9%9A%8F%E7%AC%94%E8%AE%B0/#symbols","title":"Symbols \u200b\u7b26\u53f7","text":"<p>To give Isabelle/Isar theories a more mathematical appearance we map ASCII characters to more graphical Unicode characters, like \u2200 instead of ALL.</p> <p>\u200b\u4e3a\u4e86\u200b\u7ed9\u200b Isabelle/Isar \u200b\u7406\u8bba\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u6570\u5b66\u200b\u5316\u200b\u7684\u200b\u5916\u89c2\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b ASCII \u200b\u5b57\u7b26\u200b\u6620\u5c04\u200b\u5230\u200b\u66f4\u200b\u56fe\u5f62\u5316\u200b\u7684\u200b Unicode \u200b\u5b57\u7b26\u200b\uff0c\u200b\u6bd4\u5982\u200b \u2200 \u200b\u800c\u200b\u4e0d\u662f\u200b ALL\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Isabelle/%E9%9A%8F%E7%AC%94%E8%AE%B0/#how-do-i-input-those-symbols-anyway","title":"How do I input those symbols anyway?","text":"<p>\u200b\u6211\u8be5\u200b\u5982\u4f55\u200b\u8f93\u5165\u200b\u8fd9\u4e9b\u200b\u7b26\u53f7\u200b\uff1f</p> <p>There are lots of ways to input symbols. The one that always works is to write it out in plain text (e.g. for the 'and' symbol type \\), wait for the symbol to appear, and then press the tab-key. For common symbols you can try to \"paint them in ASCII\" and if Isabelle/JEdit recognizes them it will automatically convert them into their graphical representation. Examples: --&gt; is converted into the long single arrow, / is converted into the 'and' symbol, &lt;= into less-or-equal, [| into opening semantic brackets, and so on. You can also take a look in the symbols panel at the bottom of the Isabelle/JEdit window to get an overview of the available symbols. Another method is to enter them in LaTeX style, e.g., \\circ, \\and and \\forall, then wait for the symbol to appear, and then press the tab-key. <p>\u200b\u8f93\u5165\u200b\u7b26\u53f7\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6709\u200b\u5f88\u200b\u591a\u79cd\u200b\u3002\u200b\u59cb\u7ec8\u200b\u6709\u6548\u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4ee5\u7eaf\u200b\u6587\u672c\u200b\u5f62\u5f0f\u200b\u5c06\u200b\u5176\u200b\u5199\u200b\u51fa\u6765\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u201cand\u201d\u200b\u7b26\u53f7\u200b\u7c7b\u578b\u200b \\ \uff09\uff0c\u200b\u7b49\u5f85\u200b\u7b26\u53f7\u200b\u51fa\u73b0\u200b\uff0c\u200b\u7136\u540e\u200b\u6309\u200b Tab \u200b\u952e\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5e38\u89c1\u200b\u7684\u200b\u7b26\u53f7\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u201c\u200b\u7528\u200b ASCII \u200b\u7ed8\u5236\u200b\u5b83\u4eec\u200b\u201d\uff0c\u200b\u5982\u679c\u200b Isabelle/JEdit \u200b\u8bc6\u522b\u200b\u5b83\u4eec\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u81ea\u52a8\u200b\u5c06\u200b\u5b83\u4eec\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u56fe\u5f62\u200b\u8868\u793a\u200b\u3002\u200b\u793a\u4f8b\u200b\uff1a --&gt; \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u957f\u5355\u200b\u7bad\u5934\u200b\uff0c / \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u201c\u200b\u548c\u200b\u201d\u200b\u7b26\u53f7\u200b\uff0c &lt;= \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5c0f\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b\uff0c [| \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5de6\u200b\u8bed\u4e49\u200b\u62ec\u53f7\u200b\uff0c\u200b\u4f9d\u6b64\u7c7b\u63a8\u200b\u3002\u200b\u60a8\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b Isabelle/JEdit \u200b\u7a97\u53e3\u200b\u5e95\u90e8\u200b\u7684\u200b\u7b26\u53f7\u200b\u9762\u677f\u200b\uff0c\u200b\u4ee5\u200b\u83b7\u53d6\u200b\u53ef\u7528\u200b\u7b26\u53f7\u200b\u7684\u200b\u6982\u8ff0\u200b\u3002 <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4ee5\u200b LaTeX \u200b\u6837\u5f0f\u200b\u8f93\u5165\u200b\u5b83\u4eec\u200b\uff0c\u200b\u4f8b\u5982\u200b \\circ\u3001\\and \u200b\u548c\u200b \\forall\uff0c\u200b\u7136\u540e\u200b\u7b49\u5f85\u200b\u7b26\u53f7\u200b\u51fa\u73b0\u200b\uff0c\u200b\u7136\u540e\u200b\u6309\u200b Tab \u200b\u952e\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Isabelle/%E9%9A%8F%E7%AC%94%E8%AE%B0/#definitions","title":"Definitions \u200b\u5b9a\u4e49","text":"<p>\u200b\u5728\u200bIsabelle\u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u5c06\u200b\u53d8\u91cf\u540d\u200b\u52a0\u4e0a\u200b<code>_def</code>\u200b\u540e\u7f00\u200b\u6765\u200b\u8868\u793a\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u5b9a\u4e49\u200b\u3002\u200b\u8fd9\u662f\u200b\u4e00\u79cd\u200b\u5e38\u89c1\u200b\u7684\u200b\u547d\u540d\u200b\u7ea6\u5b9a\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6e05\u6670\u200b\u5730\u533a\u200b\u5206\u200b\u53d8\u91cf\u200b\u7684\u200b\u4f7f\u7528\u200b\u548c\u200b\u5176\u200b\u5b9a\u4e49\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/Isabelle/%E9%9A%8F%E7%AC%94%E8%AE%B0/#attributes","title":"Attributes \u200b\u5c5e\u6027","text":"<p>\u200b\u5728\u200bIsabelle/HOL\u200b\u4e2d\u200b\uff0c<code>[simp]</code>\u200b\u5c5e\u6027\u200b\u88ab\u200b\u7528\u4e8e\u200b\u6807\u8bb0\u200b\u90a3\u4e9b\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7b80\u5316\u200b\u5668\u200b\uff08simplifier\uff09\u200b\u81ea\u52a8\u200b\u5e94\u7528\u200b\u7684\u200b\u5f15\u7406\u200b\u3002\u200b\u7b80\u5316\u200b\u5668\u662f\u200bIsabelle\u200b\u7684\u200b\u4e00\u4e2a\u200b\u91cd\u8981\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u5b83\u200b\u8d1f\u8d23\u200b\u81ea\u52a8\u5316\u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u7b49\u5f0f\u200b\u548c\u200b\u4e0d\u7b49\u5f0f\u200b\u7684\u200b\u7b80\u5316\u200b\u3002\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u5f15\u7406\u200b\u88ab\u200b\u6807\u8bb0\u200b\u4e3a\u200b<code>[simp]</code>\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5728\u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u5f53\u200b\u7b80\u5316\u200b\u5668\u200b\u9047\u5230\u200b\u4e0e\u200b\u8be5\u200b\u5f15\u7406\u200b\u76f8\u5173\u200b\u7684\u200b\u6a21\u5f0f\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u81ea\u52a8\u200b\u5c1d\u8bd5\u200b\u5e94\u7528\u200b\u8be5\u200b\u5f15\u7406\u200b\u6765\u200b\u7b80\u5316\u200b\u5f53\u524d\u200b\u7684\u200b\u76ee\u6807\u200b\u6216\u200b\u5047\u8bbe\u200b\u3002</p> <p><code>[dest]</code>\u200b\u5c5e\u6027\u200b\u8868\u793a\u200b\u5f15\u7406\u200b\u53ef\u4ee5\u200b\u7528\u4f5c\u200b\u76ee\u6807\u200b\u6d88\u89e3\u200b\uff08destructive rule\uff09\uff0c\u200b\u5728\u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u5f53\u200b\u9700\u8981\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u5047\u8bbe\u200b\u4e2d\u200b\u79fb\u9664\u200b\u67d0\u4e2a\u200b\u6761\u4ef6\u200b\u4ee5\u200b\u7b80\u5316\u200b\u76ee\u6807\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8fd9\u79cd\u200b\u5f15\u7406\u200b\u3002</p> <p>eChronos\u200b\u91cc\u200b\u5bf9\u200b\u7528\u6237\u200b\u4ee3\u7801\u200b\u7684\u200b\u62bd\u8c61\u200b\u53ea\u6709\u200b\u5bf9\u200b\u201c\u200b\u7528\u6237\u7a0b\u5e8f\u200b\u8fdb\u884c\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u201d\u200b\u8fd9\u4e00\u200b\u884c\u4e3a\u200b\u7684\u200b\u62bd\u8c61\u200b\uff0c\u200b\u6211\u200b\u60f3\u200b\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u662f\u200b\u8981\u200b\u8bc1\u660e\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6027\u8d28\u200b\u800c\u200b\u975e\u200b\u7528\u6237\u7a0b\u5e8f\u200b\u7684\u200b\u6b63\u786e\u6027\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5bf9\u200b\u4e0e\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u6709\u5173\u200b\u7684\u200b\u884c\u4e3a\u200b\u8fdb\u884c\u200b\u5efa\u6a21\u200b\u62bd\u8c61\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/ucos_correct/init_goodis%E5%88%86%E6%9E%90/","title":"init_goodis\u200b\u5206\u6790","text":"<p> \u200b\u7ea6\u200b 308 \u200b\u4e2a\u200b\u5b57\u200b  3147 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 40 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E/ucos_correct/init_goodis%E5%88%86%E6%9E%90/#lemma-init_goodis","title":"Lemma init_goodis","text":"<p>Lemma init_goodis:   forall S O I lasrt sd init,     init S O -&gt;     side_condition I lasrt sd init init_lg -&gt;     good_is_S S. Proof.</p> <p><code>*goals* 1 subgoal, subgoal 1 (ID 2719)  ============================    forall (S : osstate) (O : osabst) (I : Inv) (lasrt : LocalInv)      (sd : ossched) (init : osstate -&gt; osabst -&gt; Type),    init S O -&gt; side_condition I lasrt sd init init_lg -&gt; good_is_S S <pre><code>  intros.\n```*goals*\n1 subgoal, subgoal 1 (ID 2727)\n  S : osstate\n  O : osabst\n  I : Inv\n  lasrt : LocalInv\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  X : init S O\n  H : side_condition I lasrt sd init init_lg\n  ============================\n   good_is_S S\n</code></pre>   unfolds in H.</code>goals  1 subgoal, subgoal 1 (ID 2728)   S : osstate   O : osabst   I : Inv   lasrt : LocalInv   sd : ossched   init : osstate -&gt; osabst -&gt; Type   X : init S O   H : GoodI I sd lasrt /\\       (forall (S : osstate) (O : osabst),        init S O -&gt; initst S O I lasrt init_lg / eqdomSO S O)   ============================    good_is_S S <pre><code>  mytac.  \n```*goals*\n1 subgoal, subgoal 1 (ID 2733)\n\n  S : osstate\n  O : osabst\n  I : Inv\n  lasrt : LocalInv\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  X : init S O\n  H : GoodI I sd lasrt\n  H0 : forall (S : osstate) (O : osabst),\n       init S O -&gt; initst S O I lasrt init_lg /\\ eqdomSO S O\n  ============================\n   good_is_S S\n</code></pre>   apply H0 in X. ```goals 1 subgoal, subgoal 1 (ID 2735)</p> <p>S : osstate   O : osabst   I : Inv   lasrt : LocalInv   sd : ossched   init : osstate -&gt; osabst -&gt; Type   X : initst S O I lasrt init_lg / eqdomSO S O   H : GoodI I sd lasrt   H0 : forall (S : osstate) (O : osabst),        init S O -&gt; initst S O I lasrt init_lg / eqdomSO S O   ============================    good_is_S S</p> <pre><code>  destruct X.\n```*goals*\n1 subgoal, subgoal 1 (ID 2742)\n\n  S : osstate\n  O : osabst\n  I : Inv\n  lasrt : LocalInv\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  H1 : initst S O I lasrt init_lg\n  H2 : eqdomSO S O\n  H : GoodI I sd lasrt\n  H0 : forall (S : osstate) (O : osabst),\n       init S O -&gt; initst S O I lasrt init_lg /\\ eqdomSO S O\n  ============================\n   good_is_S S\n</code></pre> <p>clear H0 H2 H. ```goals 1 subgoal, subgoal 1 (ID 2743)</p> <p>S : osstate   O : osabst   I : Inv   lasrt : LocalInv   sd : ossched   init : osstate -&gt; osabst -&gt; Type   H1 : initst S O I lasrt init_lg   ============================    good_is_S S</p> <p><pre><code>  induction H1.\n```*goals*\n2 subgoals, subgoal 1 (ID 2782)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs : cltenvs\n  M : mem\n  isr : language.isr\n  lst : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : envs = sig t E\n  H1 : lst = sig t auxs\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  ============================\n   good_is_S S\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre>   subst. ```goals 2 subgoals, subgoal 1 (ID 2821)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   ============================    good_is_S (G, sig t E, M, isr, sig t auxs)</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  unfolds.\n```*goals*\n2 subgoals, subgoal 1 (ID 2822)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  ============================\n   forall (t0 : tid) (tst : env * env * mem * language.isr * localst),\n   projS (G, sig t E, M, isr, sig t auxs) t0 = Some tst -&gt;\n   let (p, l) := tst in\n   let (p0, _) := p in\n   let (p1, _) := p0 in\n   let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre></p> <p>intros. ```goals 2 subgoals, subgoal 1 (ID 2825)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   t0 : tid   tst : env * env * mem * language.isr * localst   H : projS (G, sig t E, M, isr, sig t auxs) t0 = Some tst   ============================    let (p, l) := tst in    let (p0, ) := p in    let (p1, ) := p0 in    let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  destruct tst.\n```*goals*\n2 subgoals, subgoal 1 (ID 2833)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  t0 : tid\n  p : env * env * mem * language.isr\n  l : localst\n  H : projS (G, sig t E, M, isr, sig t auxs) t0 = Some (p, l)\n  ============================\n   let (p0, _) := p in\n   let (p1, _) := p0 in\n   let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre>   destruct p. ```goals 2 subgoals, subgoal 1 (ID 2843)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   t0 : tid   p : env * env * mem   i : language.isr   l : localst   H : projS (G, sig t E, M, isr, sig t auxs) t0 = Some (p, i, l)   ============================    let (p0, ) := p in    let (, ) := p0 in let (p1, ) := l in let (_, f) := p1 in good_is f</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  destruct p.\n```*goals*\n2 subgoals, subgoal 1 (ID 2853)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  t0 : tid\n  p : env * env\n  m : mem\n  i : language.isr\n  l : localst\n  H : projS (G, sig t E, M, isr, sig t auxs) t0 = Some (p, m, i, l)\n  ============================\n   let (_, _) := p in let (p0, _) := l in let (_, f) := p0 in good_is f\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre>   destruct p. ```goals 2 subgoals, subgoal 1 (ID 2863)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   t0 : tid   e, e0 : env   m : mem   i : language.isr   l : localst   H : projS (G, sig t E, M, isr, sig t auxs) t0 = Some (e, e0, m, i, l)   ============================    let (p, ) := l in let (, f) := p in good_is f</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  destruct l.\n```*goals*\n2 subgoals, subgoal 1 (ID 2871)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  t0 : tid\n  e, e0 : env\n  m : mem\n  i : language.isr\n  p : ie * is\n  c : cs\n  H : projS (G, sig t E, M, isr, sig t auxs) t0 = Some (e, e0, m, i, (p, c))\n  ============================\n   let (_, f) := p in good_is f\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre>   destruct p. ```goals 2 subgoals, subgoal 1 (ID 2881)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   t0 : tid   e, e0 : env   m : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H : projS (G, sig t E, M, isr, sig t auxs) t0 =       Some (e, e0, m, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  unfolds in H.\n```*goals*\n2 subgoals, subgoal 1 (ID 2882)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  t0 : tid\n  e, e0 : env\n  m : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H : match projD (G, sig t E, M) t0 with\n      | Some m =&gt;\n          match get (sig t auxs) t0 with\n          | Some n =&gt; Some (m, isr, n)\n          | None =&gt; None\n          end\n      | None =&gt; None\n      end = Some (e, e0, m, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre>   unfold projD in H. ```goals 2 subgoals, subgoal 1 (ID 2883)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   t0 : tid   e, e0 : env   m : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H : match         match get (sig t E) t0 with         | Some e =&gt; Some (G, e, M)         | None =&gt; None         end       with       | Some m =&gt;           match get (sig t auxs) t0 with           | Some n =&gt; Some (m, isr, n)           | None =&gt; None           end       | None =&gt; None       end = Some (e, e0, m, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  assert (t0 = t \\/ t0 &lt;&gt; t) by tauto.\n```*goals*\n  H0 : t0 = t \\/ t0 &lt;&gt; t\n</code></pre>   destruct H0;subst. ```goals 3 subgoals, subgoal 1 (ID 3031)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   e, e0 : env   m : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H : match         match get (sig t E) t with         | Some e =&gt; Some (G, e, M)         | None =&gt; None         end       with       | Some m =&gt;           match get (sig t auxs) t with           | Some n =&gt; Some (m, isr, n)           | None =&gt; None           end       | None =&gt; None       end = Some (e, e0, m, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 3026) is:  good_is i1 subgoal 3 (ID 2809) is:  good_is_S S <pre><code>  rewrite map_get_sig in H.\n```*goals*\n3 subgoals, subgoal 1 (ID 3037)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  e, e0 : env\n  m : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H : match get (sig t auxs) t with\n      | Some n =&gt; Some (G, E, M, isr, n)\n      | None =&gt; None\n      end = Some (e, e0, m, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 3026) is:\n good_is i1\nsubgoal 3 (ID 2809) is:\n good_is_S S\n</code></pre>   rewrite map_get_sig in H. ```goals 3 subgoals, subgoal 1 (ID 3047)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   e, e0 : env   m : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H : Some (G, E, M, isr, auxs) = Some (e, e0, m, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 3026) is:  good_is i1 subgoal 3 (ID 2809) is:  good_is_S S <pre><code>  inverts H.\n```*goals*\n3 subgoals, subgoal 1 (ID 3174)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  e, e0 : env\n  m : mem\n  i : isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H3 : forall ab : absop,\n       (e, e0, m, i, (i0, i1, c), O, ab) |= init_cur I pa t lg\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 3026) is:\n good_is i1\nsubgoal 3 (ID 2809) is:\n good_is_S S\n</code></pre>   unfold init_cur in H3. ```goals 3 subgoals, subgoal 1 (ID 3175)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   e, e0 : env   m : mem   i : isr   i0 : ie   i1 : is   c : cs   H3 : forall ab : absop,        (e, e0, m, i, (i0, i1, c), O, ab)        |= INV I **           (EX tp : type, GV OSTCBCur @ Tptr tp |-r-&gt; Vptr t) **           init_rdy pa t lg   ============================    good_is i1</p> <p>subgoal 2 (ID 3026) is:  good_is i1 subgoal 3 (ID 2809) is:  good_is_S S <pre><code>  unfold init_rdy in H3.\n```*goals*\n3 subgoals, subgoal 1 (ID 3176)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  e, e0 : env\n  m : mem\n  i : isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H3 : forall ab : absop,\n       (e, e0, m, i, (i0, i1, c), O, ab)\n       |= INV I **\n          (EX tp : type, GV OSTCBCur @ Tptr tp |-r-&gt; Vptr t) **\n          pa t lg **\n          [|GoodLInvAsrt pa|] **\n          OS [empisr, true, nil, nil] ** A_dom_lenv nil\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 3026) is:\n good_is i1\nsubgoal 3 (ID 2809) is:\n good_is_S S\n</code></pre>   lets Hx:H3 (spec_done None). ```goals 3 subgoals, subgoal 1 (ID 3185)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   e, e0 : env   m : mem   i : isr   i0 : ie   i1 : is   c : cs   H3 : forall ab : absop,        (e, e0, m, i, (i0, i1, c), O, ab)        |= INV I **           (EX tp : type, GV OSTCBCur @ Tptr tp |-r-&gt; Vptr t) **           pa t lg **           [|GoodLInvAsrt pa|] **           OS [empisr, true, nil, nil] ** A_dom_lenv nil   Hx : (e, e0, m, i, (i0, i1, c), O, END None)        |= INV I **           (EX tp : type, GV OSTCBCur @ Tptr tp |-r-&gt; Vptr t) **           pa t lg **           [|GoodLInvAsrt pa|] **           OS [empisr, true, nil, nil] ** A_dom_lenv nil   ============================    good_is i1</p> <p>subgoal 2 (ID 3026) is:  good_is i1 subgoal 3 (ID 2809) is:  good_is_S S <pre><code>  simpl in Hx.\n```*goals*\n3 subgoals, subgoal 1 (ID 3680)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  e, e0 : env\n  m : mem\n  i : isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H3 : forall ab : absop,\n       (e, e0, m, i, (i0, i1, c), O, ab)\n       |= INV I **\n          (EX tp : type, GV OSTCBCur @ Tptr tp |-r-&gt; Vptr t) **\n          pa t lg **\n          [|GoodLInvAsrt pa|] **\n          OS [empisr, true, nil, nil] ** A_dom_lenv nil\n  Hx : exists M1 M2 M o1 o2 o,\n       M = m /\\\n       join M1 M2 M /\\\n       o = O /\\\n       join o1 o2 o /\\\n       (exists M3 M4 M0 o3 o4 o0,\n        M0 = M1 /\\\n        join M3 M4 M0 /\\\n        o0 = o1 /\\\n        join o3 o4 o0 /\\\n        (e, e0, M3, i, (i0, i1, c), o3, END None) |= getinv (I (S INUM)) /\\\n        ((exists M5 M6 M7 o5 o6 o7,\n          M7 = M4 /\\\n          join M5 M6 M7 /\\\n          o7 = o4 /\\\n          join o5 o6 o7 /\\\n          (i0 = true /\\ M5 = empenv /\\ emposabst o5) /\\\n          (exists M8 M9 M10 o8 o9 o10,\n           M10 = M6 /\\\n           join M8 M9 M10 /\\\n           o10 = o6 /\\\n           join o8 o9 o10 /\\\n           (exists x,\n            (x 0 = true /\\ M8 = empenv /\\ emposabst o8) /\\\n            i = x /\\ M8 = empenv /\\ emposabst o8 \\/\n            (exists M11 M12 M13 o11 o12 o13,\n             M13 = M8 /\\\n             join M11 M12 M13 /\\\n             o13 = o8 /\\\n             join o11 o12 o13 /\\\n             ((... /\\ ...) /\\ i = x /\\ ... /\\ ...) /\\\n             (e, e0, M12, i, (i0, i1, c), o12, END None) |= getinv (I 0))) /\\\n           (exists M11 M12 M13 o11 o12 o13,\n            M13 = M9 /\\\n            join M11 M12 M13 /\\\n            o13 = o9 /\\\n            join o11 o12 o13 /\\\n            (exists x,\n             (... = true /\\ ... /\\ ...) /\\\n             i = x /\\ M11 = empenv /\\ emposabst o11 \\/\n             (exists M14 M15 M16 o14 o15 o16, M16 = M11 /\\ ... /\\ ...)) /\\\n            (exists x,\n             (... = true /\\ ... /\\ ...) /\\\n             i = x /\\ M12 = empenv /\\ emposabst o12 \\/\n             (exists M14 M15 M16 o14 o15 o16, M16 = M12 /\\ ... /\\ ...))))) \\/\n         (exists M5 M6 M7 o5 o6 o7,\n          M7 = M4 /\\\n          join M5 M6 M7 /\\\n          o7 = o4 /\\\n          join o5 o6 o7 /\\\n          (i0 = false /\\ M5 = empenv /\\ emposabst o5) /\\\n          (exists x M8 M9 M10 o8 o9 o10,\n           M10 = M6 /\\\n           join M8 M9 M10 /\\\n           o10 = o6 /\\\n           join o8 o9 o10 /\\\n           (gettopis i1 = x /\\ M8 = empenv /\\ emposabst o8) /\\\n           ((exists M11 M12 M13 o11 o12 o13,\n             M13 = M9 /\\\n             join M11 M12 M13 /\\\n             o13 = o9 /\\\n             join o11 o12 o13 /\\\n             (x &lt; INUM /\\ M11 = empenv /\\ emposabst o11) /\\\n             (e, e0, M12, i, (i0, i1, c), o12, END None)\n             |= invlth_isr I (x + 1) INUM) \\/\n            x = INUM /\\ M9 = empenv /\\ emposabst o9))))) /\\\n       (exists M3 M4 M0 o3 o4 o0,\n        M0 = M2 /\\\n        join M3 M4 M0 /\\\n        o0 = o2 /\\\n        join o3 o4 o0 /\\\n        (exists x x0 M5 M6 M7 o5 o6 o7,\n         M7 = M3 /\\\n         join M5 M6 M7 /\\\n         o7 = o3 /\\\n         join o5 o6 o7 /\\\n         (exists b,\n          get e OSTCBCur = Some (b, Tptr x) /\\\n          (x0, Int.unsigned Int.zero) = (b, 0%Z) /\\\n          M5 = empenv /\\ emposabst o5) /\\\n         mapstoval (x0, Int.unsigned Int.zero) (Tptr x) false (Vptr t) M6 /\\\n         emposabst o6) /\\\n        (exists M5 M6 M7 o5 o6 o7,\n         M7 = M4 /\\\n         join M5 M6 M7 /\\\n         o7 = o4 /\\\n         join o5 o6 o7 /\\\n         (e, e0, M5, i, (i0, i1, c), o5, END None) |= pa t lg /\\\n         (exists M8 M9 M10 o8 o9 o10,\n          M10 = M6 /\\\n          join M8 M9 M10 /\\\n          o10 = o6 /\\\n          join o8 o9 o10 /\\\n          (GoodLInvAsrt pa /\\ M8 = empenv /\\ emposabst o8) /\\\n          (exists M11 M12 M13 o11 o12 o13,\n           M13 = M9 /\\\n           join M11 M12 M13 /\\\n           o13 = o9 /\\\n           join o11 o12 o13 /\\\n           (exists M14 M15 M16 o14 o15 o16,\n            M16 = M11 /\\\n            join M14 M15 M16 /\\\n            o16 = o11 /\\\n            join o14 o15 o16 /\\\n            (... /\\ ...) /\\ (exists M17 M18 M19 o17 o18 o19, ...)) /\\\n           eq_dom_env e0 nil /\\ M12 = empenv /\\ emposabst o12))))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 3026) is:\n good_is i1\nsubgoal 3 (ID 2809) is:\n good_is_S S\n</code></pre>   mytac. ```goals 3 subgoals, subgoal 1 (ID 4884)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   e, e0 : env   m, x, x0 : mem   x2, x3 : osabst   x11, x12 : mem   x14, x15 : osabst   x5, x6 : mem   x23 : type   x61 : block   H57 : get e OSTCBCur = Some (x61, Tptr x23)   H20 : GoodLInvAsrt pa   H26 : eq_dom_env e0 nil   H3 : forall ab : absop,        (e, e0, m, empisr, (true, nil, nil), O, ab)        |= INV I **           (EX tp : type, GV OSTCBCur @ Tptr tp |-r-&gt; Vptr t) **           pa t lg **           [|GoodLInvAsrt pa|] **           OS [empisr, true, nil, nil] ** A_dom_lenv nil   H66 : (e, e0, x11, empisr, (true, nil, nil), x14, END None)         |= getinv (I (S INUM))   H67 : (exists M1 M2 M o1 o2 o,          M = x12 /\\          join M1 M2 M /\\          o = x15 /\\          join o1 o2 o /\\          (true = true / M1 = empenv / emposabst o1) /\\          (exists M3 M4 M0 o3 o4 o0,           M0 = M2 /\\           join M3 M4 M0 /\\           o0 = o2 /\\           join o3 o4 o0 /\\           (exists x,            (x 0 = true / M3 = empenv / emposabst o3) /\\            empisr = x / M3 = empenv / emposabst o3 \\/            (exists M5 M6 M7 o5 o6 o7,             M7 = M3 /\\             join M5 M6 M7 /\\             o7 = o3 /\\             join o5 o6 o7 /\\             ((x 0 = false / M5 = empenv / emposabst o5) /\\              empisr = x / M5 = empenv / emposabst o5) /\\             (e, e0, M6, empisr, (true, nil, nil), o6, END None)             |= getinv (I 0))) /\\           (exists M5 M6 M7 o5 o6 o7,            M7 = M4 /\\            join M5 M6 M7 /\\            o7 = o4 /\\            join o5 o6 o7 /\\            (exists x,             (x 1 = true / M5 = empenv / emposabst o5) /\\             empisr = x / M5 = empenv / emposabst o5 \\/             (exists M8 M9 M10 o8 o9 o10,              M10 = M5 /\\              join M8 M9 M10 /\\              o10 = o5 /\\              join o8 o9 o10 /\\              ((x 1 = false / M8 = empenv / emposabst o8) /\\               empisr = x / M8 = empenv / emposabst o8) /\\              (e, e0, M9, empisr, (true, nil, nil), o9, END None)              |= getinv (I 1))) /\\            (exists x,             (x 2 = true / M6 = empenv / emposabst o6) /\\             empisr = x / M6 = empenv / emposabst o6 \\/             (exists M8 M9 M10 o8 o9 o10,              M10 = M6 /\\              join M8 M9 M10 /\\              o10 = o6 /\\              join o8 o9 o10 /\\              ((x 2 = false / M8 = empenv / emposabst o8) /\\               empisr = x / M8 = empenv / emposabst o8) /\\              (e, e0, M9, empisr, (true, nil, nil), o9, END None)              |= getinv (I 2)))))) \\/         (exists M1 M2 M o1 o2 o,          M = x12 /\\          join M1 M2 M /\\          o = x15 /\\          join o1 o2 o /\\          (true = false / M1 = empenv / emposabst o1) /\\          (exists x M3 M4 M0 o3 o4 o0,           M0 = M2 /\\           join M3 M4 M0 /\\           o0 = o2 /\\           join o3 o4 o0 /\\           (gettopis nil = x / M3 = empenv / emposabst o3) /\\           ((exists M5 M6 M7 o5 o6 o7,             M7 = M4 /\\             join M5 M6 M7 /\\             o7 = o4 /\\             join o5 o6 o7 /\\             (x &lt; INUM / M5 = empenv / emposabst o5) /\\             (e, e0, M6, empisr, (true, nil, nil), o6, END None)             |= invlth_isr I (x + 1) INUM) \\/            x = INUM / M4 = empenv / emposabst o4)))   H7 : join x5 x6 x0   H65 : join x14 x15 x2   H63 : join x11 x12 x   H4 : join x2 x3 O   H0 : join x x0 m   H15 : (e, e0, x6, empisr, (true, nil, nil), x3, END None) |= pa t lg   H58 : mapstoval (x61, Int.unsigned Int.zero) (Tptr x23) false (Vptr t) x5   ============================    good_is nil</p> <p>subgoal 2 (ID 3026) is:  good_is i1 subgoal 3 (ID 2809) is:  good_is_S S <pre><code>  simpl;auto.\n```*goals*\n2 subgoals, subgoal 1 (ID 3026)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  M : mem\n  isr : language.isr\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t : addrval\n  lg : list logicvar\n  H2 : get O curtid = Some (oscurt t)\n  H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg\n  t0 : tid\n  e, e0 : env\n  m : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H : match\n        match get (sig t E) t0 with\n        | Some e =&gt; Some (G, e, M)\n        | None =&gt; None\n        end\n      with\n      | Some m =&gt;\n          match get (sig t auxs) t0 with\n          | Some n =&gt; Some (m, isr, n)\n          | None =&gt; None\n          end\n      | None =&gt; None\n      end = Some (e, e0, m, i, (i0, i1, c))\n  H0 : t0 &lt;&gt; t\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 2809) is:\n good_is_S S\n</code></pre>   rewrite map_get_sig' in H;auto. ```goals 2 subgoals, subgoal 1 (ID 4892)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   M : mem   isr : language.isr   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t : addrval   lg : list logicvar   H2 : get O curtid = Some (oscurt t)   H3 : forall ab : absop, (G, E, M, isr, auxs, O, ab) |= init_cur I pa t lg   t0 : tid   e, e0 : env   m : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H : None = Some (e, e0, m, i, (i0, i1, c))   H0 : t0 &lt;&gt; t   ============================    good_is i1</p> <p>subgoal 2 (ID 2809) is:  good_is_S S <pre><code>  tryfalse.\n```*goals*\n1 subgoal, subgoal 1 (ID 2809)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  ============================\n   good_is_S S\n</code></pre>   unfolds. ```goals 1 subgoal, subgoal 1 (ID 4907)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   S : env * cltenvs * mem * language.isr * ltaskstset   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : S = (G, envs, M, isr, lst)   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   ============================    forall (t0 : tid) (tst : env * env * mem * language.isr * localst),    projS S t0 = Some tst -&gt;    let (p, l) := tst in    let (p0, ) := p in    let (p1, ) := p0 in    let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  intros.\n```*goals*\n1 subgoal, subgoal 1 (ID 4910)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  t0 : tid\n  tst : env * env * mem * language.isr * localst\n  H7 : projS S t0 = Some tst\n  ============================\n   let (p, l) := tst in\n   let (p0, _) := p in\n   let (p1, _) := p0 in\n   let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   assert (t0 = t \\/ t0 &lt;&gt; t) by tauto. <code>*goals* H8 : t0 = t \\/ t0 &lt;&gt; t <pre><code>destruct H8.\n```*goals*\n2 subgoals, subgoal 1 (ID 5218)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  t0 : tid\n  tst : env * env * mem * language.isr * localst\n  H7 : projS S t0 = Some tst\n  H8 : t0 = t\n  ============================\n   let (p, l) := tst in\n   let (p0, _) := p in\n   let (p1, _) := p0 in\n   let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   subst.</code>goals 2 subgoals, subgoal 1 (ID 5229)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   tst : env * env * mem * language.isr * localst   H7 : projS (G, envs, M, isr, lst) t = Some tst   ============================    let (p, l) := tst in    let (p0, ) := p in    let (p1, ) := p0 in    let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  destruct tst.\n```*goals*\n2 subgoals, subgoal 1 (ID 5237)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  p : env * env * mem * language.isr\n  l : localst\n  H7 : projS (G, envs, M, isr, lst) t = Some (p, l)\n  ============================\n   let (p0, _) := p in\n   let (p1, _) := p0 in\n   let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   destruct p.   destruct p.   destruct p.   destruct l.   destruct p. ```goals 2 subgoals, subgoal 1 (ID 5285)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : projS (G, envs, M, isr, lst) t = Some (e, e0, m0, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  unfolds in H7.\n```*goals*\n2 subgoals, subgoal 1 (ID 5286)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : match projD (G, envs, M) t with\n       | Some m =&gt;\n           match get lst t with\n           | Some n =&gt; Some (m, isr, n)\n           | None =&gt; None\n           end\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre></p> <p>unfold projD in H7. ```goals 2 subgoals, subgoal 1 (ID 5287)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : match          match get envs t with          | Some e =&gt; Some (G, e, M)          | None =&gt; None          end        with        | Some m =&gt;            match get lst t with            | Some n =&gt; Some (m, isr, n)            | None =&gt; None            end        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  eapply join_sig_get_disj in H0;eauto.\n```*goals*\n2 subgoals, subgoal 1 (ID 5289)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H0 : get envs t = Some E /\\ get envs' t = None /\\ Maps.sub envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : match\n         match get envs t with\n         | Some e =&gt; Some (G, e, M)\n         | None =&gt; None\n         end\n       with\n       | Some m =&gt;\n           match get lst t with\n           | Some n =&gt; Some (m, isr, n)\n           | None =&gt; None\n           end\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   destruct H0. ```goals 2 subgoals, subgoal 1 (ID 5301)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : get envs t = Some E   H0 : get envs' t = None / Maps.sub envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : match          match get envs t with          | Some e =&gt; Some (G, e, M)          | None =&gt; None          end        with        | Some m =&gt;            match get lst t with            | Some n =&gt; Some (m, isr, n)            | None =&gt; None            end        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  eapply join_sig_get_disj in H1;eauto.\n```*goals*\n2 subgoals, subgoal 1 (ID 5303)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : get envs t = Some E\n  H0 : get envs' t = None /\\ Maps.sub envs' envs\n  H1 : get lst t = Some auxs /\\ get lst' t = None /\\ Maps.sub lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : match\n         match get envs t with\n         | Some e =&gt; Some (G, e, M)\n         | None =&gt; None\n         end\n       with\n       | Some m =&gt;\n           match get lst t with\n           | Some n =&gt; Some (m, isr, n)\n           | None =&gt; None\n           end\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   unfold tid in . ```goals* 2 subgoals, subgoal 1 (ID 5345)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : addrval -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : get envs t = Some E   H0 : get envs' t = None / Maps.sub envs' envs   H1 : get lst t = Some auxs / get lst' t = None / Maps.sub lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : match          match get envs t with          | Some e =&gt; Some (G, e, M)          | None =&gt; None          end        with        | Some m =&gt;            match get lst t with            | Some n =&gt; Some (m, isr, n)            | None =&gt; None            end        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  rewrite H in H7.\n```*goals*\n2 subgoals, subgoal 1 (ID 5347)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : addrval -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : get envs t = Some E\n  H0 : get envs' t = None /\\ Maps.sub envs' envs\n  H1 : get lst t = Some auxs /\\ get lst' t = None /\\ Maps.sub lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : match get lst t with\n       | Some n =&gt; Some (G, E, M, isr, n)\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   destruct H1. ```goals 2 subgoals, subgoal 1 (ID 5354)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : addrval -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : get envs t = Some E   H0 : get envs' t = None / Maps.sub envs' envs   H1 : get lst t = Some auxs   H8 : get lst' t = None / Maps.sub lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : match get lst t with        | Some n =&gt; Some (G, E, M, isr, n)        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    good_is i1</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  rewrite H1 in H7.\n```*goals*\n2 subgoals, subgoal 1 (ID 5356)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : addrval -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : get envs t = Some E\n  H0 : get envs' t = None /\\ Maps.sub envs' envs\n  H1 : get lst t = Some auxs\n  H8 : get lst' t = None /\\ Maps.sub lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : Some (G, E, M, isr, auxs) = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   good_is i1\n\nsubgoal 2 (ID 5219) is:\n let (p, l) := tst in\n let (p0, _) := p in\n let (p1, _) := p0 in\n let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre>   inverts H7. ```goals 2 subgoals, subgoal 1 (ID 5500)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   envs, envs' : cltenvs   m, M' : mem   lst, lst' : ltaskstset   I : Inv   pa : addrval -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : get envs' t = None / Maps.sub envs' envs   H8 : get lst' t = None / Maps.sub lst' lst   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   e, e0 : env   m0 : mem   i : isr   i0 : ie   i1 : is   c : cs   H : get envs t = Some e0   H2 : join m M' m0   H6 : initst (e, envs', M', i, lst') O I pa lg   IHinitst : good_is_S (e, envs', M', i, lst')   H1 : get lst t = Some (i0, i1, c)   H5 : forall ab : absop,        (e, e0, m, i, (i0, i1, c), empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   ============================    good_is i1</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  lets Hx: H5 (spec_done None).\n```*goals*\n  Hx : (e, e0, m, i, (i0, i1, c), empenv, END None)\n       |= init_rdy pa t lg ** A_dom_lenv ni\n</code></pre>   simpl in Hx;mytac;auto. ```goals 2 subgoals, subgoal 1 (ID 6601)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   envs, envs' : cltenvs   m, M' : mem   lst, lst' : ltaskstset   I : Inv   pa : addrval -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : get envs' t = None   H59 : Maps.sub envs' envs   H8 : get lst' t = None   H58 : Maps.sub lst' lst   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   e, e0 : env   m0 : mem   H : get envs t = Some e0   H2 : join m M' m0   H24 : GoodLInvAsrt pa   H30, H13 : eq_dom_env e0 nil   H1 : get lst t = Some (true, nil, nil)   H6 : initst (e, envs', M', empisr, lst') O I pa lg   IHinitst : good_is_S (e, envs', M', empisr, lst')   H5 : forall ab : absop,        (e, e0, m, empisr, (true, nil, nil), empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H19 : (e, e0, m, empisr, (true, nil, nil), empenv, END None) |= pa t lg   ============================    good_is nil</p> <p>subgoal 2 (ID 5219) is:  let (p, l) := tst in  let (p0, ) := p in  let (p1, ) := p0 in  let (, ) := p1 in let (p2, ) := l in let (, f) := p2 in good_is f <pre><code>  simpl;auto.\n```*goals*\n1 subgoal, subgoal 1 (ID 5219)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : good_is_S (G, envs', M', isr, lst')\n  t0 : tid\n  tst : env * env * mem * language.isr * localst\n  H7 : projS S t0 = Some tst\n  H8 : t0 &lt;&gt; t\n  ============================\n   let (p, l) := tst in\n   let (p0, _) := p in\n   let (p1, _) := p0 in\n   let (_, _) := p1 in let (p2, _) := l in let (_, f) := p2 in good_is f\n</code></pre></p> <p>destruct tst.   destruct p.   destruct p.   destruct p.   destruct l.   destruct p. ```goals 1 subgoal, subgoal 1 (ID 6669)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   S : env * cltenvs * mem * language.isr * ltaskstset   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : S = (G, envs, M, isr, lst)   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : good_is_S (G, envs', M', isr, lst')   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))   H8 : t0 &lt;&gt; t   ============================    good_is i1 <pre><code>  unfolds in IHinitst.\n```*goals*\n1 subgoal, subgoal 1 (ID 6670)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))\n  H8 : t0 &lt;&gt; t\n  ============================\n   good_is i1\n</code></pre>   assert (projS (G, envs', M', isr, lst') t0 = Some (e, e0, M', i, (i0, i1, c))). ```goals 2 subgoals, subgoal 1 (ID 6693)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   S : env * cltenvs * mem * language.isr * ltaskstset   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : S = (G, envs, M, isr, lst)   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))   H8 : t0 &lt;&gt; t   ============================    projS (G, envs', M', isr, lst') t0 = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  unfolds.\n```*goals*\n2 subgoals, subgoal 1 (ID 6695)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))\n  H8 : t0 &lt;&gt; t\n  ============================\n   match projD (G, envs', M') t0 with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6694) is:\n good_is i1\n</code></pre>   unfold projD.  ```goals 2 subgoals, subgoal 1 (ID 6696)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   S : env * cltenvs * mem * language.isr * ltaskstset   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : S = (G, envs, M, isr, lst)   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))   H8 : t0 &lt;&gt; t   ============================    match      match get envs' t0 with      | Some e1 =&gt; Some (G, e1, M')      | None =&gt; None      end    with    | Some m1 =&gt;        match get lst' t0 with        | Some n =&gt; Some (m1, isr, n)        | None =&gt; None        end    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  unfolds in H7.\n```*goals*\n2 subgoals, subgoal 1 (ID 6697)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : (let (p, z) := S in\n        let (x, y) := p in\n        match projD x t0 with\n        | Some m =&gt;\n            match get z t0 with\n            | Some n =&gt; Some (m, y, n)\n            | None =&gt; None\n            end\n        | None =&gt; None\n        end) = Some (e, e0, m0, i, (i0, i1, c))\n  H8 : t0 &lt;&gt; t\n  ============================\n   match\n     match get envs' t0 with\n     | Some e1 =&gt; Some (G, e1, M')\n     | None =&gt; None\n     end\n   with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6694) is:\n good_is i1\n</code></pre>   destruct S. ```goals 2 subgoals, subgoal 1 (ID 6711)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   p : env * cltenvs * mem * language.isr   l : ltaskstset   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : (p, l) = (G, envs, M, isr, lst)   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : (let (x, y) := p in         match projD x t0 with         | Some m =&gt;             match get l t0 with             | Some n =&gt; Some (m, y, n)             | None =&gt; None             end         | None =&gt; None         end) = Some (e, e0, m0, i, (i0, i1, c))   H8 : t0 &lt;&gt; t   ============================    match      match get envs' t0 with      | Some e1 =&gt; Some (G, e1, M')      | None =&gt; None      end    with    | Some m1 =&gt;        match get lst' t0 with        | Some n =&gt; Some (m1, isr, n)        | None =&gt; None        end    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  destruct p.\n```*goals*\n2 subgoals, subgoal 1 (ID 6725)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  p : env * cltenvs * mem\n  i2 : language.isr\n  l : ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : (p, i2, l) = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : match projD p t0 with\n       | Some m =&gt;\n           match get l t0 with\n           | Some n =&gt; Some (m, i2, n)\n           | None =&gt; None\n           end\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  H8 : t0 &lt;&gt; t\n  ============================\n   match\n     match get envs' t0 with\n     | Some e1 =&gt; Some (G, e1, M')\n     | None =&gt; None\n     end\n   with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6694) is:\n good_is i1\n</code></pre>   inverts H. ```goals 2 subgoals, subgoal 1 (ID 6833)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   H7 : match projD (G, envs, M) t0 with        | Some m =&gt;            match get lst t0 with            | Some n =&gt; Some (m, isr, n)            | None =&gt; None            end        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    match      match get envs' t0 with      | Some e1 =&gt; Some (G, e1, M')      | None =&gt; None      end    with    | Some m1 =&gt;        match get lst' t0 with        | Some n =&gt; Some (m1, isr, n)        | None =&gt; None        end    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  unfold projD in H7.\n```*goals*\n2 subgoals, subgoal 1 (ID 6834)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H8 : t0 &lt;&gt; t\n  H7 : match\n         match get envs t0 with\n         | Some e =&gt; Some (G, e, M)\n         | None =&gt; None\n         end\n       with\n       | Some m =&gt;\n           match get lst t0 with\n           | Some n =&gt; Some (m, isr, n)\n           | None =&gt; None\n           end\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   match\n     match get envs' t0 with\n     | Some e1 =&gt; Some (G, e1, M')\n     | None =&gt; None\n     end\n   with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6694) is:\n good_is i1\n</code></pre>   remember (get envs t0 ) as X. ```goals   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   X : option env   HeqX : X = get envs t0   H7 : match match X with              | Some e =&gt; Some (G, e, M)              | None =&gt; None              end with        | Some m =&gt;            match get lst t0 with            | Some n =&gt; Some (m, isr, n)            | None =&gt; None            end        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    match      match get envs' t0 with      | Some e1 =&gt; Some (G, e1, M')      | None =&gt; None      end    with    | Some m1 =&gt;        match get lst' t0 with        | Some n =&gt; Some (m1, isr, n)        | None =&gt; None        end    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  destruct X;tryfalse.\n```*goals*\n sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H8 : t0 &lt;&gt; t\n  e1 : env\n  HeqX : Some e1 = get envs t0\n  H7 : match get lst t0 with\n       | Some n =&gt; Some (G, e1, M, isr, n)\n       | None =&gt; None\n       end = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   match\n     match get envs' t0 with\n     | Some e2 =&gt; Some (G, e2, M')\n     | None =&gt; None\n     end\n   with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6694) is:\n good_is i1\n</code></pre>   remember ( get lst t0 ) as Y. ```goals 2 subgoals, subgoal 1 (ID 6888)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   e1 : env   HeqX : Some e1 = get envs t0   Y : option localst   HeqY : Y = get lst t0   H7 : match Y with        | Some n =&gt; Some (G, e1, M, isr, n)        | None =&gt; None        end = Some (e, e0, m0, i, (i0, i1, c))   ============================    match      match get envs' t0 with      | Some e2 =&gt; Some (G, e2, M')      | None =&gt; None      end    with    | Some m1 =&gt;        match get lst' t0 with        | Some n =&gt; Some (m1, isr, n)        | None =&gt; None        end    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  destruct Y;tryfalse.\n```*goals*\n2 subgoals, subgoal 1 (ID 6901)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H8 : t0 &lt;&gt; t\n  e1 : env\n  HeqX : Some e1 = get envs t0\n  l : localst\n  HeqY : Some l = get lst t0\n  H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))\n  ============================\n   match\n     match get envs' t0 with\n     | Some e2 =&gt; Some (G, e2, M')\n     | None =&gt; None\n     end\n   with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6694) is:\n good_is i1\n</code></pre>   eapply join_get_get_r_rev with (a:=t0) in H0;eauto. ```goals 3 subgoals, subgoal 1 (ID 6924)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   e1 : env   HeqX : Some e1 = get envs t0   l : localst   HeqY : Some l = get lst t0   H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))   H0 : get envs' t0 = Some e1   ============================    match      match get envs' t0 with      | Some e2 =&gt; Some (G, e2, M')      | None =&gt; None      end    with    | Some m1 =&gt;        match get lst' t0 with        | Some n =&gt; Some (m1, isr, n)        | None =&gt; None        end    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6927) is:  get (sig t E) t0 = None subgoal 3 (ID 6694) is:  good_is i1 <pre><code>  eapply join_get_get_r_rev with (a:=t0) in H1;eauto.\n```*goals*\n4 subgoals, subgoal 1 (ID 6938)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H8 : t0 &lt;&gt; t\n  e1 : env\n  HeqX : Some e1 = get envs t0\n  l : localst\n  HeqY : Some l = get lst t0\n  H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))\n  H0 : get envs' t0 = Some e1\n  H1 : get lst' t0 = Some l\n  ============================\n   match\n     match get envs' t0 with\n     | Some e2 =&gt; Some (G, e2, M')\n     | None =&gt; None\n     end\n   with\n   | Some m1 =&gt;\n       match get lst' t0 with\n       | Some n =&gt; Some (m1, isr, n)\n       | None =&gt; None\n       end\n   | None =&gt; None\n   end = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6941) is:\n get (sig t auxs) t0 = None\nsubgoal 3 (ID 6927) is:\n get (sig t E) t0 = None\nsubgoal 4 (ID 6694) is:\n good_is i1\n</code></pre>   rewrite H0. ```goals 4 subgoals, subgoal 1 (ID 6949)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   e1 : env   HeqX : Some e1 = get envs t0   l : localst   HeqY : Some l = get lst t0   H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))   H0 : get envs' t0 = Some e1   H1 : get lst' t0 = Some l   ============================    match get lst' t0 with    | Some n =&gt; Some (G, e1, M', isr, n)    | None =&gt; None    end = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6941) is:  get (sig t auxs) t0 = None subgoal 3 (ID 6927) is:  get (sig t E) t0 = None subgoal 4 (ID 6694) is:  good_is i1 <pre><code>  rewrite H1.\n```*goals*\n4 subgoals, subgoal 1 (ID 6950)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H8 : t0 &lt;&gt; t\n  e1 : env\n  HeqX : Some e1 = get envs t0\n  l : localst\n  HeqY : Some l = get lst t0\n  H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))\n  H0 : get envs' t0 = Some e1\n  H1 : get lst' t0 = Some l\n  ============================\n   Some (G, e1, M', isr, l) = Some (e, e0, M', i, (i0, i1, c))\n\nsubgoal 2 (ID 6941) is:\n get (sig t auxs) t0 = None\nsubgoal 3 (ID 6927) is:\n get (sig t E) t0 = None\nsubgoal 4 (ID 6694) is:\n good_is i1\n</code></pre>   inverts H7. ```goals 4 subgoals, subgoal 1 (ID 7098)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   envs, envs' : cltenvs   m, M' : mem   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   t0 : tid   e, e0 : env   m0 : mem   i : isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   HeqX : Some e0 = get envs t0   H0 : get envs' t0 = Some e0   H2 : join m M' m0   H5 : forall ab : absop,        (e, E, m, i, auxs, empenv, ab) |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (e, envs', M', i, lst') O I pa lg   IHinitst : forall (t : tid) (tst : env * env * mem * isr * localst),              projS (e, envs', M', i, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   HeqY : Some (i0, i1, c) = get lst t0   H1 : get lst' t0 = Some (i0, i1, c)   ============================    Some (e, e0, M', i, (i0, i1, c)) = Some (e, e0, M', i, (i0, i1, c))</p> <p>subgoal 2 (ID 6941) is:  get (sig t auxs) t0 = None subgoal 3 (ID 6927) is:  get (sig t E) t0 = None subgoal 4 (ID 6694) is:  good_is i1 <pre><code>  auto.\n```*goals*\n3 subgoals, subgoal 1 (ID 6941)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H8 : t0 &lt;&gt; t\n  e1 : env\n  HeqX : Some e1 = get envs t0\n  l : localst\n  HeqY : Some l = get lst t0\n  H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))\n  H0 : get envs' t0 = Some e1\n  ============================\n   get (sig t auxs) t0 = None\n\nsubgoal 2 (ID 6927) is:\n get (sig t E) t0 = None\nsubgoal 3 (ID 6694) is:\n good_is i1\n</code></pre>   eapply map_get_sig';eauto. ```goals 2 subgoals, subgoal 1 (ID 6927)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H8 : t0 &lt;&gt; t   e1 : env   HeqX : Some e1 = get envs t0   l : localst   HeqY : Some l = get lst t0   H7 : Some (G, e1, M, isr, l) = Some (e, e0, m0, i, (i0, i1, c))   ============================    get (sig t E) t0 = None</p> <p>subgoal 2 (ID 6694) is:  good_is i1 <pre><code>  eapply map_get_sig';eauto.\n```*goals*\n1 subgoal, subgoal 1 (ID 6694)\n\n  sd : ossched\n  init : osstate -&gt; osabst -&gt; Type\n  S : env * cltenvs * mem * language.isr * ltaskstset\n  O : osabst\n  G : env\n  envs, envs' : cltenvs\n  M, m, M' : mem\n  isr : language.isr\n  lst, lst' : ltaskstset\n  E : env\n  auxs : localst\n  I : Inv\n  pa : tid -&gt; list logicvar -&gt; asrt\n  t, tc : addrval\n  lg : list logicvar\n  H : S = (G, envs, M, isr, lst)\n  H0 : join (sig t E) envs' envs\n  H1 : join (sig t auxs) lst' lst\n  H2 : join m M' M\n  H3 : get O curtid = Some (oscurt tc)\n  H4 : t &lt;&gt; tc\n  H5 : forall ab : absop,\n       (G, E, m, isr, auxs, empenv, ab)\n       |= init_rdy pa t lg ** A_dom_lenv nil\n  H6 : initst (G, envs', M', isr, lst') O I pa lg\n  IHinitst : forall (t : tid)\n               (tst : env * env * mem * language.isr * localst),\n             projS (G, envs', M', isr, lst') t = Some tst -&gt;\n             let (p, l) := tst in\n             let (p0, _) := p in\n             let (p1, _) := p0 in\n             let (_, _) := p1 in\n             let (p2, _) := l in let (_, f) := p2 in good_is f\n  t0 : tid\n  e, e0 : env\n  m0 : mem\n  i : language.isr\n  i0 : ie\n  i1 : is\n  c : cs\n  H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))\n  H8 : t0 &lt;&gt; t\n  H9 : projS (G, envs', M', isr, lst') t0 = Some (e, e0, M', i, (i0, i1, c))\n  ============================\n   good_is i1\n</code></pre>   apply IHinitst in H9. ```goals 1 subgoal, subgoal 1 (ID 7141)</p> <p>sd : ossched   init : osstate -&gt; osabst -&gt; Type   S : env * cltenvs * mem * language.isr * ltaskstset   O : osabst   G : env   envs, envs' : cltenvs   M, m, M' : mem   isr : language.isr   lst, lst' : ltaskstset   E : env   auxs : localst   I : Inv   pa : tid -&gt; list logicvar -&gt; asrt   t, tc : addrval   lg : list logicvar   H : S = (G, envs, M, isr, lst)   H0 : join (sig t E) envs' envs   H1 : join (sig t auxs) lst' lst   H2 : join m M' M   H3 : get O curtid = Some (oscurt tc)   H4 : t &lt;&gt; tc   H5 : forall ab : absop,        (G, E, m, isr, auxs, empenv, ab)        |= init_rdy pa t lg ** A_dom_lenv nil   H6 : initst (G, envs', M', isr, lst') O I pa lg   IHinitst : forall (t : tid)                (tst : env * env * mem * language.isr * localst),              projS (G, envs', M', isr, lst') t = Some tst -&gt;              let (p, l) := tst in              let (p0, ) := p in              let (p1, ) := p0 in              let (, ) := p1 in              let (p2, ) := l in let (, f) := p2 in good_is f   t0 : tid   e, e0 : env   m0 : mem   i : language.isr   i0 : ie   i1 : is   c : cs   H7 : projS S t0 = Some (e, e0, m0, i, (i0, i1, c))   H8 : t0 &lt;&gt; t   H9 : good_is i1   ============================    good_is i1 ```   auto. Qed.</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/","title":"Linux\u200b\u8fdb\u7a0b\u200b\u901a\u4fe1","text":"<p> \u200b\u7ea6\u200b 52 \u200b\u4e2a\u200b\u5b57\u200b </p> <p>\u200b\u8fdb\u7a0b\u200b\u9664\u4e86\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u5176\u4ed6\u200b\u8fdb\u7a0b\u200b\u53d1\u4fe1\u53f7\u200b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\u7ed9\u200b\u8fdb\u7a0b\u200b\u672c\u8eab\u200b\u3002</p> <p>fork\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\u7684\u200bpid\uff0c\u200b\u5219\u200b\u662f\u200b\u7236\u200b\u8fdb\u7a0b\u200b\uff0c\u200b\u5982\u679c\u200b\u8fd4\u56de\u200b0\uff0c\u200b\u5219\u200b\u662f\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/note/","title":"note","text":"<p> \u200b\u7ea6\u200b 58 \u200b\u4e2a\u200b\u5b57\u200b  23 \u200b\u884c\u200b\u4ee3\u7801\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/note/#tcb","title":"TCB\u200b\u4e2d\u200b\u7684\u200b\u4fe1\u53f7","text":"<p><pre><code>typedef struct { // \u200b\u4efb\u52a1\u200b\u63a7\u5236\u200b\u5757\u200b\uff08TCB\uff09\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\n    // ...\n#ifdef LOSCFG_KERNEL_CPUP\n    OsCpupBase      taskCpup;           /**&lt; task cpu usage \u200b\u4efb\u52a1\u200b\u7684\u200bCPU\u200b\u4f7f\u7528\u7387\u200b*/\n#endif\n    INT32           errorNo;            /**&lt; Error Num \u200b\u9519\u8bef\u200b\u7f16\u53f7\u200b*/\n    UINT32          signal;             /**&lt; Task signal \u200b\u4efb\u52a1\u200b\u4fe1\u53f7\u200b*/\n    sig_cb          sig;\n    // ...\n} LosTaskCB;\n</code></pre> \u200b\u6bcf\u200b\u4e00\u4e2a\u200btcb\u200b\u4e2d\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200bsignal\u200b\u548c\u200b\u4e00\u4e2a\u200bsig\uff0csigs\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4fe1\u53f7\u200b\u63a7\u5236\u200b\u5757\u200b\uff0c\u200b\u7528\u6765\u200b\u7ba1\u7406\u200b\u4fe1\u53f7\u200b\u7684\u200b\u3002\u200b\u5176\u200b\u7ed3\u6784\u200b\u4f53\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a <pre><code>typedef struct {\n    sigset_t sigFlag;       ///&lt; \u200b\u4e0d\u200b\u5c4f\u853d\u200b\u7684\u200b\u4fe1\u53f7\u200b\u96c6\u200b\n    sigset_t sigPendFlag;   ///&lt; \u200b\u4fe1\u53f7\u200b\u963b\u585e\u200b\u6807\u7b7e\u96c6\u200b,\u200b\u8bb0\u5f55\u200b\u90a3\u4e9b\u200b\u4fe1\u53f7\u200b\u6765\u8fc7\u200b,\u200b\u4efb\u52a1\u200b\u4f9d\u7136\u200b\u963b\u585e\u200b\u7684\u200b\u96c6\u5408\u200b.\u200b\u5373\u200b:\u200b\u8fd9\u4e9b\u200b\u4fe1\u53f7\u200b\u4e0d\u80fd\u200b\u5524\u9192\u200b\u4efb\u52a1\u200b\n    sigset_t sigprocmask;   ///&lt; Signals that are blocked | \u200b\u4efb\u52a1\u200b\u5c4f\u853d\u200b\u4e86\u200b\u54ea\u4e9b\u200b\u4fe1\u53f7\u200b\n    sq_queue_t sigactionq;  ///&lt; \u200b\u4fe1\u53f7\u200b\u6355\u6349\u200b\u961f\u5217\u200b                 \n    LOS_DL_LIST waitList;   ///&lt; \u200b\u5f85\u200b\u94fe\u8868\u200b,\u200b\u4e0a\u9762\u200b\u6302\u200b\u7684\u200b\u662f\u200b\u7b49\u5f85\u200b\u4fe1\u53f7\u200b\u5230\u6765\u200b\u7684\u200b\u4efb\u52a1\u200b, \u200b\u67e5\u627e\u200bOsSchedTaskWait(&amp;sigcb-&gt;waitList, timeout, TRUE)\u200b\u7406\u89e3\u200b                       \n    sigset_t sigwaitmask; /*! Waiting for pending signals   | \u200b\u4efb\u52a1\u200b\u5728\u200b\u7b49\u5f85\u200b\u54ea\u4e9b\u200b\u4fe1\u53f7\u200b\u7684\u200b\u5230\u6765\u200b */\n    siginfo_t sigunbinfo; /*! Signal info when task unblocked   | \u200b\u4efb\u52a1\u200b\u89e3\u9501\u200b\u65f6\u200b\u7684\u200b\u4fe1\u53f7\u200b\u4fe1\u606f\u200b  */\n    SigInfoListNode *tmpInfoListHead; /*! Signal info List */\n    unsigned int sigIntLock;///&lt; \u200b\u4fe1\u53f7\u200b\u4e2d\u65ad\u200b\u9501\u200b\n    void *sigContext; ///&lt; \u200b\u4fe1\u53f7\u200b\u4e0a\u4e0b\u6587\u200b\n    unsigned int count;///&lt; \u200b\u4fe1\u53f7\u200b\u6570\u91cf\u200b\n} sig_cb;\n</code></pre> <code>sigFlag</code>\u200b\u5e94\u8be5\u200b\u662f\u200b\u8fd9\u4e2a\u200b\u4efb\u52a1\u200b\u6536\u5230\u200b\u7684\u200b\u4fe1\u53f7\u200b\u96c6\u5408\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/","title":"\u7cfb\u7edf\u200b\u8c03\u7528","text":"<p> \u200b\u7ea6\u200b 1394 \u200b\u4e2a\u200b\u5b57\u200b  449 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 10 \u200b\u5206\u949f\u200b</p> <p>LiteOS-a v3.1</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#_2","title":"\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u6587\u4ef6\u200b\u7ed3\u6784","text":"<ul> <li><code>syscall/syscall_lookup.h</code>\uff1a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u8868\u200b\uff1b</li> <li><code>syscall/los_syscall.h</code>\uff1a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\u58f0\u660e\u200b\uff1b</li> <li><code>syscall/los_syscall.c</code>\uff1a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u521d\u59cb\u5316\u200b\u51fd\u6570\u200b\u4e0e\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u5b9e\u73b0\u200b\uff1b</li> <li><code>syscall</code>\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200b\u5176\u4ed6\u200b\u6587\u4ef6\u200b\u5e94\u8be5\u200b\u662f\u200b\u5bf9\u200b\u6240\u6709\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</li> </ul> <p>\u200b\u6bcf\u4e2a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u90fd\u200b\u7531\u5b8f\u200b\u51fd\u6570\u200bSYSCALL_HAND_DEF\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5176\u200b\u53c2\u6570\u200b\u4e3a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u53f7\u200b\u3001\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\u540d\u200b\u3001\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u3001\u200b\u53c2\u6570\u200b\u4e2a\u6570\u200b\u3002 <pre><code>SYSCALL_HAND_DEF(__NR_exit, SysThreadExit, void, ARG_NUM_1)\nSYSCALL_HAND_DEF(__NR_fork, SysFork, int, ARG_NUM_0)\nSYSCALL_HAND_DEF(__NR_vfork, SysVfork, int, ARG_NUM_0)\nSYSCALL_HAND_DEF(__NR_getpid, SysGetPID, unsigned int, ARG_NUM_0)\nSYSCALL_HAND_DEF(__NR_pause, SysPause, int, ARG_NUM_0)\n\nSYSCALL_HAND_DEF(__NR_kill, SysKill, int, ARG_NUM_2)\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#_3","title":"\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u521d\u59cb\u5316\u200b\u51fd\u6570","text":"<pre><code>void OsSyscallHandleInit(void)\n{\n#define SYSCALL_HAND_DEF(id, fun, rType, nArg)                                             \\\n    if ((id) &lt; SYS_CALL_NUM) {                                                             \\\n        g_syscallHandle[(id)] = (UINTPTR)(fun);                                            \\\n        g_syscallNArgs[(id) / NARG_PER_BYTE] |= ((id) &amp; 1) ? (nArg) &lt;&lt; NARG_BITS : (nArg); \\\n    }                                                                                      \\\n\n    #include \"syscall_lookup.h\"\n#undef SYSCALL_HAND_DEF\n}\n</code></pre> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u521d\u59cb\u5316\u200b\u51fd\u6570\u200b<code>OsSyscallHandleInit</code>\u200b\u4f1a\u200b\u904d\u5386\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u8868\u200b\uff0c\u200b\u5c06\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\u6307\u9488\u200b\u4e0e\u200b\u53c2\u6570\u200b\u4e2a\u6570\u200b\u5b58\u5165\u200b\u5168\u5c40\u53d8\u91cf\u200b<code>g_syscallHandle</code>\u200b\u4e0e\u200b<code>g_syscallNArgs</code>\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u6570\u76ee\u200b\u7531\u200b<code>#define SYS_CALL_NUM    (__NR_syscallend + 1)</code>\u200b\u51b3\u5b9a\u200b\uff0c\u200b\u4f46\u662f\u200b<code>__NR_syscallend</code>\u200b\u7684\u200b\u5b9a\u4e49\u200b\u6211\u200b\u6ca1\u6709\u200b\u627e\u5230\u200b\u3002</p> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u4e00\u822c\u200b\u4e0d\u4f1a\u200b\u7279\u522b\u200b\u5927\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8bb0\u5f55\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u7684\u200b\u5168\u5c40\u200b\u6570\u7ec4\u200b<code>g_syscallNArgs</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b<code>UINT8</code>\uff0c\u200b\u6bcf\u4e2a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u7528\u200b4bit\u200b\u8868\u793a\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#_4","title":"\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570","text":"<p><pre><code>/* The SYSCALL ID is in R7 on entry.  Parameters follow in R0..R6 */\nVOID OsArmA32SyscallHandle(TaskContext *regs)\n{\n    UINT32 ret;\n    UINT8 nArgs;\n    UINTPTR handle;\n    UINT32 cmd = regs-&gt;reserved2;\n\n    if (cmd &gt;= SYS_CALL_NUM) {\n        PRINT_ERR(\"Syscall ID: error %d !!!\\n\", cmd);\n        return;\n    }\n\n    handle = g_syscallHandle[cmd];\n    nArgs = g_syscallNArgs[cmd / NARG_PER_BYTE]; /* 4bit per nargs */\n    nArgs = (cmd &amp; 1) ? (nArgs &gt;&gt; NARG_BITS) : (nArgs &amp; NARG_MASK);\n    if ((handle == 0) || (nArgs &gt; ARG_NUM_7)) {\n        PRINT_ERR(\"Unsupported syscall ID: %d nArgs: %d\\n\", cmd, nArgs);\n        regs-&gt;R0 = -ENOSYS;\n        return;\n    }\n\n    OsSigIntLock();\n    switch (nArgs) {\n        case ARG_NUM_0:\n        case ARG_NUM_1:\n            ret = (*(SyscallFun1)handle)(regs-&gt;R0);\n            break;\n        case ARG_NUM_2:\n        case ARG_NUM_3:\n            ret = (*(SyscallFun3)handle)(regs-&gt;R0, regs-&gt;R1, regs-&gt;R2);\n            break;\n        case ARG_NUM_4:\n        case ARG_NUM_5:\n            ret = (*(SyscallFun5)handle)(regs-&gt;R0, regs-&gt;R1, regs-&gt;R2, regs-&gt;R3, regs-&gt;R4);\n            break;\n        default:\n            ret = (*(SyscallFun7)handle)(regs-&gt;R0, regs-&gt;R1, regs-&gt;R2, regs-&gt;R3, regs-&gt;R4, regs-&gt;R5, regs-&gt;R6);\n    }\n\n    regs-&gt;R0 = ret;\n    OsSigIntUnlock();\n\n    return;\n}\n</code></pre> <code>OsArmA32SyscallHandle</code>\u200b\u51fd\u6570\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b<code>regs</code>\u200b\u7684\u200b<code>TaskContext</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b\u5305\u542b\u200b\u4e86\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u53d1\u751f\u200b\u65f6\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u53d8\u91cf\u200b\u5b9a\u4e49\u200b\uff1a<code>ret</code>\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c<code>nArgs</code>\u200b\u662f\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\uff0c<code>handle</code>\u200b\u662f\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\uff0c<code>cmd</code>\u200b\u662f\u4ece\u200b<code>regs</code>\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u7684\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200bID\u3002</p> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200bID\u200b\u68c0\u67e5\u200b:<code>if</code>\u200b\u8bed\u53e5\u200b\u68c0\u67e5\u200b<code>cmd</code>\u200b\u662f\u5426\u200b\u5927\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b<code>SYS_CALL_NUM</code>\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6253\u5370\u200b\u9519\u8bef\u4fe1\u606f\u200b\u5e76\u200b\u8fd4\u56de\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200bID\u200b\u65e0\u6548\u200b\u3002</p> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\u5730\u5740\u200b\u548c\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u83b7\u53d6\u200b\uff1a\u200b\u4ece\u200b<code>g_syscallHandle</code>\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u4e0e\u200b<code>cmd</code>\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\uff0c\u200b\u5e76\u200b\u4ece\u200b<code>g_syscallNArgs</code>\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u8be5\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u9700\u8981\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c<code>g_syscallNArgs</code>\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u5b58\u50a8\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u4f4d\u64cd\u4f5c\u200b\u6765\u200b\u83b7\u53d6\u200b\u6b63\u786e\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u5730\u5740\u200b\u68c0\u67e5\u200b\uff1a<code>if</code>\u200b\u8bed\u53e5\u200b\u68c0\u67e5\u200b\u83b7\u53d6\u200b\u7684\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u5730\u5740\u200b\u662f\u5426\u200b\u4e3a\u200b0\uff0c\u200b\u6216\u8005\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u662f\u5426\u200b\u5927\u4e8e\u200b<code>ARG_NUM_7</code>\u3002\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6253\u5370\u200b\u9519\u8bef\u4fe1\u606f\u200b\uff0c\u200b\u8bbe\u7f6e\u200b<code>regs-&gt;R0</code>\u200b\u4e3a\u200b<code>-ENOSYS</code>\uff0c\u200b\u7136\u540e\u200b\u8fd4\u56de\u200b\u3002<code>-ENOSYS</code>\u200b\u5b9a\u4e49\u200b\u4e3a\u200b40\u3002<code>ARG_NUM_7</code>\u200b\u7684\u200b\u5b9a\u4e49\u200b\u6211\u200b\u8fd8\u200b\u6ca1\u200b\u627e\u5230\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5c31\u662f\u200b7\u3002</p> <p>\u200b\u51fd\u6570\u8c03\u7528\u200b\uff1a\u200b\u51fd\u6570\u200b\u9501\u5b9a\u200b\u4fe1\u53f7\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u7136\u540e\u200b\u6839\u636e\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u8c03\u7528\u200b\u76f8\u5e94\u200b\u7684\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\u4e86\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u51fd\u6570\u6307\u9488\u200b\u7684\u200b\u7c7b\u578b\u200b\uff08<code>SyscallFun1</code>\u3001<code>SyscallFun3</code>\u3001<code>SyscallFun5</code>\u200b\u6216\u200b<code>SyscallFun7</code>\uff09\u200b\u53d6\u51b3\u4e8e\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u51fd\u6570\u200b\u5c06\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u5904\u7406\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u5b58\u50a8\u200b\u5728\u200b<code>regs-&gt;R0</code>\u200b\u4e2d\u200b\uff0c\u200b\u89e3\u9501\u200b\u4fe1\u53f7\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u7136\u540e\u200b\u8fd4\u56de\u200b\u3002<code>R0</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>UINT32</code>\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#_5","title":"\u90e8\u5206\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#syskill","title":"SysKill","text":"<p><pre><code>int SysKill(pid_t pid, int sig)\n{\n    return OsKillLock(pid, sig);\n}\n\nint OsKillLock(pid_t pid, int sig)\n{\n    int ret;\n    unsigned int intSave;\n\n    // \u200b\u8c03\u5ea6\u200b\u9501\u200b\n    SCHEDULER_LOCK(intSave);\n    ret = OsKill(pid, sig, OS_USER_KILL_PERMISSION);{  //\u200b\u7528\u6237\u200b\u6743\u9650\u200b\u5411\u200b\u8fdb\u7a0b\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\n        // int OsKill(pid_t pid, int sig, int permission)\n\n        /*\n            \u200b\u7528\u4e8e\u200b\u5411\u200b\u8fdb\u7a0b\u200b\u6216\u200b\u8fdb\u7a0b\u200b\u7ec4\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\n            shell\u200b\u547d\u4ee4\u200b kill 14 7\uff08kill -14 7\u200b\u6548\u679c\u200b\u76f8\u540c\u200b\uff09\n            \u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b14\uff08SIGALRM\u200b\u9ed8\u8ba4\u200b\u884c\u4e3a\u200b\u4e3a\u200b\u8fdb\u7a0b\u200b\u7ec8\u6b62\u200b\uff09\u200b\u7ed9\u200b7\u200b\u53f7\u200b\u8fdb\u7a0b\u200b\n        */\n        siginfo_t info;\n        int ret;\n\n        /* Make sure that the para is valid */\n        // \u200b\u68c0\u67e5\u200b\u4fe1\u53f7\u200b\u7f16\u53f7\u200b\u662f\u5426\u200b\u6709\u6548\u200b\n        if (!GOOD_SIGNO(sig)) {\n            return -EINVAL;\n        }\n        /* \n        #define WSABASEERR 10000\n        #define WSAEINVAL (WSABASEERR + 22)\n        #define EINVAL           WSAEINVAL            ==&gt; EINVAL = 10022\n        #define _NSIG 65\n        static inline int GOOD_SIGNO(unsigned int sig)\n        {\n            return (sig &lt; _NSIG) ? 1 : 0;\n        }\n        */\n\n        /* Create the siginfo structure */\n        info.si_signo = sig;    // \u200b\u4fe1\u53f7\u200b\u7f16\u53f7\u200b\n        info.si_code = SI_USER; // \u200b\u6765\u81ea\u200b\u7528\u6237\u200b\u8fdb\u7a0b\u200b\u4fe1\u53f7\u200b\n        info.si_value.sival_ptr = NULL;\n\n        if (pid &gt; 0) {\n            /* Send the signal to the specify process */\n            ret = OsDispatch(pid, &amp;info, permission);   //\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\n        } else if (pid == -1) {\n            /* Send SIG to all processes */\n            ret = OsSendSignalToAllProcess(&amp;info, permission);  \n        } else {\n            /* Send SIG to all processes in process group PGRP.\n            If PGRP is zero, send SIG to all processes in\n            the current process's process group. */\n            ret = OsSendSignalToProcessGroup(pid, &amp;info, permission);\n        }\n        return ret;\n    }\n    SCHEDULER_UNLOCK(intSave);\n    return ret;\n}\n</code></pre> <code>SysKill</code>\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\uff1a<code>pid</code>\u200b\u548c\u200b<code>sig</code>\u3002<code>pid</code>\u200b\u662f\u200b\u8981\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\u7684\u200b\u8fdb\u7a0b\u200b\u7684\u200bID\uff0c<code>sig</code>\u200b\u662f\u200b\u8981\u200b\u53d1\u9001\u200b\u7684\u200b\u4fe1\u53f7\u200b\u7684\u200b\u7f16\u53f7\u200b\u3002 <code>SysKill</code>\u200b\u51fd\u6570\u8c03\u7528\u200b\u4e86\u200b<code>OsKillLock</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u4f1a\u200b\u5411\u200b\u6307\u5b9a\u200b\u7684\u200b\u8fdb\u7a0b\u200b\u53d1\u9001\u200b\u4e00\u4e2a\u200b\u4fe1\u53f7\u200b\u3002 <code>OsKillLock</code>\u200b\u51fd\u6570\u200b\u4f1a\u5148\u200b\u9501\u5b9a\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u8c03\u7528\u200b<code>OsKill</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u6700\u540e\u200b\u89e3\u9501\u200b\u8c03\u5ea6\u200b\u5668\u200b\u5e76\u200b\u8fd4\u56de\u200b<code>OsKill</code>\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002 <code>OsKill</code>\u200b\u51fd\u6570\u200b\u4f1a\u200b\u68c0\u67e5\u200b\u4fe1\u53f7\u200b\u7f16\u53f7\u200b\u662f\u5426\u200b\u6709\u6548\u200b\uff0c\u200b\u5e76\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b<code>siginfo_t</code>\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u586b\u5145\u200b\u4fe1\u53f7\u200b\u7f16\u53f7\u200b\u3001\u200b\u4fe1\u53f7\u200b\u6765\u6e90\u200b\u548c\u200b\u4fe1\u53f7\u200b\u503c\u200b\u3002 \u200b\u63a5\u7740\u200b\u6839\u636e\u200b<code>pid</code>\u200b\u7684\u200b\u503c\u6765\u200b\u51b3\u5b9a\u200b\u5411\u200b\u54ea\u4e2a\u200b\u8fdb\u7a0b\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u7136\u540e\u200b\u8c03\u7528\u200b\u76f8\u5e94\u200b\u7684\u200b\u51fd\u6570\u200b\u6765\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#sysfutex","title":"SysFutex","text":"<pre><code>int SysFutex(const unsigned int *uAddr, unsigned int flags, int val,\n             unsigned int absTime, const unsigned int *newUserAddr)\n{\n    if ((flags &amp; FUTEX_MASK) == FUTEX_REQUEUE) {\n        return -OsFutexRequeue(uAddr, flags, val, absTime, newUserAddr);\n    }\n\n    if ((flags &amp; FUTEX_MASK) == FUTEX_WAKE) {\n        return -OsFutexWake(uAddr, flags, val);\n    }\n\n    return -OsFutexWait(uAddr, flags, val, absTime);\n}\n</code></pre> <p>Futex\u200b\u6a21\u5757\u63a5\u53e3\u200b</p> \u200b\u529f\u80fd\u200b\u5206\u7c7b\u200b \u200b\u63a5\u53e3\u200b\u540d\u79f0\u200b \u200b\u63cf\u8ff0\u200b \u200b\u8bbe\u7f6e\u200b\u7ebf\u7a0b\u200b\u7b49\u5f85\u200b OsFutexWait \u200b\u5411\u200bFutex\u200b\u8868\u4e2d\u200b\u63d2\u5165\u200b\u4ee3\u8868\u200b\u88ab\u200b\u963b\u585e\u200b\u7684\u200b\u7ebf\u7a0b\u200b\u7684\u200bnode \u200b\u5524\u9192\u200b\u88ab\u200b\u963b\u585e\u200b\u7ebf\u7a0b\u200b OsFutexWake \u200b\u5524\u9192\u200b\u4e00\u4e2a\u200b\u88ab\u200b\u6307\u5b9a\u200b\u9501\u200b\u963b\u585e\u200b\u7684\u200b\u7ebf\u7a0b\u200b \u200b\u8c03\u6574\u200b\u9501\u200b\u7684\u200b\u5730\u5740\u200b OsFutexRequeue \u200b\u8c03\u6574\u200b\u6307\u5b9a\u200b\u9501\u200b\u5728\u200bFutex\u200b\u8868\u4e2d\u200b\u7684\u200b\u4f4d\u7f6e\u200b <p>OsFutexRequeue\u200b\u5c31\u662f\u200b\u628a\u200b\u9501\u200b\u8fc1\u79fb\u200b\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u7528\u6237\u200b\u6001\u200b\u5730\u5740\u200b\u4e0a\u200b\uff0c\u200b\u5728\u200bhash\u200b\u6876\u200b\u4e2d\u200b\u5220\u9664\u200b\u65e7\u200bnode\uff0c\u200b\u63d2\u5165\u200b\u65b0\u200bnode</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#syspause","title":"SysPause","text":"<p><pre><code>int SysPause(void)\n{\n    return OsPause();\n}\n</code></pre> <code>SysPause</code>\u200b\u51fd\u6570\u200b\u662f\u200b\u8c03\u7528\u200b\u4e86\u200b<code>OsPause</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6682\u505c\u200b\u4efb\u52a1\u200b\u3002 <pre><code>int OsPause(void)\n{\n    LosTaskCB *spcb = NULL;\n    sigset_t oldSigprocmask;\n\n    spcb = OsCurrTaskGet();\n    oldSigprocmask = spcb-&gt;sig.sigprocmask;\n    return OsSigSuspend(&amp;oldSigprocmask);\n}\n</code></pre> <code>OsPause</code>\u200b\u51fd\u6570\u200b\u83b7\u53d6\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u63a7\u5236\u200b\u5757\u200b\uff0c\u200b\u7136\u540e\u200b\u83b7\u53d6\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u4fe1\u53f7\u200b\u63a9\u7801\u200b\uff0c\u200b\u6700\u540e\u200b\u8c03\u7528\u200b<code>OsSigSuspend</code>\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#syssigsuspend","title":"SysSigSuspend","text":"<p><pre><code>int SysSigSuspend(sigset_t_l *setl)\n{\n    sigset_t set;\n    int retVal;\n\n    retVal = LOS_ArchCopyFromUser(&amp;set, &amp;(setl-&gt;sig[0]), sizeof(sigset_t));\n    if (retVal != 0) {\n        return -EFAULT;\n    }\n\n    return OsSigSuspend(&amp;set);\n}\n</code></pre> <code>SysSigSuspend</code>\u200b\u51fd\u6570\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b<code>sigset_t_l</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b<code>sigset_t</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u7ec4\u200b\u3002<code>SysSigSuspend</code>\u200b\u51fd\u6570\u200b\u4f1a\u200b\u5c06\u200b\u8fd9\u4e2a\u200b\u6570\u7ec4\u200b\u62f7\u8d1d\u5230\u200b\u4e00\u4e2a\u200b<code>sigset_t</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d8\u91cf\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u8c03\u7528\u200b<code>OsSigSuspend</code>\u200b\u51fd\u6570\u200b\u3002 <code>sigset_t_l</code>\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a <pre><code>#define MAX_SIG_ARRAY_IN_MUSL 128\n\ntypedef struct {\n    unsigned long sig[MAX_SIG_ARRAY_IN_MUSL / sizeof(unsigned long)];\n} sigset_t_l;\n</code></pre> <code>sigset_t</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u5b9a\u4e49\u200b\u6ca1\u200b\u627e\u5230\u200b\u3002</p> <p><pre><code>///\u200b\u7528\u200b\u53c2\u6570\u200bset\u200b\u4ee3\u66ff\u200b\u8fdb\u7a0b\u200b\u7684\u200b\u539f\u6709\u200b\u63a9\u7801\u200b\uff0c\u200b\u5e76\u200b\u6682\u505c\u200b\u8fdb\u7a0b\u200b\u6267\u884c\u200b\uff0c\u200b\u76f4\u5230\u200b\u6536\u5230\u200b\u4fe1\u53f7\u200b\u518d\u200b\u6062\u590d\u200b\u539f\u6709\u200b\u63a9\u7801\u200b\u5e76\u200b\u7ee7\u7eed\u6267\u884c\u200b\u8fdb\u7a0b\u200b\u3002\n///\u200b\u53c2\u6570\u200bset\u200b\u662f\u200b\u8981\u200b\u5c4f\u853d\u200b\u7684\u200b\u4fe1\u53f7\u200b\nint OsSigSuspend(const sigset_t *set)\n{\n    unsigned int intSave;\n    LosTaskCB *rtcb = NULL;\n    sigset_t setSuspend;\n    int ret;\n\n    if (set == NULL) {\n        return -EINVAL;\n    }\n    SCHEDULER_LOCK(intSave);\n    rtcb = OsCurrTaskGet();\n\n    /* Wait signal calc */\n    setSuspend = FULL_SIGNAL_SET &amp; (~(*set));\n\n    /* If pending mask not in sigmask, need set sigflag */\n    OsSigMaskSwitch(rtcb, *set);\n\n    if (rtcb-&gt;sig.sigFlag &gt; 0) {\n        SCHEDULER_UNLOCK(intSave);\n\n        /*\n         * If rtcb-&gt;sig.sigFlag &gt; 0, it means that some signal have been\n         * received, and we need to do schedule to handle the signal directly.\n         */\n        LOS_Schedule();\n        return -EINTR;\n    } else {\n        ret = OsSigTimedWaitNoLock(&amp;setSuspend, NULL, LOS_WAIT_FOREVER);\n        if (ret &lt; 0) {\n            PRINT_ERR(\"FUNC %s LINE = %d, ret = %x\\n\", __FUNCTION__, __LINE__, ret);\n        }\n    }\n\n    SCHEDULER_UNLOCK(intSave);\n    return -EINTR;\n}\n</code></pre> <code>OsSigSuspend</code>\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5305\u62ec\u200b<code>intSave</code>\u3001<code>rtcb</code>\u3001<code>setSuspend</code>\u200b\u548c\u200b<code>ret</code>\u3002\u200b\u7136\u540e\u200b\u68c0\u67e5\u200b\u53c2\u6570\u200b<code>set</code>\u200b\u662f\u5426\u200b\u4e3a\u200b<code>NULL</code>\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd4\u56de\u200b<code>-EINVAL</code>\u3002</p> <p>\u200b\u9501\u5b9a\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u5e76\u200b\u83b7\u53d6\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u4efb\u52a1\u200b\u63a7\u5236\u200b\u5757\u200b\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u5b83\u200b\u8ba1\u7b97\u200b\u51fa\u8981\u200b\u7b49\u5f85\u200b\u7684\u200b\u4fe1\u53f7\u200b\u96c6\u200b<code>setSuspend</code>\uff0c\u200b\u8fd9\u4e2a\u200b\u4fe1\u53f7\u200b\u96c6\u662f\u200b\u5168\u200b\u4fe1\u53f7\u200b\u96c6\u200b\u4e0e\u200b<code>set</code>\u200b\u7684\u200b\u8865\u96c6\u200b\u7684\u200b\u4ea4\u96c6\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u6302\u200b\u8d77\u200b\u7684\u200b\u63a9\u7801\u200b\u4e0d\u200b\u5728\u200b<code>sigmask</code>\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b<code>sigflag</code>\u3002\u200b\u4f7f\u7528\u200b<code>OsSigMaskSwitch</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u5c06\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u4fe1\u53f7\u200b\u63a9\u7801\u200b\u5207\u6362\u200b\u4e3a\u200b<code>set</code>\u3002</p> <p>\u200b\u5982\u679c\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u4fe1\u53f7\u200b\u6807\u5fd7\u200b<code>sigFlag</code>\u200b\u5927\u4e8e\u200b0\uff0c\u200b\u610f\u5473\u7740\u200b\u5df2\u7ecf\u200b\u63a5\u6536\u200b\u5230\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u9700\u8981\u200b\u7acb\u5373\u200b\u5904\u7406\u200b\u8fd9\u4e9b\u200b\u4fe1\u53f7\u200b\u90a3\u4e48\u200b\u89e3\u9501\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u5e76\u200b\u8c03\u7528\u200b<code>LOS_Schedule</code>\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u8c03\u5ea6\u200b\uff0c\u200b\u7136\u540e\u200b\u8fd4\u56de\u200b<code>-EINTR</code>\uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u51fd\u6570\u8c03\u7528\u200b<code>OsSigTimedWaitNoLock</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u7b49\u5f85\u200b<code>setSuspend</code>\u200b\u4e2d\u200b\u7684\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u4e3a\u200b\u65e0\u9650\u200b\u3002\u200b\u5982\u679c\u200b<code>OsSigTimedWaitNoLock</code>\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u5c0f\u4e8e\u200b0\uff0c\u200b\u90a3\u4e48\u200b\u6253\u5370\u200b\u9519\u8bef\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u51fd\u6570\u200b\u89e3\u9501\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b<code>-EINTR</code>\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#sysschedyield","title":"SysSchedYield","text":"<p>\u200b\u7cfb\u7edf\u200bSysSchedYield\u200b\u7684\u200b\u7b80\u7565\u200b\u8c03\u7528\u200b\u5207\u7247\u200b\u5982\u4e0b\u200b\uff1a <pre><code>SysSchedYield(int type){\n    (void)type;\n\n    (void)LOS_TaskYield{\n        UINT32 intSave; // \u200b\u7528\u4e8e\u200b\u4fdd\u5b58\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b \n        // \u200b\u591a\u4efb\u52a1\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u4efb\u52a1\u200b\u5207\u6362\u200b\u548c\u200b\u8c03\u5ea6\u200b\u5f80\u5f80\u200b\u9700\u8981\u200b\u5728\u200b\u7981\u6b62\u200b\u4e2d\u65ad\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8fdb\u884c\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u5728\u200b\u8c03\u5ea6\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53d1\u751f\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u5bfc\u81f4\u7cfb\u7edf\u200b\u72b6\u6001\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u3002\n\n        // \u200b\u6839\u636e\u200b\u7cfb\u7edf\u200b\u72b6\u6001\u200b\uff0c\u200b\u5224\u65ad\u200b\u5f53\u524d\u4efb\u52a1\u200b\u662f\u5426\u200b\u53ef\u4ee5\u200b\u4e3b\u52a8\u200b\u653e\u5f03\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n        Can_Task_Yield_CPU; //\u200b\u5bf9\u5e94\u200b\u539f\u4ee3\u7801\u200b\u4e00\u7cfb\u5217\u200b\u68c0\u67e5\u200b\n\n        // \u200b\u5f53\u524d\u4efb\u52a1\u200b\u53ef\u4ee5\u200b\u4e3b\u52a8\u200b\u653e\u5f03\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n        // \u200b\u9501\u5b9a\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u7981\u6b62\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u786e\u4fdd\u200b\u4efb\u52a1\u8c03\u5ea6\u200b\u7684\u200b\u539f\u5b50\u200b\u6027\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5f53\u524d\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b\u4fdd\u5b58\u200b\u5230\u200b`intSave`\u200b\u53d8\u91cf\u200b\u4e2d\u200b\u3002\n        SCHEDULER_LOCK(intSave);  \n\n        /* \u200b\u91cd\u7f6e\u200b\u6b64\u200b\u4efb\u52a1\u200b\u7684\u200b\u65f6\u95f4\u200b\u7247\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u52a0\u5165\u200b\u8c03\u5ea6\u200b\uff08\u200b\u5c31\u7eea\u200b\uff09\u200b\u961f\u5217\u200b\u4e2d\u200b\uff0c\u200b\u540c\u65f6\u200b\u89e6\u53d1\u200b\u8c03\u5ea6\u200b */\n        OsSchedYield(VOID) {\n            runTask-&gt;timeSlice = 0; // \u200b\u5c06\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u65f6\u95f4\u200b\u7247\u7f6e\u200b\u4e3a\u200b0\n            // \u200b\u52a0\u5165\u200b\u5230\u200b\u5c31\u7eea\u200b\u961f\u5217\u200b\n            VOID OsSchedTaskEnQueue(LosTaskCB *taskCB) {\n                    SchedEnTaskQueue(taskCB); // \u200b\u5c06\u200b\u4efb\u52a1\u200b\u52a0\u5165\u200b\u8c03\u5ea6\u200b\u961f\u5217\u200b \n            }\n            OsSchedResched(); // \u200b\u89e6\u53d1\u200b\u8c03\u5ea6\u200b   \n        };\n\n        SCHEDULER_UNLOCK(intSave); // \u200b\u89e3\u9501\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u6062\u590d\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b\n\n        // \u200b\u4efb\u52a1\u200b\u6210\u529f\u200b\u653e\u5f03\u200b\u4e86\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n        return LOS_OK;\n    };\n    return;\n}\n</code></pre></p> <p>\u200b\u66f4\u52a0\u200b\u8be6\u7ec6\u200b\u7684\u200b\u8c03\u7528\u200b\u5207\u7247\u200b\u5982\u4e0b\u200b\uff1a <pre><code>SysSchedYield(int type){\n    (void)type;\n\n    /* LITE_OS_SEC_TEXT_MINOR UINT32 LOS_TaskYield(VOID)\n\n    #define LITE_OS_SEC_TEXT_MINOR  // __attribute__((section(\".text.ddr\"))) \n    #endif\n\n    \u200b\u51fd\u6570\u53c2\u6570\u200b\uff1a\u200b\u65e0\u200b\n    \u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\uff1aUINT32\n    \u200b\u8fd4\u56de\u503c\u200b\uff1a\u200b\u4efb\u52a1\u200b\u662f\u5426\u200b\u6210\u529f\u200b\u653e\u5f03\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n    */\n    (void)LOS_TaskYield{\n        UINT32 intSave; // \u200b\u7528\u4e8e\u200b\u4fdd\u5b58\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b \n        // \u200b\u591a\u4efb\u52a1\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u4efb\u52a1\u200b\u5207\u6362\u200b\u548c\u200b\u8c03\u5ea6\u200b\u5f80\u5f80\u200b\u9700\u8981\u200b\u5728\u200b\u7981\u6b62\u200b\u4e2d\u65ad\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8fdb\u884c\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u5728\u200b\u8c03\u5ea6\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53d1\u751f\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u5bfc\u81f4\u7cfb\u7edf\u200b\u72b6\u6001\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u3002\n\n        UINT32 intSave;\n\n        // \u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u5904\u4e8e\u200b\u4e2d\u65ad\u200b\u5904\u7406\u200b\u4e2d\u200b\uff0c\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u4efb\u52a1\u200b\u4e3b\u52a8\u200b\u653e\u5f03\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n        if (OS_INT_ACTIVE) { // \u200b\u770b\u200b\u4e0b\u200bOS_INT_ACTIVE \n            return LOS_ERRNO_TSK_YIELD_IN_INT;\n        }\n\n        // \u200b\u5982\u679c\u200b\u7cfb\u7edf\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u62a2\u5360\u200b\uff0c\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u4e3b\u52a8\u200b\u653e\u5f03\u200bCPU\n        if (!OsPreemptable()) { \n            return LOS_ERRNO_TSK_YIELD_IN_LOCK;\n        }\n\n        // \u200b\u5f53\u524d\u4efb\u52a1\u200bID\u200b\u65e0\u6548\u200b\uff0c\u200b\u8fd4\u56de\u200b\u9519\u8bef\u7801\u200b\n        LosTaskCB *runTask = OsCurrTaskGet(); // \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u6b63\u5728\u200b\u8fd0\u884c\u200b\u7684\u200b\u4efb\u52a1\u200b\u7684\u200b\u4efb\u52a1\u200b\u63a7\u5236\u200b\u5757\u200b\n        if (OS_TID_CHECK_INVALID(runTask-&gt;taskID)) {\n            return LOS_ERRNO_TSK_ID_INVALID;\n        }\n\n        // \u200b\u5f53\u524d\u4efb\u52a1\u200b\u53ef\u4ee5\u200b\u4e3b\u52a8\u200b\u653e\u5f03\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n        // \u200b\u9501\u5b9a\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u7981\u6b62\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u786e\u4fdd\u200b\u4efb\u52a1\u8c03\u5ea6\u200b\u7684\u200b\u539f\u5b50\u200b\u6027\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5f53\u524d\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b\u4fdd\u5b58\u200b\u5230\u200b`intSave`\u200b\u53d8\u91cf\u200b\u4e2d\u200b\u3002\n        /*\n        #define SCHEDULER_LOCK(state)       LOS_SpinLockSave(&amp;g_taskSpin, &amp;(state))\n        #define SCHEDULER_UNLOCK(state)     LOS_SpinUnlockRestore(&amp;g_taskSpin, state)\n        */\n        SCHEDULER_LOCK(intSave);  \n\n        /* reset timeslice of yielded task */\n        /* \u200b\u91cd\u7f6e\u200b\u6b64\u200b\u4efb\u52a1\u200b\u7684\u200b\u65f6\u95f4\u200b\u7247\u200b */\n\n        OsSchedYield(VOID) {\n\n            LosTaskCB *runTask = OsCurrTaskGet(); // \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u8fd0\u884c\u200b\u7684\u200b\u4efb\u52a1\u200b\n\n            runTask-&gt;timeSlice = 0; // \u200b\u5c06\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u65f6\u95f4\u200b\u7247\u7f6e\u200b\u4e3a\u200b0\n\n            runTask-&gt;startTime = OsGetCurrSchedTimeCycle(); // \u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\n\n            // \u200b\u5c06\u200b\u5f53\u524d\u4efb\u52a1\u200b\u91cd\u65b0\u52a0\u5165\u200b\u8c03\u5ea6\u200b\u961f\u5217\u200b\u4e2d\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u5c31\u7eea\u200b\u961f\u5217\u200b\n            VOID OsSchedTaskEnQueue(LosTaskCB *taskCB) {\n                #ifdef LOSCFG_SCHED_DEBUG\n                    // \u200b\u5982\u679c\u200b\u4efb\u52a1\u200b\u4e0d\u662f\u200b\u8fd0\u884c\u200b\u72b6\u6001\u200b\uff0c\u200b\u5219\u200b\u8bb0\u5f55\u200b\u4efb\u52a1\u200b\u7684\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\n                    if (!(taskCB-&gt;taskStatus &amp; OS_TASK_STATUS_RUNNING)) {\n                        taskCB-&gt;startTime = OsGetCurrSchedTimeCycle(); \n                    }\n                #endif\n                    SchedEnTaskQueue(taskCB); // \u200b\u5c06\u200b\u4efb\u52a1\u200b\u52a0\u5165\u200b\u8c03\u5ea6\u200b\u961f\u5217\u200b \n            }\n            OsSchedResched(); // \u200b\u89e6\u53d1\u200b\u8c03\u5ea6\u200b   \n        };\n\n        SCHEDULER_UNLOCK(intSave); // \u200b\u89e3\u9501\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff0c\u200b\u6062\u590d\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b\n\n        // \u200b\u4efb\u52a1\u200b\u6210\u529f\u200b\u653e\u5f03\u200b\u4e86\u200bCPU\u200b\u4f7f\u7528\u6743\u200b\n        return LOS_OK;\n    };\n    return;\n}\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#syspthreadkill","title":"SysPthreadKill","text":"<pre><code>///\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u4e4b\u5411\u200b\u7ebf\u7a0b\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b\nint SysPthreadKill(pid_t pid, int sig)\n{\n    return OsPthreadKill(pid, sig){\n        // \u200b\u7ed9\u200b\u7ebf\u7a0b\u200b\uff08\u200b\u4efb\u52a1\u200b\uff09\u200b\u53d1\u9001\u200bkill\u200b\u4fe1\u53f7\u200b\n        // int OsPthreadKill(UINT32 tid, int signo)\n            int ret;\n            UINT32 intSave;\n\n            /* Make sure that the signal is valid */\n            OS_RETURN_IF(!GOOD_SIGNO(signo), -EINVAL); // \u200b\u6682\u672a\u200b\u8003\u8651\u200b\u5efa\u6a21\u200b\n            if (OS_TID_CHECK_INVALID(tid)) {\n                return -ESRCH;\n            }\n\n            /* Keep things stationary through the following */\n            SCHEDULER_LOCK(intSave);\n            ret = OsTaskKillUnsafe(tid, signo){\n                // INT32 OsTaskKillUnsafe(UINT32 taskID, INT32 signo)\n                    siginfo_t info;\n                    LosTaskCB *taskCB = OsGetTaskCB(taskID);\n                    INT32 ret = OsUserTaskOperatePermissionsCheck(taskCB); // \u200b\u6d89\u53ca\u200b\u5230\u200b\u8fdb\u7a0b\u200bID\uff0c\u200b\u6682\u200b\u4e0d\u200b\u5efa\u6a21\u200b\n                    if (ret != LOS_OK) {\n                        return -ret;\n                    }\n\n                    /* Create the siginfo structure */\n                    info.si_signo = signo;\n                    info.si_code = SI_USER;\n                    info.si_value.sival_ptr = NULL;\n\n                    /* Dispatch the signal to thread, bypassing normal task group thread\n                    * dispatch rules. */\n                    return OsTcbDispatch(taskCB, &amp;info){\n                        // int OsTcbDispatch(LosTaskCB *stcb, siginfo_t *info)\n                            bool masked = FALSE;\n                            sig_cb *sigcb = &amp;stcb-&gt;sig;\n\n                            OS_RETURN_IF_NULL(sigcb);\n                            /* If signo is 0, not send signal, just check process or pthread exist */\n                            //\u200b\u5982\u679c\u200b\u4fe1\u53f7\u200b\u4e3a\u200b0,\u200b\u5219\u200b\u4e0d\u200b\u53d1\u9001\u200b\u4fe1\u53f7\u200b,\u200b\u53ea\u662f\u200b\u4f5c\u4e3a\u200b\u68c0\u67e5\u200b\u8fdb\u7a0b\u200b\u548c\u200b\u7ebf\u7a0b\u200b\u662f\u5426\u200b\u8fd8\u200b\u5b58\u5728\u200b.\n                            if (info-&gt;si_signo == 0) {\n                                return 0;\n                            }\n                            masked = (bool)OsSigIsMember(&amp;sigcb-&gt;sigprocmask, info-&gt;si_signo);\n                            if (masked) {   //\u200b\u5982\u679c\u200b\u4fe1\u53f7\u200b\u88ab\u200b\u5c4f\u853d\u200b\u4e86\u200b,\u200b\u8981\u200b\u770b\u200b\u7b49\u5f85\u200b\u4fe1\u53f7\u200b\u96c6\u200b,sigwaitmask\n                                /* If signal is in wait list and mask list, need unblock it */\n                                //\u200b\u5982\u679c\u200b\u4fe1\u53f7\u200b\u5728\u200b\u7b49\u5f85\u200b\u5217\u8868\u200b\u548c\u200b\u63a9\u7801\u200b\u5217\u8868\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u89e3\u9664\u200b\u963b\u6b62\u200b\n                                if (LOS_ListEmpty(&amp;sigcb-&gt;waitList)  ||\n                                    (!LOS_ListEmpty(&amp;sigcb-&gt;waitList) &amp;&amp; !OsSigIsMember(&amp;sigcb-&gt;sigwaitmask, info-&gt;si_signo))) {\n                                    OsSigAddSet(&amp;sigcb-&gt;sigPendFlag, info-&gt;si_signo);   //\u200b\u5c06\u200b\u4fe1\u53f7\u200b\u52a0\u5165\u200b\u6302\u200b\u8d77\u200b/\u200b\u5f85\u529e\u200b\u96c6\u200b\n                                }\n                            } else {    //\u200b\u4fe1\u53f7\u200b\u6ca1\u6709\u200b\u88ab\u200b\u5c4f\u853d\u200b\u7684\u200b\u5904\u7406\u200b\n                                /* unmasked signal actions */\n                                OsSigAddSet(&amp;sigcb-&gt;sigFlag, info-&gt;si_signo);   //\u200b\u4e0d\u200b\u5c4f\u853d\u200b\u7684\u200b\u4fe1\u53f7\u200b\u96c6\u200b\n                            }\n\n                            if (OsAddSigInfoToTmpList(sigcb, info) == LOS_NOK) { //\u200b\u6682\u5b58\u200b\u4fe1\u606f\u200b\n                                return -ENOMEM;\n                            }\n\n                            return OsPendingTaskWake(stcb, info-&gt;si_signo); //\u200b\u5524\u9192\u200b\u76ee\u6807\u200b\u4efb\u52a1\u200b\u53bb\u200b\u5904\u7406\u200b\u4fe1\u53f7\u200b\n                    };\n            };\n            SCHEDULER_UNLOCK(intSave);\n            return ret;\n    };\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/LiteOS/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/#syspthreadjoin","title":"SysPthreadJoin","text":"<pre><code>int SysThreadJoin(unsigned int taskID)\n{\n    unsigned int intSave;\n    int ret;\n\n    if (OS_TID_CHECK_INVALID(taskID)) {\n        return EINVAL;\n    }\n\n    LosTaskCB *taskCB = OS_TCB_FROM_TID(taskID);\n    SCHEDULER_LOCK(intSave);\n    ret = OsUserTaskOperatePermissionsCheck(taskCB);\n    if (ret != LOS_OK) {\n        goto EXIT;\n    }\n\n    ret = (int)OsTaskJoinPendUnsafe(OS_TCB_FROM_TID(taskID)){\n        // LITE_OS_SEC_TEXT UINT32 OsTaskJoinPendUnsafe(LosTaskCB *taskCB){\n            if (taskCB-&gt;taskStatus &amp; OS_TASK_STATUS_INIT)\n            {\n                return LOS_EINVAL;\n            }\n\n            if (taskCB-&gt;taskStatus &amp; OS_TASK_STATUS_EXIT)\n            {\n                return LOS_OK;\n            }\n\n            if ((taskCB-&gt;taskStatus &amp; OS_TASK_FLAG_PTHREAD_JOIN) &amp;&amp; LOS_ListEmpty(&amp;taskCB-&gt;joinList))\n            {\n                OsTaskWaitSetPendMask(OS_TASK_WAIT_JOIN, taskCB-&gt;taskID, LOS_WAIT_FOREVER){\n                    // STATIC INLINE VOID OsTaskWaitSetPendMask(UINT16 mask, UINTPTR lockID, UINT32 timeout)\n                        LosTaskCB *runTask = OsCurrTaskGet();\n                        runTask-&gt;waitID = lockID;\n                        runTask-&gt;waitFlag = mask;\n                        (VOID)timeout;\n                };\n                return OsSchedTaskWait(&amp;taskCB-&gt;joinList, LOS_WAIT_FOREVER, TRUE){\n                    // \u200b\u5c06\u200b\u5f53\u524d\u200b\u8fd0\u884c\u200b\u7684\u200b\u4efb\u52a1\u200b\u7f6e\u4e8e\u200b\u7b49\u5f85\u200b\u72b6\u6001\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b9e\u73b0\u200b\u4efb\u52a1\u200b\u7684\u200b\u7b49\u5f85\u200b\u548c\u200b\u8d85\u65f6\u200b\u529f\u80fd\u200b\n                    // UINT32 OsSchedTaskWait(LOS_DL_LIST *list, UINT32 ticks, BOOL needSched) \n                        LosTaskCB *runTask = OsCurrTaskGet();  // \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u8fd0\u884c\u200b\u7684\u200b\u4efb\u52a1\u200b\n\n                        runTask-&gt;taskStatus |= OS_TASK_STATUS_PENDING; // \u200b\u8bbe\u7f6e\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u72b6\u6001\u200b\u4e3a\u200b\u6302\u200b\u8d77\u200b\u72b6\u6001\u200b\n                        LOS_ListTailInsert(list, &amp;runTask-&gt;pendList); // \u200b\u5c06\u200b\u5f53\u524d\u4efb\u52a1\u200b\u63d2\u5165\u200b\u5230\u200b\u6302\u200b\u8d77\u200b\u961f\u5217\u200b\u4e2d\u200b\n\n                        if (ticks != LOS_WAIT_FOREVER) { // \u200b\u5982\u679c\u200bticks\u200b\u4e0d\u200b\u4e3a\u200b\u65e0\u7a77\u5927\u200b\uff0c\u200b\u5219\u200b\u8bbe\u7f6e\u200b\u5f53\u524d\u4efb\u52a1\u200b\u7684\u200b\u72b6\u6001\u200b\u4e3a\u200b\u5b9a\u65f6\u200b\u6302\u200b\u8d77\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u200b\u8bbe\u7f6e\u200b\u7b49\u5f85\u65f6\u95f4\u200b\n                            runTask-&gt;taskStatus |= OS_TASK_STATUS_PEND_TIME;\n                            runTask-&gt;waitTimes = ticks;\n                        }\n                        // \u200b\u5982\u679c\u200bneedSched\u200b\u4e3a\u200bTRUE\uff0c\u200b\u5373\u200b\u9700\u8981\u200b\u89e6\u53d1\u200b\u8c03\u5ea6\u200b\n                        if (needSched == TRUE) {\n                            OsSchedResched(); // \u200b\u89e6\u53d1\u200b\u8c03\u5ea6\u200b, \u200b\u5df2\u7ecf\u200b\u5efa\u6a21\u200b\n                            if (runTask-&gt;taskStatus &amp; OS_TASK_STATUS_TIMEOUT) {\n                                runTask-&gt;taskStatus &amp;= ~OS_TASK_STATUS_TIMEOUT;\n                                return LOS_ERRNO_TSK_TIMEOUT; // \u200b\u5982\u679c\u200b\u4efb\u52a1\u200b\u8d85\u65f6\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u8d85\u65f6\u200b\u9519\u8bef\u200b\n                            }\n                        }\n\n                        return LOS_OK;\n                };\n            }\n\n            return LOS_EINVAL;\n    };\n\nEXIT:\n    SCHEDULER_UNLOCK(intSave);\n    return ret;\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/","title":"\u6570\u636e\u7ed3\u6784\u200b\u4e0e\u200b\u7b97\u6cd5","text":"<p> \u200b\u7ea6\u200b 19 \u200b\u4e2a\u200b\u5b57\u200b </p> <p>\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u57fa\u7840\u8bfe\u200b~</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/#20230228-dp","title":"2023/02/28 DP\u200b\u8fdb\u884c\u200b\u4e2d","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u52a8\u6001\u200b\u89c4\u5212\u200b  Dynamic Programming","text":"<p> \u200b\u7ea6\u200b 68 \u200b\u4e2a\u200b\u5b57\u200b  3 \u200b\u884c\u200b\u4ee3\u7801\u200b </p> <p>!!!</p> <p>\u200b\u4e0d\u200b\u5b66\u4f1a\u200bDP\u200b\u4e0d\u6539\u200b\u7f51\u540d\u200b\uff01</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#01","title":"01\u200b\u80cc\u5305","text":"<p>\u200b\u6709\u200bn\u200b\u4e2a\u200b\u91cd\u91cf\u200b\u548c\u200b\u4ef7\u503c\u200b\u5206\u522b\u200b\u662f\u200bWi,vi\u200b\u7684\u200b\u7269\u54c1\u200b\u3002\u200b\u4ece\u200b\u8fd9\u4e9b\u200b\u7269\u54c1\u200b\u4e2d\u200b\u6311\u51fa\u200b\u603b\u91cd\u91cf\u200b\u4e0d\u200b\u8d85\u8fc7\u200bW\u200b\u7684\u200b\u7269\u54c1\u200b\uff0c\u200b\u6c42\u200b\u6240\u6709\u200b\u6311\u9009\u200b\u65b9\u6848\u200b\u4e2d\u200b\u4ef7\u503c\u200b\u603b\u548c\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002</p> \u200b\u7a77\u7aed\u200b\u641c\u7d22\u200b(C++)<pre><code>    int n, W;\n    int w[MAX_N], V[MAX_N];\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Latex/","title":"Latex \u200b\u4e00\u4e9b\u200b\u8bed\u6cd5","text":"<p> \u200b\u7ea6\u200b 104 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Latex/#_1","title":"\u7279\u6b8a\u7b26\u53f7","text":"<ul> <li>\u200b\u82b1\u4f53\u200b\u5927\u5199\u5b57\u6bcd\u200b\uff0c\u200b\u5982\u200b \\(\\mathcal{X, L}\\)\u3002\u200b\u8bed\u6cd5\u200b\uff1a<code>\\mathcal{}</code></li> <li>\u200b\u53cc\u7ebf\u200b\u5b57\u6bcd\u200b\uff0c\u200b\u5982\u200b \\(\\mathbb{P, N}\\)\u3002\u200b\u8bed\u6cd5\u200b\uff1a<code>\\mathbb{}</code></li> <li>\u200b\u7528\u4e8e\u200b\u533a\u5206\u200b1\u200b\u7684\u200b\u82b1\u4f53\u200b(\u200b\u4e0d\u200b\u77e5\u9053\u200b\u662f\u4e0d\u662f\u200b) \\(\\ell\\)\u3002\u200b\u8bed\u6cd5\u200b\uff1a<code>\\ell</code></li> <li>\u200b\u7279\u6b8a\u200b\u7ae0\u8282\u200b\u7b26\u53f7\u200b \\(\\S\\)\u3002\u200b\u8bed\u6cd5\u200b\uff1a<code>\\S</code></li> <li>\u200b\u53cc\u200b\u62ec\u53f7\u200b\uff0c\\((\\!\\lvert P \\lvert\\!)\\) \u200b\u6216\u200b \\([\\![  ]\\!]\\)\u3002\u200b\u8bed\u6cd5\u200b<code>(\\!\\lvert P \\lvert\\!)</code>\u200b\u6216\u200b <code>[\\![  ]\\!]</code>\u3002 \u200b\u611f\u89c9\u200b\u4e0d\u5982\u200b\u5bfc\u5165\u200b\u522b\u7684\u200bpackage\u3002</li> <li></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Latex/#_2","title":"\u5bf9\u9f50","text":"<ul> <li>align \u200b\u914d\u5408\u200b &amp;\u3002\u200b\u4ee3\u8868\u200b\u4e0d\u200b\u5728\u200b\u6bcf\u884c\u200b\u6807\u200b\u5e8f\u53f7\u200b\u3002</li> <li>\u200b\u6362\u884c\u200b\u7528\u200b\u53cc\u53cd\u200b\u659c\u7ebf\u200b \"\\\\\"</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/","title":"ML_notes","text":"<p> \u200b\u7ea6\u200b 152 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/#vc","title":"VC\u200b\u7ef4\u200b(\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u3001\u200b\u6253\u6563\u200b)","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff0c\u200b\u5047\u8bbe\u200b\u7a7a\u95f4\u200bH\u200b\u4e2d\u200b\u7684\u200b\u5047\u8bbe\u200b\u5bf9\u200bD\u200b\u4e2d\u200b\u7684\u200b\u6837\u672c\u200b\u8d4b\u4e88\u200b\u6807\u8bb0\u200b\u7684\u200b\u6bcf\u79cd\u200b\u53ef\u80fd\u200b\u7ed3\u679c\u200b\u79f0\u4e3a\u200b\u5bf9\u200bD\u200b\u7684\u200b\u4e00\u79cd\u200b\u5bf9\u5206\u200b(dichotomy),\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u8be5\u200b\u5047\u8bbe\u200b\u628a\u200bD\u200b\u4e2d\u200b\u7684\u200b\u6837\u672c\u200b\u5206\u6210\u200b\u4e86\u200b\u6b63\u200b\u3001\u200b\u8d1f\u200b\u4e24\u7c7b\u200b\u3002 \u200b\u5982\u679c\u200b\u5047\u8bbe\u200b\u7a7a\u95f4\u200bH\u200b\u80fd\u200b\u5b9e\u73b0\u200b\u6837\u672c\u200b\u96c6\u200bD\u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u5bf9\u5206\u200b\uff0c\u200b\u5373\u200b\\(|\\mathcal{H}_{|D}| = 2^{m}\\),\u200b\u5219\u200b\u79f0\u200b\u6837\u672c\u200b\u96c6\u200bD\u200b\u80fd\u200b\u88ab\u200b\u5047\u8bbe\u200b\u7a7a\u95f4\u200b\\(\\mathcal{H}\\)\u200b\u6253\u6563\u200b(shattering),\u200b\u6b64\u65f6\u200b\\(\\prod_{\\mathcal{H}}{(m)} = 2^{m}\\)\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/#natarajan","title":"Natarajan\u200b\u7ef4\u200b(\u200b\u591a\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u3001\u200b\u6253\u6563\u200b)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/#rademacher","title":"\u7ecf\u9a8c\u200bRademacher\u200b\u590d\u6742\u5ea6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/#rademacher_1","title":"Rademacher\u200b\u590d\u6742\u5ea6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/#gaussian","title":"\u7ecf\u9a8c\u200bGaussian\u200b\u590d\u6742\u5ea6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/ML_notes/#gaussian_1","title":"Gaussian\u200b\u590d\u6742\u5ea6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/","title":"Markdown \u200b\u8bed\u6cd5\u200b\u6742\u8bb0","text":"<p> \u200b\u7ea6\u200b 190 \u200b\u4e2a\u200b\u5b57\u200b  15 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#first-title","title":"First: Title (\u200b\u7b2c\u4e00\u200b:\u200b\u6807\u9898\u200b)","text":"<pre><code>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\n# \u200b\u4e00\u7ea7\u200b\u6807\u9898\u200b\n## \u200b\u4e8c\u7ea7\u200b\u6807\u9898\u200b\n### \u200b\u4e09\u7ea7\u200b\u6807\u9898\u200b\n#### \u200b\u56db\u7ea7\u200b\u6807\u9898\u200b\n##### \u200b\u4e94\u7ea7\u200b\u6807\u9898\u200b\n###### \u200b\u516d\u7ea7\u200b\u6807\u9898\u200b\n####### \u200b\u4e03\u7ea7\u200b\u6807\u9898\u200b (\u200b\u6ca1\u7528\u200b\u4e03\u7ea7\u200b\u6807\u9898\u200b\uff01)\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_1","title":"\u4e00\u7ea7\u200b\u6807\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_2","title":"\u4e8c\u7ea7\u200b\u6807\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_3","title":"\u4e09\u7ea7\u200b\u6807\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_4","title":"\u56db\u7ea7\u200b\u6807\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_5","title":"\u4e94\u7ea7\u200b\u6807\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_6","title":"\u516d\u7ea7\u200b\u6807\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_7","title":"# \u200b\u4e03\u7ea7\u200b\u6807\u9898\u200b (\u200b\u6ca1\u6709\u200b\u4e03\u7ea7\u200b\u6807\u9898\u200b\uff01)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#second-quatation","title":"Second: Quatation(\u200b\u5f15\u7528\u200b)","text":"<pre><code>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\n&gt;\u200b\u4e00\u7ea7\u200b\u5f15\u7528\u200b\n&gt;&gt;\u200b\u4e8c\u7ea7\u200b\u5f15\u7528\u200b\n&gt;&gt;&gt;\u200b\u4e09\u7ea7\u200b\u5f15\u7528\u200b\n&gt;&gt;&gt;&gt;\u200b\u56db\u7ea7\u200b\u5f15\u7528\u200b    \n&gt;&gt;&gt;&gt;&gt;\u200b\u4e94\u7ea7\u200b\u5f15\u7528\u200b(\u200b\u7406\u8bba\u200b\u4e0a\u200b\u53ef\u4ee5\u200b\u4e00\u76f4\u200b\u5411\u4e0b\u200b\u5f15\u7528\u200b\uff0c\u200b\u8fd8\u200b\u6ca1\u200b\u67e5\u6e05\u200b--2020/3/24)\n</code></pre> <p>\u200b\u4e00\u7ea7\u200b\u5f15\u7528\u200b</p> <p>\u200b\u4e8c\u7ea7\u200b\u5f15\u7528\u200b</p> <p>\u200b\u4e09\u7ea7\u200b\u5f15\u7528\u200b</p> <p>\u200b\u56db\u7ea7\u200b\u5f15\u7528\u200b    </p> <p>\u200b\u4e94\u7ea7\u200b\u5f15\u7528\u200b(\u200b\u7406\u8bba\u200b\u4e0a\u200b\u53ef\u4ee5\u200b\u4e00\u76f4\u200b\u5411\u4e0b\u200b\u5f15\u7528\u200b\uff0c\u200b\u8fd8\u200b\u6ca1\u200b\u67e5\u6e05\u200b--2020/3/24)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#third-list","title":"Third: List(\u200b\u5217\u8868\u200b)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_8","title":"\u65e0\u5e8f\u200b\u5217\u8868","text":"<ul> <li>1</li> <li>2</li> <li>3</li> <li>1</li> <li>2</li> <li>3</li> <li>1 </li> <li>2</li> <li>3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_9","title":"\u6709\u200b\u5e8f\u5217\u8868","text":"<ol> <li>1</li> <li>2</li> <li>3</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_10","title":"\u6ce8\u610f\u200b(\u200b\u6709\u200b\u5e8f\u5217\u8868\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u662f\u200b\u987a\u5e8f\u200b?)","text":"<ol> <li>3</li> <li>2</li> <li>1</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#fourth-dividing-line-_","title":"Fourth: Dividing Line(* - _\u200b\u81f3\u5c11\u200b\u4e09\u4e2a\u200b)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#fifth-link","title":"Fifth: Link(\u200b\u4e24\u79cd\u200b)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_11","title":"\u884c\u5185\u200b\u5f0f","text":"<p>\u200b\u767e\u5ea6\u200b\u4e00\u4e0b\u200b\u4f60\u200b\u5c31\u200b\u77e5\u9053\u200b</p> <ul> <li>\u200b\u767e\u5ea6\u200b\u4e00\u4e0b\u200b</li> <li>\u200b\u6211\u200b\u7684\u200b\u535a\u5ba2\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_12","title":"\u53c2\u6570\u200b\u5f0f","text":"<ul> <li>\u200b\u8fd9\u662f\u200bCSDN</li> <li>\u200b\u8fd9\u200b\u662f\u200b\u6211\u200b\u7684\u200b\u535a\u5ba2\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Markdown/#_13","title":"\u6587\u672c\u200b\u6837\u5f0f","text":"<p>Markdown\u200b\u6587\u672c\u200b\u6837\u5f0f\u200b\uff08\u200b\u52a0\u7c97\u200b\u3001\u200b\u659c\u4f53\u200b\u3001\u200b\u4e0b\u5212\u7ebf\u200b\u3001\u200b\u5220\u9664\u200b\u7ebf\u200b\u3001\u200b\u9ad8\u4eae\u200b\u3001\u200b\u4e0b\u6807\u200b/\u200b\u4e0a\u6807\u200b\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Vmware/","title":"Vmware","text":"<p> \u200b\u7ea6\u200b 48 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/Vmware/#_1","title":"\u865a\u62df\u673a\u200b\u7f51\u7edc\u200b\u95ee\u9898","text":"<p>\u200b\u865a\u62df\u673a\u200b\u7f51\u7edc\u200b\u7a81\u7136\u200b\u4e0d\u80fd\u200b\u7528\u200b\u4e86\u200b\uff0ceth0\u200b\u6ca1\u6709\u200b\u5206\u914d\u200b\u5230\u200bip\u3002</p> <p>\u200b\u865a\u62df\u673a\u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u52a8\u6001\u200bdpch\uff0c\u200b\u7136\u540e\u200b\u5173\u95ed\u200b\u865a\u62df\u673a\u200b\uff0c\u200b\u91cd\u7f6e\u200bVMware\u200b\u7f51\u7edc\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/","title":"gdb_notes","text":"<p> \u200b\u7ea6\u200b 484 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 2 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#gcc","title":"gcc \u200b\u7f16\u8bd1\u200b\u9009\u9879","text":"<p><code>gcc -static -g -m32 abc.c -o abc</code></p> <ul> <li>static: \u200b\u9759\u6001\u200b\u94fe\u63a5\u200b</li> <li>g: \u200b\u751f\u6210\u200b\u8c03\u8bd5\u4fe1\u606f\u200b</li> <li>m32: \u200b\u751f\u6210\u200b32\u200b\u4f4d\u200b\u4ee3\u7801\u200b</li> <li>o: \u200b\u8f93\u51fa\u200b\u6587\u4ef6\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#gdb","title":"gdb \u200b\u5e38\u7528\u547d\u4ee4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#_1","title":"\u663e\u793a","text":"<ul> <li><code>whatis</code> \u200b\u53d8\u91cf\u540d\u200b\uff1a\u200b\u67e5\u770b\u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u6216\u200b\u51fd\u6570\u200b\u540d\u200b</li> <li><code>ptype</code>\uff1a\u200b\u663e\u793a\u200b\u7c7b\u578b\u200b</li> <li><code>x</code>\uff1a\u200b\u8fdb\u884c\u200b\u5185\u5b58\u200b\u67e5\u770b\u200b\uff0c\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u7b2c\u4e00\u200b\uff1a\u200b\u6570\u636e\u200b\u5757\u200b\u7684\u200b\u9996\u200b\u5730\u5740\u200b\uff0c\u200b\u7b2c\u4e8c\u200b\uff1a\u200b\u6570\u636e\u200b\u5757\u200b\u7684\u200b\u5b57\u8282\u6570\u200b</li> <li><code>print</code>\uff1a\u200b\u663e\u793a\u200b\u5185\u5bb9\u200b     \u200b\u5c40\u90e8\u53d8\u91cf\u200b\u548c\u200b\u5168\u5c40\u53d8\u91cf\u200b\u53d1\u751f\u51b2\u7a81\u200b\u65f6\u200b\uff0c\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u662f\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u4f1a\u200b\u9690\u85cf\u200b\u5168\u5c40\u53d8\u91cf\u200b\uff0c\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u5168\u5c40\u53d8\u91cf\u200b\u548c\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u540c\u540d\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u505c\u6b62\u200b\u70b9\u200b\u5728\u200b\u51fd\u6570\u200b\u4e2d\u200b\uff0c\u200b\u7528\u200bprint\u200b\u663e\u793a\u200b\u51fa\u200b\u7684\u200b\u53d8\u91cf\u200b\u7684\u200b\u503c\u4f1a\u200b\u662f\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\u3002</li> <li><code>info</code>: \u200b\u663e\u793a\u4fe1\u606f\u200b</li> <li><code>show args</code>\uff1a\u200b\u663e\u793a\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u53c2\u6570\u200b</li> <li><code>show environment</code>\uff1a\u200b\u663e\u793a\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u73af\u5883\u53d8\u91cf\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#_2","title":"\u51fd\u6570","text":"<ul> <li><code>step</code>\uff1a\u200b\u5355\u6b65\u200b\u6267\u884c\u200b\uff0c\u200b\u5982\u679c\u200b\u9047\u5230\u200b\u51fd\u6570\u8c03\u7528\u200b\uff0c\u200b\u4f1a\u200b\u8fdb\u5165\u200b\u51fd\u6570\u200b\u5185\u90e8\u200b</li> <li><code>finish</code>\uff1a\u200b\u51fd\u6570\u200b\u5b8c\u6574\u200b\u6267\u884c\u200b\u540e\u200b\u8fd4\u56de\u200b</li> <li><code>return</code>\uff1a\u200b\u8df3\u8fc7\u200b\u5f53\u524d\u200b\u51fd\u6570\u200b\u540e\u9762\u200b\u7684\u200b\u8bed\u53e5\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b\uff0c\u200b\u7d27\u8ddf\u200b\u5728\u200breturn\u200b\u547d\u4ee4\u200b\u540e\u9762\u200b\u5373\u53ef\u200b</li> <li><code>up</code>\uff1a\u200b\u5411\u4e0a\u200b\u79fb\u52a8\u200b\u4e00\u5c42\u200b\u8c03\u7528\u200b\u6808\u200b</li> <li><code>down</code>\uff1a\u200b\u5411\u4e0b\u200b\u79fb\u52a8\u200b\u4e00\u5c42\u200b\u8c03\u7528\u200b\u6808\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#_3","title":"\u65ad\u70b9","text":"<ul> <li><code>i b(info breakpoints)</code>\uff1a\u200b\u67e5\u770b\u200b\u65ad\u70b9\u200b\u4fe1\u606f\u200b</li> <li><code>disable num_1-num_n</code>\uff1a\u200b\u7981\u7528\u200b\u65ad\u70b9\u200b</li> <li><code>enable num_1-num_n</code>\uff1a\u200b\u542f\u7528\u200b\u65ad\u70b9\u200b</li> <li><code>delete num_1-num_n</code>\uff1a\u200b\u5220\u9664\u200b\u65ad\u70b9\u200b</li> <li><code>clear</code>\uff1a\u200b\u5220\u9664\u200b\u6240\u6709\u200b\u65ad\u70b9\u200b</li> <li><code>clear num</code>\uff1a\u200b\u5220\u9664\u200b\u6307\u5b9a\u200b\u65ad\u70b9\u200b</li> <li><code>clear function_name</code>\uff1a\u200b\u5220\u9664\u200b\u6307\u5b9a\u200b\u51fd\u6570\u200b\u7684\u200b\u65ad\u70b9\u200b</li> <li><code>clear file_name:line_num</code>\uff1a\u200b\u5220\u9664\u200b\u6307\u5b9a\u200b\u6587\u4ef6\u200b\u7684\u200b\u6307\u5b9a\u200b\u884c\u200b\u7684\u200b\u65ad\u70b9\u200b</li> <li><code>clear file_name</code>\uff1a\u200b\u5220\u9664\u200b\u6307\u5b9a\u200b\u6587\u4ef6\u200b\u7684\u200b\u6240\u6709\u200b\u65ad\u70b9\u200b</li> <li><code>tbreak</code>\uff1a\u200b\u4e34\u65f6\u200b\u65ad\u70b9\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b\u4e0b\u200b\u4e00\u6b21\u200b\u6267\u884c\u200b\u65f6\u200b\u6709\u6548\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#_4","title":"\u5217\u51fa","text":"<ul> <li><code>l *address</code>\uff1a\u200b\u67e5\u770b\u200b\u6307\u5b9a\u200b\u5730\u5740\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b</li> <li><code>l symbol</code>\uff1a\u200b\u67e5\u770b\u200b\u6307\u5b9a\u200b\u7b26\u53f7\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b</li> <li><code>l function_name</code>\uff1a\u200b\u67e5\u770b\u200b\u6307\u5b9a\u200b\u51fd\u6570\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/gdb_notes/#_5","title":"\u5176\u4ed6","text":"<ul> <li><code>set args arg1 arg2 ...</code>\uff1a\u200b\u8bbe\u7f6e\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u53c2\u6570\u200b ????\u200b\u8fd9\u200b\u662f\u200b\u5565\u200b</li> <li><code>set environment var_name=value</code>\uff1a\u200b\u8bbe\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b</li> <li><code>unset environment var_name</code>\uff1a\u200b\u53d6\u6d88\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u73af\u5883\u53d8\u91cf\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/mkdocs_pro%26slove/","title":"mkdocs \u200b\u6240\u89c1\u200b\u6240\u89e3","text":"<p> \u200b\u7ea6\u200b 95 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/mkdocs_pro%26slove/#mkdocsyml-nav-section","title":"mkdocs.yml --- nav section\u200b\u5d4c\u5957","text":"<p>\u200b\u5931\u8d25\u200b\u7684\u200bsection\u200b\u5d4c\u5957\u200b</p> <p>nav:</p> <pre><code>- section:\n\n    - index.md\n\n    - sub_section:\n\n        - section/sub_section/index.md\n\n        - section/sub_section/part_1.md\n\n        - section/sub_section/part_2.md\n</code></pre> <p>\u200b\u6b63\u786e\u200b\u7684\u200bsection\u200b\u5d4c\u5957\u200b</p> <p>nav:</p> <pre><code>- section:\n\n    - index.md\n\n    - sub_section:\n\n        - section/sub_section/index.md\n\n        - part_1: section/sub_section/part_1.md\n\n        - part_2: section/sub_section/part_2.md\n</code></pre> <p>\u200b\u95ee\u9898\u200b\uff1a\u200b\u7f3a\u5c11\u200b\u4e86\u200bpart\u200b\u90e8\u5206\u200b\u7684\u200b\u547d\u540d\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%9D%82%E8%AE%B0/mkdocs_pro%26slove/#_1","title":"\u7ad9\u200b\u5185\u200b\u8df3\u8f6c\u200b\u94fe\u63a5","text":"<p>\u200b\u63a8\u8350\u200b\u7528\u200b\u76f8\u5bf9\u8def\u5f84\u200b\uff0c\u200b\u8def\u5f84\u200b\u6700\u540e\u200b\u4e0d\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u6587\u4ef6\u200b\u540e\u7f00\u200b\u3002 \u200b\u6bd4\u5982\u200b<code>[\u200b\u8df3\u8f6c\u200b](./section/sub_section/part_1)</code>\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/","title":"DIR","text":"<p> \u200b\u7ea6\u200b 15 \u200b\u4e2a\u200b\u5b57\u200b </p> <ul> <li>\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b\u6570\u636e\u5904\u7406\u200b</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u642d\u5efa\u200b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","title":"\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b\u6570\u636e\u5904\u7406","text":"<p> \u200b\u7ea6\u200b 812 \u200b\u4e2a\u200b\u5b57\u200b  76 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 4 \u200b\u5206\u949f\u200b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_2","title":"\u5185\u7f6e\u200b\u6570\u636e\u200b\u96c6","text":"<p>PyTorch\u200b\u4e3a\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u9886\u57df\u200b\u4e2d\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b\u7684\u200b\u4e00\u4e9b\u200b\u6570\u636e\u200b\u96c6\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4fbf\u643a\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5e76\u200b\u9488\u5bf9\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u8fdb\u884c\u200b\u4e86\u200b\u7b80\u5355\u200b\u7684\u200b\u5206\u7c7b\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5f00\u53d1\u8005\u200b\u80fd\u591f\u200b\u65b9\u4fbf\u5feb\u6377\u200b\u5730\u200b\u4f7f\u7528\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u672c\u200b\u8282\u200b\u6807\u9898\u200b\u94fe\u63a5\u200b\u7684\u200b\u662f\u200btorchvision\u200b\u4e2d\u200b\u5185\u7f6e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e5f\u200b\u5c06\u200b\u4f7f\u7528\u200btorchvision\u200b\u4e2d\u200b\u5185\u7f6e\u200b\u7684\u200bCIFAR10\u200b\u6570\u636e\u200b\u96c6\u200b\u3002 \uff081\uff09\u200b\u4f7f\u7528\u200bCIFAR10\u200b\u6570\u636e\u200b\u96c6\u200b<pre><code>import torchvision\n\ntrain_set = torchvision.datasets.CIFAR10(\n    root=\"./dataset\"\uff0c  # \u200b\u6570\u636e\u200b\u96c6\u200b\u5b58\u653e\u200b\u7684\u200b\u76ee\u5f55\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u91c7\u7528\u200b\u7684\u200b\u662f\u200b\u76f8\u5bf9\u8def\u5f84\u200b\n    train=True,         # \u200b\u9700\u8981\u200b\u7684\u200b\u6570\u636e\u200b\u662f\u5426\u200b\u4e3a\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\n    transform=***,      # \u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\n    download=True)      # \u200b\u5982\u679c\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0d\u200b\u5b58\u5728\u200b\u662f\u5426\u200b\u8fdb\u884c\u200b\u8054\u7f51\u200b\u4e0b\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\ntest_set = torchvision.datasets.CIFAR10(root=\"./dataset\", train=False, download=True)\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_3","title":"\u521b\u5efa\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u5c3d\u7ba1\u200bPyTorch\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u76f8\u5f53\u53ef\u89c2\u200b\u7684\u200b\u5185\u7f6e\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4e00\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u81ea\u5df1\u200b\u5df2\u6709\u200b\u7684\u200b\u6570\u636e\u200b\u3002\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cPyTorch\u200b\u4e3a\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200bDataset\u200b\u5de5\u5177\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <p>\u200b\u5efa\u8bae\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7f51\u7edc\u200b\u7684\u200b\u521d\u5b66\u8005\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u5185\u7f6e\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u4f7f\u7528\u200bDataset\u200b\u521b\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u4ee5\u540e\u200b\u518d\u5b66\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_4","title":"\u6587\u4ef6\u5939\u200b\u5206\u7c7b\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u6211\u200b\u8fd9\u91cc\u200b\u6240\u8bf4\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\u5206\u7c7b\u200b\u6570\u636e\u200b\u96c6\u662f\u200b\u6307\u200b\u5728\u200b\u5206\u7c7b\u200b\u5de5\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u540c\u200b\u4e00\u7c7b\u200b\u7684\u200b\u6570\u636e\u200b\u90fd\u200b\u653e\u5728\u200b\u540c\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\uff0c\u200b\u540c\u65f6\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\u6240\u5c5e\u200b\u7684\u200b\u7c7b\u522b\u200b\u5c31\u662f\u200b\u6587\u4ef6\u5939\u200b\u7684\u200b\u540d\u5b57\u200b\u3002\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a <pre><code>- train\n    - tag_01\n        - data_01_01\n        - data_01_02\n        \u00b7\u00b7\u00b7\n    - tag_02\n        - data_02_01\n        - data_02_02\n        \u00b7\u00b7\u00b7\n- test\n    - tag_01\n        - data_01_01\n        - data_01_02\n        \u00b7\u00b7\u00b7\n    - tag_02\n        - data_02_01\n        - data_02_02\n        \u00b7\u00b7\u00b7\n</code></pre> \u200b\u5982\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bDataset\u200b\u5de5\u5177\u200b\u6765\u200b\u6784\u5efa\u200b\u8fd9\u79cd\u200b\u7b80\u5355\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u3002 \uff082\uff09dataset\u200b\u793a\u4f8b\u200b01<pre><code>from torch.utils.data import Dataset\nfrom PIL import Image\nimport os\n\nclass MyData(Dataset): # \u200b\u4e00\u822c\u800c\u8a00\u200b\uff0c\u200b\u7ee7\u627f\u200bDataset\u200b\u7c7b\u200b\u5e76\u200b\u91cd\u5199\u200b\u4e24\u4e2a\u200b\u65b9\u6cd5\u200b\u5373\u53ef\u200b\u6784\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u5566\u200b\n    def __init__(self, root_dir, label):\n        # \u200b\u50a8\u5b58\u200b\u8def\u5f84\u200b\u4fe1\u606f\u200b\n        self.root_dir = root_dir\n        self.label = label\n        self.data_path = os.path.join(root_dir, label)\n        # \u200b\u50a8\u5b58\u200b\u6570\u636e\u200b\u4fe1\u606f\u200b\n        self.img_path = os.listdir(self.data_path)\n\n    def __getitem__(self, idx):\n        # \u200b\u83b7\u53d6\u200b\u76ee\u6807\u200b\u8def\u5f84\u200b\n        item_path = self.img_path[idx]\n        item_path = os.path.join(self.data_path, item_path)\n        # \u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\n        img = Image.open(img_path)\n        label = self.label\n        return img, label\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_5","title":"\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u6211\u200b\u6240\u8bf4\u200b\u7684\u200b\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u6570\u636e\u200b\u96c6\u662f\u200b\u6307\u200b\u8fd9\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u90fd\u200b\u6709\u200b\u4e0e\u200b\u4e4b\u200b\u4e00\u4e00\u5bf9\u5e94\u200b\u7684\u200b\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u3002\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a <pre><code>    - data_01\n        - data_01_01.xxx\n        \u00b7\u00b7\u00b7\n    - lable_01\n        - data_01_01.txt (\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u662f\u200b\u5176\u4ed6\u200b\u683c\u5f0f\u200b)\n</code></pre> \u200b\u8fd9\u6837\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u6784\u5efa\u200b\u8d77\u6765\u200b\u548c\u200b\u4ee3\u7801\u200b\uff082\uff09\u200b\u4e5f\u200b\u6ca1\u591a\u5927\u200b\u5dee\u522b\u200b\u3002\u200b\u533a\u522b\u200b\u4e3b\u8981\u200b\u4f53\u73b0\u200b\u5728\u200b\u5bf9\u200b\u6807\u7b7e\u200b\u7684\u200b\u5904\u7406\u200b\u4e0a\u200b\uff0c\uff082\uff09\u200b\u4e2d\u200b\u6807\u7b7e\u200b\u662f\u200b\u5df2\u77e5\u200b\u7684\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5373\u53ef\u200b\u3002\u200b\u800c\u200b\uff083\uff09\u200b\u4e2d\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u8def\u5f84\u200b\u6253\u5f00\u200b\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u83b7\u53d6\u200b\u76f8\u5e94\u200b\u7684\u200b\u6807\u7b7e\u200b\u3002 \uff083\uff09dataset\u200b\u793a\u4f8b\u200b02<pre><code>from torch.utils.data import Dataset\nfrom PIL import Image\nimport os\n\nclass MyData(Dataset):\n    def __init__(self, data_dir, label_dir):\n        self.data_path = data_dir\n        self.label_dir = label_dir\n        self.img_path = os.listdir(self.data_path)\n        self.label_path = os.listdir(self.data_path)\n\n    def __getitem__(self, idx):\n        item_path = self.img_path[idx]\n        item_path = os.path.join(self.data_path, item_path)\n        item_label_path = self.label_path[idx]\n        item_label_path = os.path.join(self.labelpath, item_label_path)\n        # \u200b\u83b7\u53d6\u6570\u636e\u200b\n        img = Image.open(img_path)\n        # \u200b\u6839\u636e\u200b item_label_path \u200b\u83b7\u53d6\u200b label\uff0c\u200b\u4e0d\u540c\u200b\u4efb\u52a1\u200blabel\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0d\u540c\u200b\n        # label = \u00b7\u00b7\u00b7\n        return img, label\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_6","title":"\u6570\u636e\u5904\u7406","text":"<p>\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u83b7\u53d6\u200b\u5230\u200b\u4e86\u200b\u6570\u636e\u200b\uff0c\u200b\u6bd4\u5982\u200b\u662f\u200b\u4e00\u4e9b\u200b\u56fe\u7247\u200b\uff0c\u200b\u8981\u200b\u505a\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u56fe\u7247\u200b\u53ef\u80fd\u200b\u5927\u5c0f\u200b\u5c31\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u683c\u5f0f\u200b\u53ef\u80fd\u200b\u4e5f\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5bf9\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u4e00\u4e9b\u200b\u5904\u7406\u200b\uff0c\u200b\u624d\u200b\u80fd\u591f\u200b\u66f4\u597d\u200b\u7684\u200b\u7ed9\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\u3002\u200b\u4e0b\u9762\u200b\u4e3b\u8981\u200b\u4ecb\u7ecd\u200btorchvision\u200b\u4e2d\u200b\u7684\u200b\u51e0\u79cd\u200btransforms\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#totensor","title":"ToTensor","text":"<p>\u200b\u8f93\u5165\u200b\uff1aPIL Image or ndarray</p> <p>\u200b\u8f93\u51fa\u200b\uff1atensor</p> <p>\u200b\u793a\u4f8b\u200b\uff1a \uff084\uff09Totensor<pre><code># \u200b\u5148\u6709\u200b\u53d8\u91cf\u200bimg\u200b\u4e3a\u200bPIL\u200b\u7c7b\u578b\u200b\nfrom torchvision import transforms as T\ntotensor = T.ToTensor() # \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u8f6c\u6362\u5668\u200b\u5bf9\u8c61\u200b\nimg = totensor(img)     # \u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#resize","title":"Resize","text":"<p>Resize the input image to the given size.</p> <p>If the image is torch Tensor, it is expected to have [..., H, W] shape, where ... means an arbitrary number of leading dimensions</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#normalize","title":"Normalize","text":"<p>Normalize a tensor image with mean and standard deviation.</p> <p>This transform does not support PIL Image.</p> <p>Given mean: <code>(mean[1],...,mean[n])</code> and std: <code>(std[1],..,std[n])</code> for <code>n</code> channels, this transform will normalize each channel of the input <code>torch.*Tensor</code> i.e.,</p> <p><code>output[channel] = (input[channel] - mean[channel]) / std[channel]</code></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#compose","title":"Compose","text":"<p>Compose\u200b\u4e3b\u8981\u200b\u662f\u200b\u7528\u6765\u200b\u6574\u5408\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u5316\u200b\u4ee3\u7801\u200b\uff0cCompose\u200b\u8981\u6c42\u200b\u8fd9\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u5904\u7406\u200b\u4e2d\u200b\uff0c\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5904\u7406\u200b\u7684\u200b\u8f93\u51fa\u200b\u80fd\u591f\u200b\u4f5c\u4e3a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5904\u7406\u200b\u7684\u200b\u8f93\u5165\u200b\u3002 \uff085\uff09\u200b\u5b98\u65b9\u200bCompose\u200b\u793a\u4f8b\u200b<pre><code>    Example:\n        transforms.Compose([\n            transforms.CenterCrop(10),\n            transforms.PILToTensor(),\n            transforms.ConvertImageDtype(torch.float),\n        ])\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#more","title":"MORE","text":"<p>\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\u64cd\u4f5c\u200b\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200bPyTorch\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u6216\u200b\u76f4\u63a5\u200b\u67e5\u8be2\u200b\u6e90\u7801\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_7","title":"\u6570\u636e\u200b\u52a0\u8f7d","text":"<p>\u200b\u5728\u200bPyTorch\u200b\u4e2d\u200b\u6211\u4eec\u200b\u4e00\u822c\u200b\u4f7f\u7528\u200bDataLoader\u200b\u6765\u200b\u8fdb\u884c\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u3002DataLoader\u200b\u7684\u200b\u4e3b\u8981\u200b\u4f5c\u7528\u200b\u662f\u200b\u5c06\u200b\u6570\u636e\u200b\u4ece\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u6309\u200b\u4e00\u5b9a\u200b\u89c4\u5219\u200b\u52a0\u8f7d\u200b\u8fdb\u6765\u200b\uff0c\u200b\u4e0b\u9762\u200b\u4f5c\u200b\u7b80\u5355\u200b\u7684\u200b\u6f14\u793a\u200b\u3002 \uff086\uff09DataLoader\u200b\u7684\u200b\u7b80\u5355\u200b\u4f7f\u7528\u200b<pre><code>    # \u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4ee3\u7801\u200b\uff081\uff09\u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\n    from torch.utils.data import DataLoader\n    train_loader = DataLoader(\n        dataset=train_set,   # \u200b\u52a0\u8f7d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\n        batch_size=128,      # \u200b\u6279\u91cf\u200b\u5927\u5c0f\u200b\n        shuffle=True,        # \u200b\u662f\u5426\u200b\u6253\u4e71\u200b\u6570\u636e\u200b\n        num_works=0,         # \u200b\u5de5\u4f5c\u200b\u8fdb\u7a0b\u200b\u6570\u200b\n        drop_last=True       # \u200b\u662f\u5426\u200b\u820d\u5f03\u200b\u6700\u540e\u200b\u6570\u91cf\u200b\u4e0d\u8db3\u200b\u6279\u91cf\u200b\u5927\u5c0f\u200b\u7684\u200b\u90a3\u4e9b\u200b\u6570\u636e\u200b\n    ) # \u200b\u66f4\u200b\u591a\u200b\u53c2\u6570\u200b\u53c2\u8003\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u6216\u200b\u6e90\u7801\u200b\n\n    for epoch in range(10):\n        for data in train_loader:\n            # some operations for data\n            # such as:\n            # imgs, labels = data\n            # ...\n</code></pre></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/","title":"\u795e\u7ecf\u7f51\u7edc\u200b\u642d\u5efa","text":"<p> \u200b\u7ea6\u200b 0 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/PyTorch/%E7%BD%91%E7%BB%9C%E8%AE%AD%E7%BB%83/","title":"\u7f51\u7edc\u200b\u8bad\u7ec3","text":"<p> \u200b\u7ea6\u200b 0 \u200b\u4e2a\u200b\u5b57\u200b </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/","title":"VecQ \u200b\u5411\u200b\u91cf\u5316\u200b\u53c2\u6570\u200b\u91cf\u5316\u200b\u65b9\u6cd5","text":"<p> \u200b\u7ea6\u200b 386 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p> <p>VecQ: Minimal Loss DNN Model Compression With Vectorized Weight Quantization. Cheng Gong, Yao Chen, Ye Lu, Tao Li, Cong Hao, Deming Chen, Fellow, IEEE</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_1","title":"\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u6982\u8ff0","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_2","title":"\u4e3a\u4ec0\u4e48\u200b\u5411\u200b\u91cf\u5316","text":"<p>\u200b\u4f20\u7edf\u200b\u7684\u200b\u91cf\u5316\u200b\u65b9\u6cd5\u200b\u57fa\u672c\u200b\u90fd\u200b\u91c7\u7528\u200bL2 loss\u200b\u6765\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b\u91cf\u5316\u200b\u6700\u4f18\u200b\u53c2\u6570\u200b\uff0c\u200b\u800c\u200b\u5176\u200b\u867d\u7136\u200b\u6548\u679c\u200b\u5c1a\u53ef\u200b\uff0c\u200b\u4f46\u200b\u4efb\u7136\u200b\u5b58\u5728\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\u3002  \u200b\u5982\u4e0a\u56fe\u200b\u56fe\u200b(b)\u200b\u6240\u793a\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5728\u200bk\u200b\u4f4d\u200b\u7ea6\u675f\u200b\u4e0b\u200b\u4f18\u5316\u200bL2 loss\u200b\u7684\u200b\u975e\u51f8\u200b\u7279\u6027\u200b\uff0c\u200b\u91c7\u7528\u200bL2 loss\u200b\u8fed\u4ee3\u200b\u65b9\u6cd5\u200b\u627e\u5230\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b\u7ea2\u70b9\u200b\uff0c\u200b\u867d\u7136\u200b\u662f\u200b\u6781\u503c\u200b\u70b9\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6700\u4f18\u200b\u89e3\u200b\uff1b\u200b\u800c\u200b\u91c7\u7528\u200b\u5411\u200b\u91cf\u5316\u200b\u635f\u5931\u200b\u6c42\u89e3\u200b\uff0c\u200b\u6070\u597d\u200b\u80fd\u200b\u89e3\u51b3\u200b\u4e0a\u8ff0\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_3","title":"\u4f55\u4e3a\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316","text":"<p>\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u65b9\u6cd5\u200b\u5c31\u662f\u200b\u5c06\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u67d0\u5c42\u200b\u6216\u200b\u67d0\u200b\u901a\u9053\u200b\u7684\u200b\u6743\u91cd\u200b\u53c2\u6570\u200b\u91cf\u5316\u200b\u540e\u200b\u7684\u200b\u635f\u5931\u200b\u62c6\u200b\u5206\u4e3a\u200b\u65b9\u5411\u200b\u635f\u5931\u200bJo\u200b\u4e0e\u6a21\u200b\u635f\u5931\u200bJm\uff0c\u200b\u6839\u636e\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u635f\u5931\u200b\uff08\u200b\u800c\u200b\u975e\u200bL2\u200b\u635f\u5931\u200b\uff09\u200b\u6765\u200b\u8c03\u6574\u200b\u91cf\u5316\u200b\u53c2\u6570\u200b\u8fdb\u800c\u200b\u5b9e\u73b0\u200b\u6a21\u578b\u200b\u91cf\u5316\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u5728\u200b\u8bba\u6587\u200b\u4e2d\u200b\uff0c\u200b\u4f5c\u8005\u200b\u7ed9\u51fa\u200b\u4e86\u200bJo\u200b\u4e0e\u200bJm\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5c06\u200b\u4e8c\u8005\u200b\u4e4b\u200b\u548c\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5411\u200b\u91cf\u5316\u200b\u635f\u5931\u200bJv\u3002  \u200b\u5728\u200b\u5206\u6790\u200b\u8868\u8fbe\u5f0f\u200b\u4e4b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0cJo\u200b\u4e0e\u200bJm\u200b\u7684\u200b\u4f18\u5316\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8fd9\u624d\u200b\u6709\u200b\u4e86\u200b\u540e\u7eed\u200b\u7684\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8F%82%E6%95%B0%E9%87%8F%E5%8C%96/VecQ/#_4","title":"\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u6d41\u7a0b","text":"<p>\u200b\u7406\u8bba\u200b\u5206\u6790\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f5c\u8005\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u65b9\u6848\u200b\uff0c\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\u3002  \u200b\u5176\u4e2d\u200b\uff0cSteering\u200b\u4ee3\u8868\u200b\u6700\u5c0f\u5316\u200b\u65b9\u5411\u200b\u635f\u5931\u200b\uff0cDriving\u200b\u4ee3\u8868\u200b\u6700\u5c0f\u5316\u200b\u6a21\u200b\u635f\u5931\u200b\u3002</p> <p>\u200b\u5173\u4e8e\u200bSteering\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6709\u200b\uff1a </p> <p>\u200b\u5173\u4e8e\u200bDriving\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6709\u200b: </p>"},{"location":"%E8%AE%BA%E6%96%87/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%AA%8C%E8%AF%81/Verification%20for%20eChronos%20OS/","title":"Controlled Owicki-Gries Concurrency: Reasoning about the Preemptible eChronos Embedded Operating System","text":"<p> \u200b\u7ea6\u200b 273 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 1 \u200b\u5206\u949f\u200b</p> <p>A non-interference VC asserts that some assertion in task X is preserved by some statement from task Y . Since most assertions will be guarded by AT=X, and most statements will by AT=Y , many of these VC\u2019s will have antecedent False.</p> <p>\u200b\u8fd9\u200b\u6bb5\u200b\u811a\u6ce8\u200b\u7684\u200b\u610f\u601d\u200b\u662f\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u975e\u200b\u5e72\u6270\u200b\u9a8c\u8bc1\u200b\u6761\u4ef6\u200b\uff08VC\uff09\u200b\u65ad\u8a00\u200b\uff0c\u200b\u4efb\u52a1\u200bX\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e9b\u200b\u65ad\u8a00\u200b\u88ab\u200b\u4efb\u52a1\u200bY\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e9b\u200b\u8bed\u53e5\u200b\u6240\u200b\u4fdd\u6301\u200b\u3002\u200b\u7531\u4e8e\u200b\u5927\u591a\u6570\u200b\u65ad\u8a00\u200b\u5c06\u200b\u7531\u200bAT=X\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u5927\u591a\u6570\u200b\u8bed\u53e5\u200b\u5c06\u200b\u7531\u200bAT=Y\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8bb8\u591a\u200b\u8fd9\u6837\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u6761\u4ef6\u200b\u7684\u200b\u524d\u63d0\u200b\u4e3a\u200b\u5047\u200b\u3002</p> <p>\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0c\u200b\u8fd9\u200b\u6bb5\u200b\u811a\u6ce8\u200b\u6307\u51fa\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u6761\u4ef6\u200b\u7684\u200b\u524d\u63d0\u6761\u4ef6\u200b\u901a\u5e38\u200b\u662f\u200b\u4efb\u52a1\u200bX\u200b\u7684\u200b\u67d0\u4e2a\u200b\u72b6\u6001\u53d8\u91cf\u200b\uff08AT=X\uff09\u200b\u548c\u200b\u4efb\u52a1\u200bY\u200b\u7684\u200b\u67d0\u4e2a\u200b\u72b6\u6001\u53d8\u91cf\u200b\uff08AT=Y\uff09\u200b\u4e0d\u200b\u76f8\u7b49\u200b\u3002\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u6761\u4ef6\u200b\u7684\u200b\u524d\u63d0\u6761\u4ef6\u200b\u4e3a\u200b\u5047\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6574\u4e2a\u200b\u9a8c\u8bc1\u200b\u6761\u4ef6\u200b\u5c06\u200b\u88ab\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\uff08\u200b\u56e0\u4e3a\u200b\u524d\u63d0\u200b\u4e3a\u200b\u5047\u5219\u200b\u6574\u4e2a\u200b\u903b\u8f91\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b\u771f\u200b\uff09\u3002\u200b\u8fd9\u200b\u51cf\u5c11\u200b\u4e86\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u68c0\u67e5\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u6761\u4ef6\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u4ece\u800c\u200b\u7b80\u5316\u200b\u4e86\u200b\u9a8c\u8bc1\u200b\u8fc7\u7a0b\u200b\u200b\u200b\u3002</p> <p>\u200b\u4f46\u200b\u6d89\u53ca\u200b\u5171\u4eab\u200b\u53d8\u91cf\u200b\u65f6\u200b\uff0c\u200b\u60c5\u51b5\u200b\u5c31\u200b\u4f1a\u200b\u6709\u6240\u4e0d\u540c\u200b\u4e86\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/","title":"CaReSL\uff1a\u200b\u5728\u200b\u9ad8\u9636\u200b\u5e76\u53d1\u200b\u903b\u8f91\u200b\u4e2d\u200b\u7edf\u4e00\u200b\u7cbe\u5316\u200b\u548c\u200bHoare\u200b\u98ce\u683c\u200b\u63a8\u7406","text":"<p> \u200b\u7ea6\u200b 7131 \u200b\u4e2a\u200b\u5b57\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 24 \u200b\u5206\u949f\u200b</p> <p>Unifying Refinement and Hoare-Style Reasoning in a Logic for Higher-Order Concurrency Aaron Turon\u3001Derek Dreyer\u3001Lars Birkedal</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_1","title":"\u6458\u8981","text":"<p>\u200b\u672c\u6587\u200b\u4ecb\u7ecd\u200b\u4e86\u200bCaReSL\uff0c\u200b\u4e00\u79cd\u200b\u65e8\u5728\u200b\u652f\u6301\u200b\u9ad8\u9636\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u6a21\u5757\u5316\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u903b\u8f91\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u6574\u5408\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u548c\u200b\u7c92\u5ea6\u200b\u62bd\u8c61\u200b\uff0c\u200b\u89e3\u51b3\u200b\u4e86\u200b\u73b0\u6709\u200b\u5e76\u53d1\u200b\u903b\u8f91\u200b\u7684\u200b\u5c40\u9650\u6027\u200b\uff0c\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u6784\u5efa\u200b\u53ef\u200b\u91cd\u7528\u200b\u7ec4\u4ef6\u200b\u548c\u200b\u7ba1\u7406\u200b\u7ec6\u7c92\u5ea6\u200b\u5e76\u53d1\u200b\u6570\u636e\u7ed3\u6784\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_2","title":"\u9ad8\u9636\u200b\u51fd\u6570","text":"<p>\u200b\u5728\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u662f\u200b\u90a3\u4e9b\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u5176\u4ed6\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u6216\u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u7ed3\u679c\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u7684\u200b\u7279\u70b9\u200b\u5305\u62ec\u200b\uff1a 1. \u200b\u63a5\u53d7\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff1a\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u63a5\u6536\u200b\u5176\u4ed6\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u8f93\u5165\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8c03\u7528\u200b\uff0c\u200b\u5176\u200b\u7ed3\u679c\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8fdb\u4e00\u6b65\u200b\u5904\u7406\u200b\u3002 2. \u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u7ed3\u679c\u200b\uff1a\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u7684\u200b\u8f93\u51fa\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u3002\u200b\u8fd9\u200b\u5141\u8bb8\u200b\u521b\u5efa\u200b\u53ef\u200b\u5b9a\u5236\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd4\u56de\u200b\u7684\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u7684\u200b\u4e0d\u540c\u200b\u800c\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u8868\u73b0\u200b\u3002 3. \u200b\u64cd\u4f5c\u200b\u51fd\u6570\u200b\uff1a\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u4f20\u9012\u200b\u7ed9\u200b\u5b83\u200b\u7684\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f8b\u5982\u200b\u7ec4\u5408\u200b\u3001\u200b\u53d8\u6362\u200b\u6216\u200b\u5e94\u7528\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_3","title":"\u7c92\u5ea6\u200b\u62bd\u8c61","text":"<p>\u200b\u7c92\u5ea6\u200b\u62bd\u8c61\u200b\uff08Granularity abstraction\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u5728\u200b\u5e76\u53d1\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u7528\u6765\u200b\u7b80\u5316\u200b\u5e76\u53d1\u200b\u6570\u636e\u7ed3\u6784\u200b\u8bbe\u8ba1\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u6280\u672f\u200b\uff0c\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u9690\u85cf\u200b\u5e76\u53d1\u200b\u6570\u636e\u7ed3\u6784\u200b\u7684\u200b\u5185\u90e8\u200b\u590d\u6742\u6027\u200b\uff0c\u200b\u53ea\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b\u7b80\u5316\u200b\u7684\u200b\u3001\u200b\u9ad8\u5c42\u6b21\u200b\u7684\u200b\u63a5\u53e3\u200b\u7ed9\u200b\u5ba2\u6237\u7aef\u200b\u4f7f\u7528\u200b\u3002\u200b\u8fd9\u6837\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u5f00\u53d1\u8005\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u200b\u5173\u5fc3\u200b\u5e95\u5c42\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5b89\u5168\u200b\u5730\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002 1. \u200b\u9690\u85cf\u200b\u5185\u90e8\u200b\u72b6\u6001\u200b\uff1a\u200b\u5e76\u53d1\u200b\u6570\u636e\u7ed3\u6784\u200b\uff08\u200b\u5982\u6808\u200b\u3001\u200b\u961f\u5217\u200b\uff09\u200b\u7684\u200b\u5185\u90e8\u200b\u72b6\u6001\u200b\uff08\u200b\u5982\u200b\uff0c\u200b\u7528\u4e8e\u200b\u540c\u6b65\u200b\u7684\u200b\u9501\u200b\u3001\u200b\u6761\u4ef6\u200b\u53d8\u91cf\u200b\uff09\u200b\u5bf9\u200b\u5ba2\u6237\u7aef\u200b\u662f\u200b\u900f\u660e\u200b\u7684\u200b\u3002\u200b\u5ba2\u6237\u7aef\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b\u597d\u200b\u7684\u200b\u63a5\u53e3\u200b\uff08\u200b\u5982\u200bpush\u3001pop\u200b\u64cd\u4f5c\u200b\uff09\u200b\u4e0e\u200b\u6570\u636e\u7ed3\u6784\u200b\u4ea4\u4e92\u200b\u3002 2. \u200b\u7b80\u5316\u200b\u5ba2\u6237\u7aef\u200b\u63a8\u7406\u200b\uff1a\u200b\u7531\u4e8e\u200b\u5185\u90e8\u200b\u72b6\u6001\u200b\u548c\u200b\u540c\u6b65\u200b\u673a\u5236\u200b\u88ab\u200b\u9690\u85cf\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u5f00\u53d1\u8005\u200b\u5728\u200b\u7f16\u5199\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u4ee3\u7801\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u5e76\u53d1\u200b\u63a7\u5236\u200b\u7684\u200b\u590d\u6742\u6027\u200b\u3002\u200b\u4ed6\u4eec\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u6570\u636e\u7ed3\u6784\u200b\u7684\u200b\u64cd\u4f5c\u200b\u662f\u200b\u539f\u5b50\u200b\u7684\u200b\uff0c\u200b\u5373\u4f7f\u200b\u5b9e\u9645\u4e0a\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u53ef\u80fd\u200b\u6d89\u53ca\u200b\u591a\u4e2a\u200b\u6b65\u9aa4\u200b\u548c\u200b\u540c\u6b65\u200b\u3002 3. \u200b\u4e0a\u4e0b\u6587\u200b\u7cbe\u5316\u200b\uff1a\u200b\u7c92\u5ea6\u200b\u62bd\u8c61\u200b\u5141\u8bb8\u200b\u5f00\u53d1\u8005\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7c92\u5ea6\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u7c97\u7c92\u5ea6\u200b\u7684\u200b\u53c2\u8003\u200b\u5b9e\u73b0\u200b\uff08\u200b\u53ef\u80fd\u200b\u4f7f\u7528\u200b\u5168\u5c40\u200b\u9501\u6765\u200b\u7b80\u5316\u200b\u5e76\u53d1\u200b\u63a7\u5236\u200b\uff09\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u4e0a\u4e0b\u6587\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\u4e00\u4e2a\u200b\u7ec6\u7c92\u5ea6\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff08\u200b\u53ef\u80fd\u200b\u4f7f\u7528\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u540c\u6b65\u200b\u673a\u5236\u200b\uff0c\u200b\u5982\u200b\u539f\u5b50\u200b\u64cd\u4f5c\u200b\uff09\u200b\u5728\u200b\u884c\u4e3a\u200b\u4e0a\u200b\u4e0e\u200b\u7c97\u7c92\u5ea6\u200b\u5b9e\u73b0\u200b\u4e00\u81f4\u200b\u3002 4. \u200b\u6a21\u5757\u5316\u200b\u9a8c\u8bc1\u200b\uff1a\u200b\u901a\u8fc7\u200b\u7c92\u5ea6\u200b\u62bd\u8c61\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u5de5\u4f5c\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5206\u89e3\u200b\u4e3a\u200b\u4e24\u200b\u90e8\u5206\u200b\uff1a\u200b\u9996\u5148\u200b\u8bc1\u660e\u200b\u7ec6\u7c92\u5ea6\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5bf9\u200b\u7c97\u7c92\u5ea6\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u7cbe\u5316\u200b\uff1b\u200b\u7136\u540e\u200b\u4f7f\u7528\u200bHoare\u200b\u98ce\u683c\u200b\u63a8\u7406\u200b\u6765\u200b\u9a8c\u8bc1\u200b\u7c97\u7c92\u5ea6\u200b\u5b9e\u73b0\u200b\u6ee1\u8db3\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u89c4\u8303\u200b\u3002\u200b\u8fd9\u79cd\u200b\u5206\u89e3\u200b\u4f7f\u5f97\u200b\u9a8c\u8bc1\u200b\u8fc7\u7a0b\u200b\u66f4\u52a0\u200b\u6a21\u5757\u5316\u200b\uff0c\u200b\u4fbf\u4e8e\u7ba1\u7406\u200b\u548c\u200b\u590d\u7528\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_4","title":"\u5e73\u9762\u200b\u7ec4\u5408","text":"<p>Flat combining provides a generic way to turn a sequential ADT into a relatively effificient concurrent one, by having certain threads perform\u2014in one fell swoop\u2014the combined actions requested by a whole bunch of other threads.</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_5","title":"\u6846\u67b6","text":"<p>CaReSL\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u65e8\u5728\u200b\u652f\u6301\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u548c\u200b\u7c92\u5ea6\u200b\u62bd\u8c61\u200b\uff0c\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u521b\u5efa\u200b\u53ef\u200b\u91cd\u7528\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u7ec4\u4ef6\u200b\u548c\u200b\u9690\u85cf\u200b\u5e76\u53d1\u200b\u6570\u636e\u7ed3\u6784\u200b\u7684\u200b\u590d\u6742\u6027\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u901a\u8fc7\u200b\u4e00\u7cfb\u5217\u200b\u793a\u4f8b\u200b\uff0c\u200b\u8bba\u6587\u200b\u5c55\u793a\u200b\u4e86\u200bCaReSL\u200b\u7684\u200b\u7279\u70b9\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u5b83\u200b\u6765\u200b\u8bc1\u660e\u200bHendler\u200b\u7b49\u200b\u4eba\u200b\u7684\u200b\u201c\u200b\u5e73\u9762\u200b\u7ec4\u5408\u200b\u201d\u200b\u7b97\u6cd5\u200b\u7684\u200b\u90e8\u5206\u200b\u6b63\u786e\u6027\u200b\u3002  1. Treiber\u200b\u6808\u200b\u7684\u200b\u7cbe\u5316\u200b\uff1a\u200b\u9996\u5148\u200b\uff0c\u200b\u4f5c\u8005\u200b\u8bc1\u660e\u200b\u4e86\u200bTreiber\u200b\u6808\u200b\uff08\u200b\u4e00\u79cd\u200b\u7ec6\u7c92\u5ea6\u200b\u7684\u200b\u5e76\u53d1\u200b\u6808\u200b\u5b9e\u73b0\u200b\uff09\u200b\u7cbe\u5316\u200b\u4e86\u200b\u7c97\u7c92\u5ea6\u200b\uff08coarse-grained, CG\uff09\u200b\u7684\u200b\u6808\u200b\u53c2\u8003\u200b\u5b9e\u73b0\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200bTreiber\u200b\u6808\u200b\u5728\u200b\u884c\u4e3a\u200b\u4e0a\u200b\u4e0e\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u7b80\u5355\u200b\u7684\u200b\u6808\u200b\u5b9e\u73b0\u200b\u7b49\u4ef7\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u5728\u200b\u6027\u80fd\u200b\u6216\u200b\u8d44\u6e90\u200b\u4f7f\u7528\u200b\u4e0a\u200b\u6709\u200b\u6539\u8fdb\u200b\u3002 2. Hoare\u200b\u98ce\u683c\u200b\u9a8c\u8bc1\u200b\uff1a\u200b\u63a5\u7740\u200b\uff0c\u200b\u4f7f\u7528\u200bHoare\u200b\u98ce\u683c\u200b\u63a8\u7406\u200b\u6765\u200b\u8bc1\u660e\u200b\u8fd9\u4e2a\u200b\u53c2\u8003\u200b\u5b9e\u73b0\u200b\u6ee1\u8db3\u200b\u201c\u200b\u9010\u9879\u200b\u201d\uff08per-item\uff09\u200b\u89c4\u8303\u200b\u3002\u200b\u8fd9\u79cd\u200b\u89c4\u8303\u200b\u53ef\u80fd\u200b\u6d89\u53ca\u200b\u5230\u200b\u6808\u200b\u64cd\u4f5c\u200b\uff08\u200b\u5982\u200bpush\u200b\u548c\u200bpop\uff09\u200b\u7684\u200b\u6b63\u786e\u6027\u200b\uff0c\u200b\u786e\u4fdd\u200b\u6bcf\u6b21\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u6ee1\u8db3\u200b\u7279\u5b9a\u200b\u7684\u200b\u524d\u7f6e\u6761\u4ef6\u200b\u548c\u200b\u540e\u7f6e\u200b\u6761\u4ef6\u200b\u3002 3. \u200b\u5e73\u9762\u200b\u7ec4\u5408\u200b\u7b97\u6cd5\u200b\u7684\u200b\u7cbe\u5316\u200b\uff1a\u200b\u6700\u540e\u200b\uff0c\u200b\u4f5c\u8005\u200b\u4f9d\u8d56\u4e8e\u200b\u9010\u9879\u200b\u89c4\u8303\u200b\u6765\u200b\u8bc1\u660e\u200b\u5e73\u9762\u200b\u7ec4\u5408\u200b\u7b97\u6cd5\u200b\uff08flat combining algorithm\uff09\u200b\u7cbe\u5316\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u9ad8\u7ea7\u200b\u522b\u7684\u200b\u62bd\u8c61\u200b\u3002\u200b\u5e73\u9762\u200b\u7ec4\u5408\u200b\u7b97\u6cd5\u200b\u662f\u200b\u4e00\u79cd\u200b\u5e76\u53d1\u200b\u6784\u9020\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u591a\u4e2a\u200b\u7ebf\u7a0b\u200b\u7684\u200b\u8bf7\u6c42\u200b\u88ab\u200b\u4e00\u4e2a\u200b\u7ebf\u7a0b\u200b\u7edf\u4e00\u200b\u5904\u7406\u200b\uff0c\u200b\u4ee5\u200b\u63d0\u9ad8\u6548\u7387\u200b\u3002 4. \u200b\u9ad8\u9636\u200b\u4ee3\u7801\u200b\u548c\u200b\u89c4\u8303\u200b\uff1a\u200b\u6848\u4f8b\u200b\u7814\u7a76\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u7ec4\u4ef6\u200b\u90fd\u200b\u6d89\u53ca\u200b\u5230\u200b\u9ad8\u9636\u200b\u4ee3\u7801\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u9ad8\u9636\u200b\u89c4\u8303\u200b\u6765\u200b\u63cf\u8ff0\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u8fd9\u4e9b\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002\u200b\u9ad8\u9636\u200b\u89c4\u8303\u200b\u80fd\u591f\u200b\u5904\u7406\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u6216\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u5e76\u53d1\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u590d\u6742\u200b\u4ea4\u4e92\u200b\u5c24\u4e3a\u91cd\u8981\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_6","title":"\u903b\u8f91\u200b\u7ed3\u6784","text":"<p>CaReSL\u200b\u57fa\u4e8e\u200bKripke\u200b\u903b\u8f91\u5173\u7cfb\u200b\u548c\u200b\u5e76\u53d1\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u7684\u200b\u6982\u5ff5\u200b\u3002\u200b\u5b83\u200b\u4e0d\u200b\u5c06\u200b\u7cbe\u5316\u200b\u4f5c\u4e3a\u200b\u57fa\u672c\u6982\u5ff5\u200b\uff0c\u200b\u800c\u662f\u200b\u4ece\u200bHoare\u200b\u98ce\u683c\u200b\u7684\u200b\u63a8\u7406\u200b\u4e2d\u200b\u6d3e\u751f\u200b\u7cbe\u5316\u200b\u3002CaReSL\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u6001\u903b\u8f91\u200b\uff0c\u200b\u5177\u6709\u200bKripke\u200b\u903b\u8f91\u5173\u7cfb\u200b\u7684\u200b\u53ef\u80fd\u200b\u4e16\u754c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u8868\u8fbe\u200b\u5e76\u53d1\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u7684\u200b\u5171\u4eab\u200b\u72b6\u6001\u200b\u534f\u8bae\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_7","title":"\u8bed\u4e49","text":"<p>CaReSL\u200b\u7684\u200b\u8bed\u4e49\u200b\u76f4\u63a5\u200b\u4ece\u200bTuron\u200b\u7b49\u200b\u4eba\u200b\u7684\u200b\u6a21\u578b\u200b\u4e2d\u200b\u6d3e\u751f\u200b\uff0c\u200b\u8be5\u200b\u6a21\u578b\u200b\u662f\u200b\u7b2c\u4e00\u4e2a\u200b\u5728\u200b\u7c7b\u4f3c\u200bML\u200b\u7684\u200b\u73af\u5883\u200b\u4e2d\u4e3a\u200b\u7ec6\u7c92\u5ea6\u200b\u6570\u636e\u7ed3\u6784\u200b\u63d0\u4f9b\u200b\u5f62\u5f0f\u5316\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_8","title":"\u7f16\u7a0b\u200b\u6a21\u578b","text":"<p> CaReSL\u200b\u7684\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u5305\u62ec\u200b\u591a\u6001\u200blambda\u200b\u6f14\u7b97\u200b\u3001\u200b\u539f\u5b50\u200b\u6bd4\u8f83\u200b\u548c\u200b\u4ea4\u6362\u200b\uff08CAS\uff09\u200b\u4ee5\u53ca\u200b\u7ebf\u7a0b\u200b\u5c40\u90e8\u200b\u5f15\u7528\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u7279\u6027\u200b\u4f7f\u5f97\u200bCaReSL\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u7684\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#caresl","title":"CaReSL\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91","text":"<p>CaReSL\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u987a\u5e8f\u200b\uff08\u200b\u4f46\u200b\u9ad8\u9636\u200b\uff09\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u5206\u79bb\u200b\u903b\u8f91\u63a8\u7406\u200b\u3002\u200b\u901a\u8fc7\u200b\u5f15\u5165\u200b\u5e76\u53d1\u200b\u6027\u200b\uff0cCaReSL\u200b\u6269\u5c55\u200b\u4e86\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\uff0c\u200b\u5e76\u200b\u5f15\u5165\u200b\u4e86\u200b\u201c\u200b\u89c4\u8303\u200b\u8d44\u6e90\u200b\u201d\u200b\u6765\u200b\u5904\u7406\u200b\u7cbe\u5316\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#31-caresl","title":"3.1 CaReSL\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\uff1a\u200b\u987a\u5e8f\u200b\u9ad8\u9636\u200b\u7a0b\u5e8f","text":"<p>CaReSL\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5bf9\u200b\u987a\u5e8f\u200b\uff08\u200b\u4f46\u200b\u9ad8\u9636\u200b\uff09\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u5206\u79bb\u200b\u903b\u8f91\u63a8\u7406\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u903b\u8f91\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u524d\u63d0\u200b\u5047\u8bbe\u200b\u7a0b\u5e8f\u200b\u662f\u200b\u987a\u5e8f\u200b\u6267\u884c\u200b\u7684\u200b\uff0c\u200b\u4e0d\u200b\u8003\u8651\u200b\u5e76\u53d1\u200b\u3002\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\u7684\u200b\u5173\u952e\u200b\u7279\u70b9\u200b\u5305\u62ec\u200b\uff1a - \u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\uff1aCaReSL\u200b\u4f7f\u7528\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u6765\u200b\u8868\u8fbe\u200b\u5173\u4e8e\u200b\u5806\u200b\uff08heap\uff09\u200b\u7684\u200b\u65ad\u8a00\u200b\uff0c\u200b\u5141\u8bb8\u200b\u7a0b\u5e8f\u5458\u200b\u58f0\u660e\u200b\u67d0\u4e9b\u200b\u8d44\u6e90\u200b\u662f\u200b\u72ec\u7acb\u200b\u7684\u200b\uff0c\u200b\u4ece\u800c\u200b\u7b80\u5316\u200b\u4e86\u200b\u5bf9\u200b\u7a0b\u5e8f\u200b\u72b6\u6001\u200b\u7684\u200b\u63a8\u7406\u200b\u3002 - \u200b\u6a21\u6001\u903b\u8f91\u200b\uff1aCaReSL\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u6001\u903b\u8f91\u200b\uff0c\u200b\u5b83\u200b\u4f7f\u7528\u200b\u6a21\u6001\u200b\u7b97\u5b50\u200b\uff08\u200b\u5982\u200b \\(\\Box\\) \uff09\u200b\u6765\u200b\u8868\u8fbe\u200b\u5fc5\u7136\u6027\u200b\uff0c\u200b\u5141\u8bb8\u200b\u903b\u8f91\u200b\u8868\u8fbe\u5f0f\u200b\u5728\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u8d44\u6e90\u914d\u7f6e\u200b\u4e0b\u200b\u90fd\u200b\u4e3a\u200b\u771f\u200b\u3002 - \u200b\u547d\u9898\u200b\u548c\u200b\u8c13\u8bcd\u200b\uff1a\u200b\u903b\u8f91\u200b\u533a\u5206\u200b\u4e86\u200b\u547d\u9898\u200b\uff08propositions\uff09\u200b\u548c\u200b\u8c13\u8bcd\u200b\uff08predicates\uff09\u3002\u200b\u547d\u9898\u200b\u662f\u200b\u5173\u4e8e\u200b\u7a0b\u5e8f\u200b\u884c\u4e3a\u200b\u7684\u200b\u9648\u8ff0\u200b\uff0c\u200b\u800c\u200b\u8c13\u8bcd\u200b\u662f\u200b\u53c2\u6570\u200b\u5316\u200b\u7684\u200b\u547d\u9898\u200b\uff0c\u200b\u5b83\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u8868\u8fbe\u200b\u5173\u4e8e\u200b\u503c\u200b\u6216\u200b\u8d44\u6e90\u200b\u7684\u200b\u5c5e\u6027\u200b\u3002 - \u200b\u9012\u5f52\u200b\u548c\u200b\u91cf\u5316\u200b\uff1aCaReSL\u200b\u652f\u6301\u200b\u9012\u5f52\u200b\u7c7b\u578b\u200b\u548c\u200b\u91cf\u5316\u200b\u3002 \u200b\u8bc1\u660e\u200bforeach\u200b\u6b63\u786e\u6027\u200b</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#foreach","title":"foreach","text":"\\[ \\begin{align*} &amp; \\textbf{foreach} : \\forall \\alpha. (\\alpha \\rightarrow \\textbf{1}) \\rightarrow list(\\alpha) \\rightarrow \\textbf{1} \\\\ &amp; list(\\alpha) \\triangleq \\mu \\beta .\\textbf{1} + (\\alpha \\times \\beta) \\\\ &amp; \\begin{align*} \\textbf{foreach} \\triangleq \\Lambda.  \\lambda f. \\ \\textbf{rec} \\ loop(l). \\quad \\textbf{case} \\quad l \\quad &amp; \\textbf{of} &amp;&amp; none &amp;&amp;&amp;&amp;\\Rightarrow   () \\\\ &amp; \\mid &amp;&amp; some(x,n) &amp;&amp;&amp;&amp;\\Rightarrow  f(x); loop(n) \\end{align*} \\end{align*} \\] <p>Note</p> <p>foreach\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5178\u578b\u200b\u7684\u200b\u9ad8\u9636\u200b\u72b6\u6001\u200b\u7ec4\u5408\u200b\u5b50\u200b\uff0c\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\\((\\alpha \\rightarrow \\textbf{1})\\)\u200b\u548c\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\\(list(\\alpha)\\)\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u5e94\u7528\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u51fd\u6570\u200b\u5230\u200b\u5217\u8868\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u4e0a\u200b\u3002</p> <p>foreach \u200b\u5b9a\u4e49\u200b\u4f7f\u7528\u200b\u4e86\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff08case\uff09\u200b\u6765\u200b\u5904\u7406\u200b\u5217\u8868\u200b\u3002\u200b\u5f53\u200b\u5217\u8868\u200b l \u200b\u4e3a\u7a7a\u200b\uff08none\uff09\u200b\u65f6\u200b\uff0c\u200b\u51fd\u6570\u200b\u4e0d\u200b\u6267\u884c\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u200b\uff08()\uff09\u3002\u200b\u5f53\u200b\u5217\u8868\u200b\u4e0d\u4e3a\u200b\u7a7a\u200b\uff08some(x, n)\uff09\uff0c\u200b\u5373\u200b\u5217\u8868\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u5934\u90e8\u200b\u5143\u7d20\u200b x \u200b\u548c\u200b\u5269\u4f59\u200b\u90e8\u5206\u200b n \u200b\u65f6\u200b\uff0cforeach\u200b\u9996\u5148\u200b\u5e94\u7528\u200b\u51fd\u6570\u200b f \u200b\u5230\u200b\u5934\u90e8\u200b\u5143\u7d20\u200b x \u200b\u4e0a\u200b\uff0c\u200b\u7136\u540e\u200b\u9012\u5f52\u200b\u5730\u200b\u5bf9\u200b\u5269\u4f59\u200b\u7684\u200b\u5217\u8868\u200b n \u200b\u8c03\u7528\u200b\u81ea\u8eab\u200b\u3002</p> <p>\\(\\Lambda.e\\) \u200b\u4ee3\u8868\u200b\u7c7b\u578b\u200b\u62bd\u8c61\u200b\uff1b</p> <p>\\(\\textbf{rec} \\ loop(l). e\\) \u200b\u4ee3\u8868\u200b\u9012\u5f52\u51fd\u6570\u200b\uff08\u200b\u5177\u4f53\u200b\u89c1\u200b\u4e0b\u56fe\u200b\uff09\u3002</p> <p>$ \\textbf{inj}_{i}  e $\u200b\u4ee3\u8868\u200b Sum Value</p> <p>\u200b\u6709\u200b\\(none \\triangleq \\textbf{inj}_{1} \\ ()\\)\uff0c \\(some(e) \\triangleq \\textbf{inj}_{2} \\ e\\)</p> <p>\\(list(\\alpha)\\)\u200b\u7684\u200b\u5b9a\u4e49\u200b\u8fd8\u200b\u4e0d\u200b\u592a\u200b\u61c2\u200b\u3002\u200b\u5b83\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff08\u200b\u5355\u5143\u200b\u7c7b\u578b\u200b\u548c\u200b\uff08\u200b\u4e24\u4e2a\u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b\u7684\u200b\u79ef\u200b\u7c7b\u578b\u200b\u7684\u200b\uff09\u200b\u7684\u200b\u548c\u200b\u7c7b\u578b\u200b\uff09\u200b\u7684\u200b\u9012\u5f52\u200b\u7c7b\u578b\u200b\u3002</p> <p></p> <p>\u200b\u51fd\u6570\u200b\\(f(x)\\)\u200b\u9700\u8981\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\\(\\(\\forall x. \\ \\{p(x) * r\\} \\ f(x) \\ \\{q(x) * r\\}\\)\\) \u200b\u5176\u4e2d\u200b\\(p(x)\\)\u200b\u548c\u200b\\(q(x)\\)\u200b\u4e3a\u200b\u524d\u7f6e\u200b\u8c13\u8bcd\u200b\u548c\u200b\u540e\u7f6e\u200b\u8c13\u8bcd\u200b\uff0c\\(r\\)\u200b\u4e3a\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u547d\u9898\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u51fd\u6570\u200b\\(f(x)\\)\u200b\u5c06\u200b\\(p(x)\\)\u200b\u8fc1\u79fb\u200b\u5230\u200b\\(q(x)\\)\uff0c\u200b\u5e76\u200b\u540c\u65f6\u200b\u6709\u200b\u4e0d\u200b\u53d8\u91cf\u200b\\(r\\)\u200b\u6210\u7acb\u200b\u3002\u200b\u800c\u200bforeach\u200b\u5c06\u200b\u6ee1\u8db3\u200b\u8fd9\u4e2a\u200b\u7279\u5f81\u200b\u7684\u200b\u51fd\u6570\u200b\u7684\u200b\u884c\u4e3a\u200b\u4e0a\u5347\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b \\(l\\) \u200b\u4e2d\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u5047\u8bbe\u200b\\(p(x)\\)\u200b\u5728\u200b\u6574\u4e2a\u200b\u5217\u8868\u200b\u90fd\u200b\u6210\u7acb\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u9012\u5f52\u200b\u5b9a\u4e49\u200b\uff1a\\(\\(\\text{Map}_{p}(l) \\triangleq \\ l = none \\vee (\\exists x,n. \\ l = some(x,n) * p(x) *\\text{Map}_{p}(n))\\)\\) \u200b\u5bf9\u200b\\(q(x)\\)\u200b\u540c\u7406\u200b\u3002</p> <p>\u200b\u5f15\u51fa\u200bforeach\u200b\u89c4\u8303\u200b\uff1a $$ \\forall p, q, r.  \\forall f.  (\\forall x. { p(x) * r }  f(x)  {q(x) * r }) \\ \\Rightarrow \\forall l.  {\\text{Map}{p}(l) * r}  \\textbf{foreach}  _  f  l  { \\text{Map}(l) * r }$$</p> <p>Question</p> <p>foreach \u200b\u540e\u9762\u200b\u7684\u200b _ \u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#syntax","title":"Syntax","text":"<p> \u200b\u4e0a\u200b\u56fe\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u826f\u5e8f\u200b\u7684\u200b\u9879\u200b\u3001\u200b\u547d\u9898\u200b\u548c\u200b\u8c13\u8bcd\u200b\u3002</p> <p>Note</p> <p>\\(M\\)\uff0c\\(N\\)\u200b\u662f\u200b\u9879\u200b\uff0c\\(\\Sigma\\)\u200b\u662f\u200b\u7c7b\u578b\u200b\uff0c\u200b\u9879\u6709\u200b\u591a\u79cd\u7c7b\u578b\u200b\uff08sorts\uff09\uff0c\u200b\u8fd9\u4e9b\u200b\u7c7b\u578b\u200b\u5305\u62ec\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\uff08values\uff09\u3001\u200b\u8868\u8fbe\u5f0f\u200b\uff08expressions\uff09\uff0c\u200b\u4ee5\u53ca\u200b\u7ebf\u7a0b\u200b\u5c40\u90e8\u200b\u5b58\u50a8\u200b\uff08thread-local storage\uff09\u3002</p> <p>\\(\\mathcal{X}\\)\u200b\u662f\u200b\u4e0a\u4e0b\u6587\u200b\u4fe1\u606f\u200b\uff0c\\(\\mathcal{X} \\vdash M : \\Sigma\\) \u200b\u662f\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u65ad\u8a00\u200b\uff0c\u200b\u5b83\u200b\u8868\u660e\u200b\u5728\u200b\u53d8\u91cf\u200b\u4e0a\u4e0b\u6587\u200b \\(\\mathcal{X}\\) \u200b\u4e0b\u200b\uff0c\u200b\u9879\u200b \\(M\\) \u200b\u6709\u200b\u7c7b\u578b\u200b \\(\\Sigma\\)\u3002</p> <p>\\(P\\)\u3001\\(Q\\) \u200b\u548c\u200b \\(R\\) \u200b\u90fd\u200b\u662f\u200b\u547d\u9898\u200b\u3002</p> <p>\\(\\mathbb{P}(\\Sigma)\\) \u200b\u542b\u4e49\u200b\uff1f</p> <p>\u200b\u8c13\u8bcd\u200b \\(\\varphi\\) \u200b\u5c31\u662f\u200b\u88ab\u200b\u4e00\u4e2a\u200b\u9879\u200b\u53c2\u6570\u200b\u5316\u200b\u7684\u200b\u547d\u9898\u200b\uff1a</p> <p>\\((X \\in \\Sigma).P\\) \u200b\u610f\u5473\u7740\u200b\u547d\u9898\u200b \\(P\\) \u200b\u4e0e\u200b\u7c7b\u578b\u200b\u4e3a\u200b \\(\\Sigma\\) \u200b\u7684\u200b\u672a\u77e5\u200b\u9879\u200b \\(X\\) \u200b\u7ed1\u5b9a\u200b\uff08bind\uff09\u3002\uff08\\(X\\) \u200b\u662f\u200b\u9879\u200b\u7684\u200b\u53d8\u5143\u200b\uff09</p> <p>\\(\\mathbb{P}(\\Sigma)\\) \u200b\u610f\u5473\u7740\u200b\u8c13\u8bcd\u200b\u7ed1\u5b9a\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u9879\u200b \\(X\\) \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b \\(\\Sigma\\)\uff0c\u200b\u8fdb\u800c\u200b\u89e3\u91ca\u200b\u4e3a\u200b\u8c13\u8bcd\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u4ee3\u5165\u200b\u64cd\u4f5c\u200b \\(\\varphi(M)\\) \uff08\u200b\u539f\u6587\u200b\u8bf4\u200b\u8fd9\u4e2a\u200b\u4e5f\u200b\u5199\u4f5c\u200b \\(M \\in \\varphi\\)\uff09\u200b\u5c31\u662f\u200b\u5c06\u200b\u4ee3\u5165\u200b\u53c2\u6570\u200b \\(X\\)\uff0c\u200b\u4f7f\u200b\u4e4b\u200b\u53d8\u56de\u200b\u547d\u9898\u200b\u3002</p> <p>\u200b\u63a8\u65ad\u200b \\(\\mathcal{X} \\vdash \\varphi : \\mathbb{P}(\\Sigma)\\) \u200b\u8bf4\u660e\u200b\u7c7b\u578b\u200b\u4e3a\u200b \\(\\Sigma\\) \u200b\u7684\u200b\u8c13\u8bcd\u200b \\(\\varphi\\) \u200b\u662f\u200b\u826f\u5e8f\u200b\u7684\u200b\u3002</p> <p>But to avoid cluttering our rules and proofs with sort annotationswe use variables \\(x, y, z\\) for sort Val and \\(i, j, k, \\ell\\) for sort Nat. We abuse notation, writing e.g., \\(v, e\\) or \\(L\\) to stand for a term of sort Val, Exp or LclStorage, respectively.</p> <p>\u200b\u5728\u200bCaReSL\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\u4e2d\u200b\uff0c\u200b\u5806\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\u8d44\u6e90\u200b\u3002 In core CaReSL, however, the only resource is the heap.</p> <p>Note</p> <p>\u200b\u6307\u5411\u200b\u65ad\u8a00\u200b\uff1a\\(\\ell \\hookrightarrow_{I} v\\) \u200b\u4ee3\u8868\u200b\u5806\u200b\u7684\u200b\u67d0\u200b\u5730\u5740\u200b \\(\\ell\\) \u200b\u6307\u5411\u200b\uff08\u200b\u5177\u6709\u200b\uff09\u200b\u503c\u200b \\(v\\)\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_9","title":"\u5206\u79bb\u200b\u903b\u8f91","text":"<p>\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\uff08Separation Logic\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u63cf\u8ff0\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u4e2d\u200b\u5171\u4eab\u200b\u72b6\u6001\u200b\u7684\u200b\u903b\u8f91\u7cfb\u7edf\u200b\uff0c\u200b\u7531\u200b\u8ba1\u7b97\u673a\u200b\u79d1\u5b66\u5bb6\u200bPeter O'Hearn\u200b\u548c\u200b\u4ed6\u200b\u7684\u200b\u540c\u4e8b\u200b\u4eec\u200b\u5728\u200b2004\u200b\u5e74\u200b\u5de6\u53f3\u200b\u63d0\u51fa\u200b\u7684\u200b\uff0c\u200b\u65e8\u5728\u200b\u89e3\u51b3\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u9a8c\u8bc1\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u95ee\u9898\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5904\u7406\u200b\u5171\u4eab\u8d44\u6e90\u200b\u548c\u200b\u5e76\u53d1\u200b\u64cd\u4f5c\u200b\u65f6\u200b\u7684\u200b\u590d\u6742\u6027\u200b\u3002</p> <p>\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u7684\u200b\u6838\u5fc3\u200b\u6982\u5ff5\u200b\u662f\u200b\u201c\u200b\u5206\u79bb\u200b\u201d\uff08separation\uff09\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u7a0b\u5e8f\u5458\u200b\u58f0\u660e\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u4e0d\u540c\u200b\u90e8\u5206\u200b\u7684\u200b\u5185\u5b58\u200b\u662f\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\uff0c\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u7ebf\u7a0b\u200b\u5728\u200b\u64cd\u4f5c\u200b\u4e00\u90e8\u5206\u200b\u5185\u5b58\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u5176\u4ed6\u200b\u7ebf\u7a0b\u200b\u4e0d\u4f1a\u200b\u5e72\u6270\u200b\u8fd9\u90e8\u5206\u200b\u5185\u5b58\u200b\uff0c\u200b\u4ece\u800c\u200b\u7b80\u5316\u200b\u4e86\u200b\u5bf9\u200b\u5e76\u200b\u53d1\u884c\u200b\u4e3a\u200b\u7684\u200b\u63a8\u7406\u200b\u3002</p> <p>\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u7684\u200b\u4e3b\u8981\u200b\u7279\u70b9\u200b\u5305\u62ec\u200b\uff1a 1. \u200b\u5206\u79bb\u200b\u65ad\u8a00\u200b\uff1a\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u4f7f\u7528\u200b\u7279\u6b8a\u200b\u7684\u200b\u65ad\u8a00\u200b \\(P \u2217 Q\\) \u200b\u6765\u200b\u8868\u793a\u200b\u4e24\u4e2a\u200b\u547d\u9898\u200b \\(P\\) \u200b\u548c\u200b \\(Q\\) \u200b\u63cf\u8ff0\u200b\u7684\u200b\u5185\u5b58\u200b\u533a\u57df\u200b\u662f\u200b\u5206\u79bb\u200b\u7684\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65ad\u8a00\u200b\u5141\u8bb8\u200b\u7a0b\u5e8f\u5458\u200b\u660e\u786e\u200b\u5730\u200b\u8868\u8fbe\u200b\u51fa\u200b\u5728\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u4e2d\u200b\u54ea\u4e9b\u200b\u90e8\u5206\u200b\u662f\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u3002 2. \u200b\u5c40\u90e8\u200b\u63a8\u7406\u200b\uff1a\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u652f\u6301\u200b\u5c40\u90e8\u200b\u63a8\u7406\u200b\uff0c\u200b\u5373\u200b\u7a0b\u5e8f\u5458\u200b\u53ef\u4ee5\u200b\u53ea\u200b\u5173\u6ce8\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u4e00\u5c0f\u90e8\u5206\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7ebf\u7a0b\u200b\u6216\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\uff09\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6574\u4e2a\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u72b6\u6001\u200b\u3002 3. \u200b\u539f\u5b50\u200b\u64cd\u4f5c\u200b\uff1a\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u901a\u5e38\u200b\u4e0e\u200b\u539f\u5b50\u200b\u64cd\u4f5c\u200b\uff08\u200b\u5982\u200b\u539f\u5b50\u200b\u6bd4\u8f83\u200b\u548c\u200b\u4ea4\u6362\u200b\uff0c\u200b\u5373\u200bCAS\uff09\u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u4fdd\u8bc1\u200b\u4e86\u200b\u5728\u200b\u5e76\u53d1\u200b\u73af\u5883\u200b\u4e2d\u200b\u5bf9\u200b\u5171\u4eab\u8d44\u6e90\u200b\u7684\u200b\u8bbf\u95ee\u200b\u662f\u200b\u5b89\u5168\u200b\u7684\u200b\u3002 4. \u200b\u534f\u8bae\u200b\uff1a\u200b\u5728\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u534f\u8bae\u200b\u6765\u200b\u63cf\u8ff0\u200b\u7ebf\u7a0b\u200b\u5982\u4f55\u200b\u534f\u8c03\u200b\u5bf9\u200b\u5171\u4eab\u8d44\u6e90\u200b\u7684\u200b\u8bbf\u95ee\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u534f\u8bae\u200b\u6709\u52a9\u4e8e\u200b\u8868\u8fbe\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u4e2d\u200b\u7684\u200b\u540c\u6b65\u200b\u673a\u5236\u200b\u3002 5. \u200b\u7ec4\u5408\u200b\u6027\u200b\uff1a\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u652f\u6301\u200b\u7ec4\u5408\u200b\u6027\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u5730\u200b\u9a8c\u8bc1\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u4e0d\u540c\u200b\u90e8\u5206\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u90e8\u5206\u200b\u7ec4\u5408\u200b\u8d77\u6765\u200b\u9a8c\u8bc1\u200b\u6574\u4e2a\u200b\u7a0b\u5e8f\u200b\u3002</p> <p>Note</p> <p>\u200b\u5728\u200bCaReSL\u200b\u4e2d\u200b\uff0c\u200b\u67d0\u4e9b\u200b\u547d\u9898\u200b\uff08\u200b\u5982\u200b\u6307\u5411\u200b\u65ad\u8a00\u200b\\(\\ell \\hookrightarrow_{I} v\\)\uff09\u200b\u7684\u200b\u771f\u5b9e\u6027\u200b\u53d6\u51b3\u4e8e\u200b\u7279\u5b9a\u200b\u7684\u200b\u8d44\u6e90\u200b\uff08\u200b\u5982\u200b\u5185\u5b58\u200b\u4f4d\u7f6e\u200b\uff09\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u3002\u200b\u53e6\u200b\u4e00\u4e9b\u200b\u547d\u9898\u200b\uff0c\u200b\u5982\u9879\u200b\u7b49\u4ef7\u200b\uff08\\(M = N\\)\uff09\uff0c\u200b\u662f\u200b\u5fc5\u7136\u200b\u7684\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5b83\u4eec\u200b\u7684\u200b\u771f\u5b9e\u6027\u200b\u4e0d\u200b\u53d7\u200b\u5f53\u524d\u200b\u8d44\u6e90\u200b\u72b6\u6001\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u65e0\u8bba\u200b\u8d44\u6e90\u200b\u5982\u4f55\u200b\u53d8\u5316\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u547d\u9898\u200b\u90fd\u200b\u5c06\u200b\u59cb\u7ec8\u200b\u4e3a\u200b\u771f\u200b\u3002</p> <p>\u200b\u7eaf\u200b\u547d\u9898\u200b\uff1a\u200b\u5728\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u4e2d\u200b\uff0c\u200b\u4e0a\u8ff0\u200b\u8fd9\u7c7b\u200b\u4e0d\u53d7\u200b\u8d44\u6e90\u200b\u72b6\u6001\u200b\u5f71\u54cd\u200b\u7684\u200b\u547d\u9898\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u201c\u200b\u7eaf\u200b\u201d\u200b\u547d\u9898\u200b\u3002</p> <p>\u200b\u5fc5\u7136\u200b\u547d\u9898\u200b\u7684\u200b\u8bed\u6cd5\u200b\u5b50\u200b\u7c7b\u522b\u200b \\(A\\)\uff1a\u200b\u8fd9\u4e2a\u200b\u5b50\u200b\u7c7b\u522b\u200b\u5305\u62ec\u200b\u4e86\u200b\u5173\u4e8e\u200b\u9879\u200b\u7b49\u4ef7\u200b\u3001\u200b\u64cd\u4f5c\u200b\u8bed\u4e49\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u8868\u8fbe\u5f0f\u200b \\(M\\) \u200b\u5728\u200b\u7eaf\u200b\u6b65\u9aa4\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u8f6c\u6362\u200b\u4e3a\u200b \\(N\\)\uff09\u200b\u4ee5\u53ca\u200b Hoare \u200b\u4e09\u5143\u7ec4\u200b\u7684\u200b\u58f0\u660e\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u6a21\u6001\u200b\u7b97\u5b50\u200b \\(\\Box\\) \u200b\u521b\u9020\u200b\u5fc5\u7136\u200b\u547d\u9898\u200b\uff1a\u200b\u4efb\u4f55\u200b\u547d\u9898\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6a21\u6001\u200b\u7b97\u5b50\u200b \\(\\Box\\) \uff08\u200b\u8868\u793a\u200b\u201c\u200b\u603b\u662f\u200b\u201d\uff09\u200b\u6765\u200b\u8f6c\u53d8\u200b\u4e3a\u200b\u5fc5\u7136\u200b\u547d\u9898\u200b\u3002\u200b\u5982\u679c\u200b\u547d\u9898\u200b \\(P\\) \u200b\u5728\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u8d44\u6e90\u200b\u72b6\u6001\u200b\u4e0b\u200b\u90fd\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u90a3\u4e48\u200b \\(\\Box P\\) \u200b\u4e5f\u200b\u5fc5\u7136\u200b\u4e3a\u200b\u771f\u200b\u3002</p> <p>\u200b\u5fc5\u7136\u200b\u547d\u9898\u200b\u7684\u200b\u7279\u6b8a\u200b\u89c4\u5219\u200b\uff1a\u200b\u5728\u200b\u903b\u8f91\u63a8\u7406\u200b\u4e2d\u200b\uff0c\u200b\u5fc5\u7136\u200b\u547d\u9898\u200b\u53ef\u4ee5\u200b\u81ea\u7531\u200b\u5730\u200b\u5728\u200bHoare\u200b\u4e09\u5143\u7ec4\u200b\u548c\u200b\u5206\u79bb\u200b\u8fde\u63a5\u8bcd\u200b\u4e4b\u95f4\u200b\u79fb\u52a8\u200b\u3002\u200b\u8fd9\u200b\u8868\u660e\u200b\u5fc5\u7136\u200b\u547d\u9898\u200b\u5728\u200b\u903b\u8f91\u7cfb\u7edf\u200b\u4e2d\u200b\u5177\u6709\u200b\u7279\u6b8a\u200b\u7684\u200b\u5730\u4f4d\u200b\uff0c\u200b\u5b83\u4eec\u200b\u4e0d\u200b\u53d7\u200b\u8d44\u6e90\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5728\u200b\u8fdb\u884c\u200b\u903b\u8f91\u63a8\u7406\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\u5730\u200b\u5904\u7406\u200b\u8fd9\u4e9b\u200b\u547d\u9898\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#kripke","title":"Kripke \u200b\u53ef\u80fd\u200b\u4e16\u754c\u200b \u200b\u6a21\u6001\u903b\u8f91","text":"<p>\u200b\u8fd9\u91cc\u200b\u8ba8\u8bba\u200b\u7684\u200b\u6a21\u6001\u903b\u8f91\u200b\u662f\u200b\u6307\u200b\u53ea\u200b\u542b\u6709\u200b\u4e00\u4e2a\u200b\u6a21\u6001\u200b\u7b97\u5b50\u200b\u7684\u200b\u6a21\u6001\u200b\u547d\u9898\u903b\u8f91\u200b\uff0c\u200b\u76f8\u6bd4\u200b\u4e8e\u200b\u53e4\u5178\u200b\u547d\u9898\u903b\u8f91\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u903b\u8f91\u200b\u4ec5\u4ec5\u200b\u591a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u4e00\u5143\u200b\u8054\u8bcd\u200b\\(\\Box\\)\uff0c\u200b\u4e5f\u200b\u79f0\u4e3a\u200b\u6a21\u6001\u200b\u7b97\u5b50\u200b\u3002\u200b\u57fa\u4e8e\u200b\u6b64\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u7684\u200b\u5f62\u6210\u200b\u89c4\u5219\u200b\uff1a\u200b\u5982\u679c\u200b\\(\\alpha\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\u200b\u5219\u200b\\((\\Box \\alpha)\\)\u200b\u4e5f\u200b\u662f\u200b\u3002\u200b\u5f15\u5165\u200b\\(\\Diamond \\alpha\\)\u200b\u4f5c\u4e3a\u200b\\(\\neg \\Box \\neg \\alpha\\)\u200b\u7684\u200b\u7b80\u5199\u200b\u3002\u200b\u4e3a\u4e86\u200b\u552f\u4e00\u200b\u53ef\u8bfb\u6027\u200b\uff0c\\(\\Box\\)\u200b\u548c\u200b\\(\\Diamond\\)\u200b\u7684\u200b\u7ba1\u8f96\u200b\u8303\u56f4\u200b\u90fd\u200b\u5c3d\u53ef\u80fd\u200b\u77ed\u200b\u3002</p> <p>\u200b\u8054\u8bcd\u200b\\(\\Box\\)\u200b\u548c\u200b\\(\\Diamond\\)\u200b\u901a\u5e38\u200b\u88ab\u200b\u89e3\u91ca\u200b\u6210\u200b\"\u200b\u5fc5\u7136\u200b\"\u200b\u548c\u200b\"\u200b\u53ef\u80fd\u200b\"\u3002</p> <p>\u200b\u5b9a\u4e49\u200b:</p> <p>(1) \u200b\u79f0\u200b\u4e00\u4e2a\u4e8c\u5143\u200b\u7ec4\u200b \\(F = (W, R)\\) \u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6846\u67b6\u200b, \u200b\u5982\u679c\u200b \\(W\\) \u200b\u975e\u7a7a\u4e14\u200b \\(R\\) \u200b\u4e3a\u200b \\(W\\) \u200b\u4e0a\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e8c\u5143\u5173\u7cfb\u200b\uff1b (2) \u200b\u79f0\u200b\u4e00\u4e2a\u200b\u4ece\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b\u7684\u200b\u96c6\u5408\u200b\u5230\u200b\\(W\\)\u200b\u7684\u200b\u5e42\u96c6\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6620\u5c04\u200b\\(V\\)\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u8d4b\u503c\u200b\uff1b (3) \u200b\u79f0\u200b\u4e00\u4e2a\u200b\u7531\u200b\u6846\u67b6\u200b\u548c\u200b\u8d4b\u503c\u200b\u5f62\u6210\u200b\u7684\u200b\u4e8c\u5143\u200b\u7ec4\u200b \\(M = (F, V)\\) \u200b\u4e3a\u200b\u4e00\u4e2a\u200b\uff08\u200b\u514b\u91cc\u666e\u200b\u514b\u200b\uff09\u200b\u6a21\u578b\u200b\u3002\u200b\u6a21\u578b\u200b\\(M\\)\u200b\u4e5f\u200b\u5e38\u5e38\u200b\u88ab\u200b\u5199\u4f5c\u200b \\(M = (W, R, V)\\)\u3002</p> <p>\u200b\u6cbf\u7528\u200b\u514b\u91cc\u666e\u200b\u514b\u200b\u672c\u4eba\u200b\u7684\u200b\u89e3\u91ca\u200b\uff0c\u200b\u4eba\u4eec\u200b\u4e60\u60ef\u200b\u4e0a\u79f0\u200b\\(W\\)\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200b\u4e16\u754c\u200b\u6216\u200b\u4e16\u754c\u200b;\u200b\u5e76\u4e14\u200b\u79f0\u200b\\(xRy\\)\u200b\u4e3a\u200b\u4ece\u200b \\(x\\) \u200b\u53ef\u4ee5\u200b\u901a\u8fbe\u200b \\(y\\)\uff08\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u5bcc\u6709\u200b\u6697\u793a\u6027\u200b\u5730\u200b\u8bfb\u4f5c\u200b\" \\(y\\) \u200b\u662f\u200b \\(x\\) \u200b\u7684\u200b\u4e00\u4e2a\u200b\u5c06\u6765\u200b\u4e16\u754c\u200b\"\uff0c\u200b\u5c3d\u7ba1\u200b\u8fd9\u79cd\u200b\u6697\u793a\u200b\u6709\u200b\u5b83\u200b\u7684\u200b\u7247\u9762\u6027\u200b\uff09;\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b \\(A\\) \u200b\u8d4b\u503c\u200b \\(V\\) \u200b\u6307\u6d3e\u200b\u7ed9\u200b \\(A\\) \u200b\u7684\u200b\u96c6\u5408\u200b \\(V(A)\\) \u200b\u5c31\u662f\u200b\u90a3\u4e9b\u200b \\(A\\) \u200b\u5728\u200b\u5176\u4e2d\u200b\u6210\u7acb\u200b\u7684\u200b\u53ef\u80fd\u200b\u4e16\u754c\u200b\u7684\u200b\u96c6\u5408\u200b\u3002\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u53ea\u200b\u5173\u5fc3\u200b\u6d89\u53ca\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b(\u200b\u6bd4\u65b9\u8bf4\u200b) \\(A,B,C\\) \u200b\u7684\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\u90a3\u4e48\u200b\u53ea\u200b\u9700\u200b\u8003\u8651\u200b\u8d4b\u503c\u200b \\(V\\) \u200b\u5728\u200b \\(A,B,C\\) \u200b\u4e0a\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u662f\u200b\u5f88\u200b\u81ea\u7136\u200b\u7684\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b: \u200b\u5f52\u7eb3\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\\(\\alpha\\)\u200b\u5728\u200b\u6a21\u578b\u200b\\(M\\)\u200b\u4e2d\u200b\u7684\u200b\u4e16\u754c\u200b\\(w\\)\u200b\u4e2d\u4e3a\u200b\u771f\u200b\u8bb0\u4f5c\u200b\\((M,w) \\models \\alpha\\),</p> <p>(1) \u200b\u5bf9\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b \\(A_{i}\\)\uff0c\\((M,w) \\models A_{i}\\)\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(w \\in V(A_{i})\\)\uff1b</p> <p>(2) \\((M,w)\\models(\\neg \\beta)\\)\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\((M,w) \\not\\models \\beta\\)(\u200b\u5373\u200b\\((M,w) \\models \\beta\\)\u200b\u4e0d\u200b\u6210\u7acb\u200b)\uff1b</p> <p>(3) \\((M,w)\\models(\\beta \\rightarrow \\gamma)\\)\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\((M,w)\\not\\models(\\beta)\\)\u200b\u6216\u8005\u200b\\((M,w) \\models \\gamma\\)\uff1b</p> <p>(4) \\((M,w)\\models \\Box \\beta\\)\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\u5bf9\u200b\u4efb\u610f\u200b\u7684\u200b\\(w^{'} \\in W\\)\uff0c\u200b\u5982\u679c\u200b \\(Rww^{'}\\)\uff0c\u200b\u5219\u200b\\((M, w^{'}) \\models \\beta\\)\u3002</p> <p>\u200b\u5982\u679c\u200b\\((M,w)\\not\\models\\alpha\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\\(\\alpha\\) \u200b\u5728\u200b\u6a21\u578b\u200b\\(M\\)\u200b\u4e2d\u200b\u7684\u200b\u4e16\u754c\u200b\\(w\\)\u200b\u4e2d\u4e3a\u200b\u5047\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b: \u200b\u79f0\u200b\\(\\alpha\\) \u200b\u5728\u200b\u6a21\u578b\u200b \\(M =(W, R, V)\\)\u200b\u4e2d\u200b\u6709\u6548\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(M \\models \\alpha\\)\uff0c\u200b\u5982\u679c\u200b\u5bf9\u200b\u6240\u6709\u200b\u7684\u200b\\(w\\in W\\)\u200b\u90fd\u200b\u6709\u200b\\((M,w)\\models\\alpha\\)\u3002</p> <p>\u200b\u4f8b\u200b \u00a0\u200b\u8003\u8651\u200b\u6846\u67b6\u200b\\(F=(W, R)\\)\uff0c\u200b\u5176\u4e2d\u200b\\(W={u,u,w}\\)\uff0c\\(R={(u,u),(u,w)}\\)\u3002\u200b\u5b9a\u4e49\u200b\u8d4b\u503c\u200b \\(V :\\{A,B\\} \\rightarrow P(W)\\)\u200b\u4e3a\u200b\\(V(A)= \\{u, v\\}\\)\u200b\u548c\u200b\\(V(B)= \\{ v\\}\\)\u3002\u200b\u5219\u200b \\((M, u) \\models \\Box(A \\rightarrow B)\\) \u200b\u4f46\u200b \\((M, u) \\not\\models A \\rightarrow \\Box B\\) \u3002</p> <p>1)  \\((M, u) \\models \\Box(A \\rightarrow B)\\)\\     \u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6709\u200b\\(uRv\\)\u200b\u548c\u200b\\(uRW\\)\u3002\\     \u200b\u5bf9\u4e8e\u200b\\(uRv\\)\uff0c\u200b\u7531\u4e8e\u200b\\((M, v) \\models A\\)\u200b\u4e14\u200b\\((M, v) \\models B\\),\u200b\u6545\u200b\\((M, v) \\models A\\rightarrow B\\);\\     \u200b\u5bf9\u4e8e\u200b\\(uRw\\), \u200b\u7531\u4e8e\u200b\\((M, w) \\not \\models A\\)\uff0c\u200b\u6545\u200b     \\((M, v) \\models A\\rightarrow B\\)\u3002\\     \u200b\u56e0\u6b64\u200b\\((M, u) \\models \\Box(A \\rightarrow B)\\)\u3002</p> <p>2)  \\((M, u) \\not\\models A \\rightarrow \\Box B\\)\\     \u200b\u5bf9\u4e8e\u200b\\(uRw\\)\uff0c\u200b\u6709\u200b\\((M, w) \\not \\models B\\)\uff0c\u200b\u6545\u200b\\((M, u) \\not \\models \\Box B\\)\u3002\\     \u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u53c8\u200b\u7531\u4e8e\u200b\\((M, u) \\models A\\)\uff0c\u200b\u6709\u200b\\((M, u) \\not\\models A \\rightarrow \\Box B\\)\u3002</p> <p>\u200b\u5b9a\u4e49\u200b: \u200b\u79f0\u200b\\(\\alpha\\)\u200b\u4e3a\u200b\u666e\u904d\u200b\u6709\u6548\u200b\u7684\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\models \\alpha\\)\uff0c\u200b\u5982\u679c\u200b\u5bf9\u200b\u6240\u6709\u200b\u7684\u200b\u6a21\u578b\u200b\\(M\\)\uff0c\u200b\u90fd\u200b\u6709\u200b\\(M\\models \\alpha\\)\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#k","title":"\u6a21\u6001\u903b\u8f91\u200b\u7684\u200b\u4e00\u4e2a\u200b\u63a8\u7406\u200b\u7cfb\u7edf\u200b\\(K\\)","text":"<p>\u200b\u5728\u200b\u53e4\u5178\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u63a8\u7406\u200b\u7cfb\u7edf\u200b\u8fdb\u884c\u200b\u5982\u4e0b\u200b\u7684\u200b\u6269\u5f20\u200b\u3002\u200b\u9996\u5148\u200b\uff0c\u200b\u5728\u200b(A1)\uff0c(A2)\u200b\u548c\u200b(A3)\u200b\u516c\u7406\u200b\u4e4b\u4e0a\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b\u516c\u7406\u200b\uff1a \\(\\(K: \\Box(\\alpha \\rightarrow \\beta) \\rightarrow (\\Box \\alpha \\rightarrow \\Box \\beta)\\)\\) \u200b\u5e76\u4e14\u200b\uff0c\u200b\u5728\u200b\u6240\u6709\u200b\u516c\u7406\u200b\u4e2d\u200b\uff0c\\(\\alpha\\), \\(\\beta\\), \\(\\gamma\\)\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u4efb\u4f55\u200b\u7684\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\u66ff\u6362\u200b\u3002\u200b\u5176\u6b21\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b\u5fc5\u7136\u200b\u5316\u200b\u89c4\u5219\u200bRN\uff1a\u200b\u4ece\u200b\\(\\alpha\\)\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\\(\\Box \\alpha\\)\u3002</p> <p>\u200b\u6ce8\u610f\u200b:\u200b\u7531\u4e8e\u200b\u7cfb\u7edf\u200b K \u200b\u589e\u52a0\u200b\u4e86\u200b\u5fc5\u7136\u200b\u5316\u200b\u89c4\u5219\u200b\uff0c\u200b\u6f14\u7ece\u200b\u5b9a\u7406\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6210\u7acb\u200b</p> <p>\u200b\u7531\u4e8e\u200b\\(K\\)\u200b\u662f\u200b\u53e4\u5178\u200b\u547d\u9898\u903b\u8f91\u200b\u63a8\u6f14\u200b\u7cfb\u7edf\u200b\u5de5\u7684\u200b\u4e00\u4e2a\u200b\u6269\u5f20\u200b\uff0c\u200b\u56e0\u6b64\u200b\\(K\\)\u200b\u81ea\u7136\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\u6240\u6709\u200b\u7684\u200b\u91cd\u8a00\u5f0f\u200b\u3002\u200b\u4f46\u200b\u8fd9\u91cc\u200b\u9700\u8981\u200b\u6f84\u6e05\u200b\u5728\u200b\u6a21\u6001\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u91cd\u8a00\u5f0f\u200b\u7684\u200b\u6982\u5ff5\u200b\u3002\u200b\u9996\u5148\u200b\u628a\u200b\u6240\u6709\u200b\u7684\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b\u548c\u200b\u5f62\u5982\u200b\\((\\Box \\alpha)\\)\u200b\u7684\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\u5168\u90e8\u5217\u200b\u51fa\u6765\u200b: \\(\\beta_{1},\\beta_{2},\\dots\\), \u200b\u5e76\u4e14\u200b\u7ed9\u200b\u5b83\u4eec\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u90fd\u200b\u6307\u6d3e\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7528\u200b\\(B_{i}\\)\u200b\u4ee3\u8868\u200b\\(\\beta_{i}\\)\u3002\u200b\u8fd9\u6837\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\u90fd\u200b\u6210\u4e3a\u200b\u5173\u4e8e\u200b\u547d\u9898\u200b\u7b26\u53f7\u200b\\(B_{i}\\)\u200b\u7684\u200b\u53e4\u5178\u200b\u516c\u5f0f\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5047\u5b9a\u200b\\(A_{3}\\)\u200b\u548c\u200b\\(\\Box \\Box(A_{1} \\rightarrow \\Box A_{2})\\)\u200b\u5206\u522b\u200b\u662f\u200b\\(B_{5}\\)\u200b\u548c\u200b\\(B_{29}\\)\uff0c\u200b\u5219\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\\(A_{3} \\rightarrow (\\neg  A_{3}) \\rightarrow \\Box \\Box(A_{1} \\rightarrow \\Box A_{2})\\)\u200b\u5c31\u662f\u200b\\(B_{5} \\rightarrow \\neg B_{5} \\rightarrow B_{29}\\)\u3002\u200b\u79f0\u200b\u4e00\u4e2a\u200b\u6a21\u6001\u200b\u516c\u5f0f\u200b\u4e3a\u200b\u4e00\u4e2a\u200b(\u200b\u6a21\u6001\u200b\u7684\u200b)\u200b\u91cd\u8a00\u5f0f\u200b\uff0c\u200b\u5982\u679c\u200b\u7ecf\u8fc7\u200b\u4e0a\u8ff0\u200b\u53d8\u6362\u200b\u540e\u200b\u5f97\u5230\u200b\u7684\u200b\u5173\u4e8e\u200b\\(B_{i}\\)\u200b\u7684\u200b\u516c\u5f0f\u200b\u662f\u200b\u53e4\u5178\u200b\u610f\u4e49\u200b\u4e0b\u200b\u7684\u200b\u91cd\u8a00\u5f0f\u200b[@logic]\u3002\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e8b\u5b9e\u200b\u4f1a\u200b\u7ed9\u200b\u6211\u4eec\u200b\u5e26\u6765\u200b\u5f88\u5927\u200b\u7684\u200b\u65b9\u4fbf\u200b:</p> <p>\u200b\u5f15\u7406\u200b: \u200b\u5982\u679c\u200b\\(\\alpha\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u6001\u200b\u7684\u200b\u91cd\u8a00\u5f0f\u200b\uff0c\u200b\u5219\u200b\\(\\vdash_{K} \\alpha\\)\u3002</p> <p>\u200b\u5f15\u7406\u200b: \u200b\u5982\u679c\u200b\\(\\{ \\alpha: \\Box \\alpha \\in \\Gamma \\} \\vdash_{K} \\beta\\)\uff0c\u200b\u5219\u200b\\(\\Gamma \\vdash_{K} \\Box \\beta\\)\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#a","title":"\u539f\u5b50\u200b\u8868\u8fbe\u5f0f\u200b \\(a\\)","text":"<p>Ultimately, CaReSL distinguishes between triples about general expressions e and those about atomic expressions \\(a\\) (which execute in a single step). Since this distinction is motivated by concurrency, we postpone its explanation to \\(\\S\\)3.2. We include the distinction syntactically in core CaReSL, but it can be safely ignored for now.</p> <p>\u200b\u539f\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u8bed\u6cd5\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a $$ \\textbf{new}  v \\mid \\textbf{get}  v \\mid v := v \\mid \\textbf{CAS}(v,v,v) \\mid \\textbf{newLcl} \\mid \\textbf{getLcl}(v) \\mid \\textbf{setLcl}(v,v)$$ \u200b\u8fd9\u91cc\u200b \\(v\\) \u200b\u4ee3\u8868\u200b\u503c\u200b\u7c7b\u578b\u200b\u3002 We abuse notation, writing e.g., \\(v\\), \\(e\\) or \\(L\\) to stand for a term of sort Val, Exp or LclStorage, respectively.</p> <p>\u200b\u4e0b\u9762\u200b\u7684\u200b\u516c\u5f0f\u200b\u9700\u8981\u200b\u5bfc\u5165\u200b\u989d\u5916\u200b\u7684\u200b\u5305\u200b\uff0c\u200b\u6682\u65f6\u200b\u5148\u200b\u7528\u200b\u7b26\u53f7\u200b\u62fc\u200b\u4e00\u4e0b\u200b\u554a\u200b  \u200b\u539f\u5b50\u200b\u4e09\u5143\u7ec4\u200b\uff1a\\((\\!\\lvert P \\lvert\\!) \\ i \\ \\shortmid \\! \\Rightarrow_{\\text{IS}} a \\ (\\!\\lvert \\varphi \\lvert\\!)\\) \u200b\u4e00\u822c\u200b\u4e09\u5143\u7ec4\u200b\uff1a${ P }  i  \\shortmid ! \\Rightarrow e  { \\varphi } $ \u200b\u6a21\u6001\u200b\u8054\u8bcd\u200b \\(\\triangleright Q\\) \u200b\u8868\u793a\u200b \\(Q\\) \u200b\u81f3\u5c11\u200b\u5728\u200b\u4e00\u6b65\u200b\u8ba1\u7b97\u200b\u5185\u200b\u6210\u7acb\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_10","title":"\u516c\u7406","text":"<p>Note</p> <p>\u201cthrow away\u201d resources: True\u200b\u662f\u200b\u5206\u79bb\u200b\u8054\u8bcd\u200b * \u200b\u7684\u200b\u5355\u4f4d\u200b\u5143\u200b\u5e76\u4e14\u200b\u6bcf\u4e2a\u200b\u547d\u9898\u200b\u90fd\u200b\u8574\u542b\u200bTrue\uff0c\u200b\u7136\u540e\u200b\u6709\u200b\\((P * Q) \\Rightarrow (True * Q) \\Rightarrow Q\\)</p> <p>freely copied\uff1a\u200b\u5f53\u6709\u200bnecessary proposition\u200b\u4f5c\u4e3a\u200b\u64cd\u4f5c\u6570\u200b\u65f6\u200b\uff0c\u200b\u8054\u8bcd\u200b * \u200b\u548c\u200b \\(\\land\\) \u200b\u662f\u200b\u6052\u7b49\u200b\u7684\u200b\uff0c\u200b\u6709\u200b \\(A * A \\Rightarrow A\\)</p> <p>Mono</p> <p>LOB</p> <p></p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#foreach_1","title":"foreach \u200b\u8bc1\u660e","text":""},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#32","title":"3.2 \u200b\u6dfb\u52a0\u200b\u5e76\u53d1\u200b\u6027","text":"<p>\u200b\u4e3a\u4e86\u200b\u63a8\u7406\u200b\u5e76\u53d1\u200b\u6027\u200b\uff0c\u200b\u9700\u8981\u200b\u5bf9\u200b\u7ba1\u7406\u200b\u5171\u4eab\u200b\uff08\u200b\u901a\u5e38\u200b\u662f\u200b\u9690\u85cf\u200b\u7684\u200b\uff09\u200b\u72b6\u6001\u200b\u7684\u200b\u534f\u8bae\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\u3002</p> <p>Note</p> <p>\u200b\u534f\u8bae\u200b\\(\\pi\\) \u200b\u901a\u8fc7\u200b\u4e00\u7ec4\u200b \u200b\u534f\u8bae\u200b\u72b6\u6001\u200b\\(S\\) \u200b\u6765\u200b\u62bd\u8c61\u5730\u200b\u7ba1\u7406\u200b\u5171\u4eab\u8d44\u6e90\u200b\u3002</p> <p>\u200b\u72b6\u6001\u200b\u95f4\u200b\u7684\u200b\u8fc1\u79fb\u200b\u5173\u7cfb\u200b\u7528\u200b \\(\\rightsquigarrow\\)  \u200b\u6765\u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u5bf9\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b \\(s \\in S\\) \u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u4e4b\u200b\u76f8\u5173\u200b \u200b\u547d\u9898\u200b \\(\\varphi (s)\\) \u200b\u6765\u200b\u89e3\u91ca\u200b\u3002</p> <p>\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u539f\u5b50\u200b\u64cd\u4f5c\u200b\u7684\u200b\u5177\u4f53\u200b\u66f4\u65b0\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u4e00\u4e2a\u200b\u5141\u8bb8\u200b\u7684\u200b\u62bd\u8c61\u200b\u8f6c\u79fb\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u8f6c\u6362\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7ebf\u7a0b\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u534f\u8bae\u200b\u4e2d\u200b\u201c\u200b\u83b7\u5f97\u200b\u201d\u200b\u4e00\u4e2a\u200b\u4ee4\u724c\u200b\uff1b\u200b\u76f8\u53cd\u200b\uff0c\u200b\u67d0\u4e9b\u200b\u8f6c\u6362\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u7ebf\u7a0b\u200b\u201c\u200b\u652f\u4ed8\u200b\u201d\u200b\u4ee5\u524d\u200b\u83b7\u5f97\u200b\u7684\u200b\u4ee4\u724c\u200b\uff08\u200b\u653e\u5f03\u200b\u4ee4\u724c\u200b\uff09\u3002 By taking a transition, a thread may \u201cearn\u201d a token from the protocol; conversely, certain transitions require a thread to \u201cpay\u201d by giving up a previously-earned token.</p> <p>\u200b\u4e00\u822c\u6765\u8bf4\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u7ebf\u7a0b\u200b\u90fd\u200b\u5fc5\u987b\u200b\u9075\u5b88\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u534f\u8bae\u200b\uff0c\u200b\u4f46\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6240\u6709\u200b\u7ebf\u7a0b\u200b\u90fd\u200b\u5728\u200b\u5176\u4e2d\u200b\u626e\u6f14\u200b\u76f8\u540c\u200b\u7684\u200b\u89d2\u8272\u200b\u3002</p> <p>\u200b\u5177\u4f53\u200b\u800c\u8a00\u200b\uff1a \\(\\pi = (S, \\rightsquigarrow, \\mathcal{T}, \\varphi)\\) \u200b\u5176\u4e2d\u200b\uff0c\\((S, \\rightsquigarrow)\\) \u200b\u662f\u200b\u8f6c\u6362\u200b\u7cfb\u7edf\u200b\uff1b \u200b\u51fd\u6570\u200b \\(\\mathcal{T}\\) \u200b\u7ed9\u51fa\u200b\u6bcf\u4e2a\u200b\u72b6\u6001\u200b\u4e0b\u200b\u534f\u8bae\u200b\u62e5\u6709\u200b\u7684\u200b\u4ee4\u724c\u200b\u96c6\u200b\uff1b \u200b\u8c13\u8bcd\u200b \\(\\varphi\\) \u200b\u7ed9\u51fa\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u72b6\u6001\u200b\u5bf9\u5e94\u200b\u7684\u200b\u89e3\u91ca\u200b\u3002</p> <p>\u200b\u8f6c\u6362\u200b\u7cfb\u7edf\u200b\u548c\u200b\u4ee4\u724c\u200b\u7684\u200b\u7ec4\u5408\u200b\u4ea7\u751f\u200b\u4e86\u200b\u4ee4\u724c\u200b\u654f\u611f\u200b\u7684\u200b\u8f6c\u6362\u200b\u3002 \\(\\pi\\)\u200b\u5141\u8bb8\u200b\u4ece\u200b\u72b6\u6001\u200b/\u200b\u6807\u8bb0\u200b\\((s;T)\\)\u200b\u8f6c\u6362\u200b\u5230\u200b\u72b6\u6001\u200b/\u200b\u6807\u8bb0\u200b\\((s';T')\\)\uff0c\u200b\u5199\u4f5c\u200b\uff1a\\((s;T) \\rightsquigarrow_{\\pi} (s';T')\\)\uff0c\u200b\u53ea\u200b\u8981\u6c42\u200b\u4ee4\u724c\u200b\u4fdd\u62a4\u200b\u5b9a\u5f8b\u200b\u6210\u7acb\u200b\uff1a\u200b\u7ebf\u7a0b\u200b\u7684\u200b\u4ee4\u724c\u200b\u548c\u200b\u534f\u8bae\u200b\u7684\u200b\u4ee4\u724c\u200b\u4e0d\u200b\u76f8\u4ea4\u200b\u5e76\u96c6\u200b\u5fc5\u987b\u200b\u5728\u200b\u8f6c\u6362\u200b\u524d\u540e\u200b\u76f8\u540c\u200b\uff08\\(T\\uplus\\pi.\\mathcal{T}(s) = T'\\uplus\\pi.\\mathcal{T}(s')\\)\uff09\u3002 \u200b\u4ee4\u724c\u200b\u654f\u611f\u200b\u7684\u200b\u8f6c\u6362\u200b\u9650\u5236\u200b\u4e86\u200b\u7ebf\u7a0b\u200b\u548c\u200b\u5176\u200b\u73af\u5883\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_11","title":"\u81ea\u65cb\u200b\u9501\u200b\u7684\u200b\u5b9a\u4e49","text":"<p> \\(mkSync\\)\u200b\u51fd\u6570\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u540c\u6b65\u200b\u673a\u5236\u200b\uff0c\u200b\u5b83\u200b\u786e\u4fdd\u200b\u5bf9\u200b\u67d0\u4e2a\u200b\u8d44\u6e90\u200b\u7684\u200b\u8bbf\u95ee\u200b\u9075\u5faa\u200b\u7279\u5b9a\u200b\u7684\u200b\u534f\u8bae\u200b\u3002\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u8d44\u6e90\u200b \\(p\\) \u200b\u88ab\u200b\u770b\u4f5c\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5373\u200b\u5728\u200b\u540c\u6b65\u64cd\u4f5c\u200b\u5f00\u59cb\u200b\u548c\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0c\u200b\u5176\u503c\u200b\u6216\u200b\u72b6\u6001\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u3002</p> <p>\\(Syncer(p)\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u63a5\u6536\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b \\(f\\) \u200b\u548c\u200b\u76f8\u5173\u200b\u7684\u200b\u65ad\u8a00\u200b\uff0c\u200b\u5e76\u200b\u786e\u4fdd\u200b \\(f\\) \u200b\u7684\u200b\u6267\u884c\u200b\u7ef4\u6301\u200b\u4e86\u200b \\(p\\) \u200b\u7684\u200b\u4e0d\u53d8\u6027\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5728\u200b \\(f\\) \u200b\u6267\u884c\u200b\u671f\u95f4\u200b\uff0c\u200b\u8d44\u6e90\u200b \\(p\\) \u200b\u662f\u200b\u88ab\u200b \\(f\\) \u200b\u72ec\u5360\u200b\u7684\u200b\uff0c\u200b\u6ca1\u6709\u200b\u5176\u4ed6\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u5b83\u200b\u3002</p> <p>\u200b\u9690\u85cf\u200b\u9501\u200b\u610f\u5473\u7740\u200b\u9501\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u4e8e\u200b\u5ba2\u6237\u7aef\u200b\u662f\u200b\u4e0d\u200b\u53ef\u89c1\u200b\u7684\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b \\(mkSync\\)\u200b\u63d0\u4f9b\u200b\u7684\u200b\u63a5\u53e3\u200b\u4e0e\u200b\u9501\u200b\u8fdb\u884c\u200b\u4ea4\u4e92\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_12","title":"\u5c9b\u200b\u65ad\u8a00","text":"<p> \\(\\boxed{b}^n_\\pi\\) b: sort State \u00d7 TokSet n: name \\(\\pi\\) : protocols</p> <p>While a thread\u2019s island assertions cannot be invalidated by a change its environment makes, they can be invalidated by a change the thread itself makes.</p> <p>There is, however, a special class of island assertions which are \u201ccompletely\u201d stable, i.e., that act as necessary propositions: island assertions that do not claim any tokens.</p> <p>\u200b\u4e24\u4e2a\u200b\u89c4\u5219\u200b\uff1aNEWISL\u200b\u548c\u200bUPDISL</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_13","title":"\u7ebf\u7a0b\u200b\u521b\u5efa","text":"<p>In a protocol, threads gain and lose roles (tokens) by making deliberate moves within the protocol. But there is also a role that every thread plays automatically: the role of being a thread with a certain ID.</p> <p>\u200b\u901a\u8fc7\u200bFORK\u200b\u89c4\u5219\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u7ebf\u7a0b\u200b</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_14","title":"\u81ea\u65cb\u200b\u9501\u200b\u7684\u200b\u8bc1\u660e","text":"<p>\"\u200b\u4ee4\u724c\u200b\u7eaf\u51c0\u200b\"\u200b\u662f\u200b\u4e00\u79cd\u200b\u5c5e\u6027\u200b\uff0c\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u6216\u8005\u200b\u547d\u9898\u200b\u4e0d\u4f1a\u200b\u65ad\u8a00\u200b\u5bf9\u200b\u4e00\u4e9b\u200b\u8d44\u6e90\u200b\u7684\u200b\u6240\u6709\u6743\u200b\u3002 - \u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u9690\u85cf\u200b\u7684\u200b\u9501\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\\(NEWISL\\) \u200b\u89c4\u5219\u200b\u5c06\u200b\u6b64\u9501\u200b\u79fb\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5c9b\u200b\u65ad\u8a00\u200b\u4e2d\u200b\uff1b - \u200b\u4f7f\u7528\u200b \\(AOUT\\)  \u200b\u5c06\u5c9b\u200b\u65ad\u8a00\u200b\u79fb\u52a8\u200b\u5230\u200b\u8bc1\u660e\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\uff1b - \u200b\u5728\u200b\u524d\u7f6e\u6761\u4ef6\u200b \\(q\\) \u200b\u4e0b\u200b\u8fdb\u884c\u200b\u8bc1\u660e\u200b\uff0c\u200b\u4f7f\u7528\u200b \\(AIN\\) \u200b\u89c4\u5219\u200b\u5c06\u5c9b\u200b\u65ad\u8a00\u200b\u5f15\u5165\u200b\u3002 - \u200b\u4f7f\u7528\u200b \\(\\text{acq}\\) \u200b\u51fd\u6570\u200b\u5c1d\u8bd5\u200b\u83b7\u53d6\u200b\u9501\u200b\uff0c\u200b\u5982\u679c\u200b\u6210\u529f\u200b\uff0c\u200b\u5219\u200b\u6267\u884c\u200b \\(f\\) \u200b\u51fd\u6570\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u5b8c\u6210\u200b\u540e\u200b\u4f7f\u7528\u200b \\(\\text{rel}\\) \u200b\u51fd\u6570\u200b\u91ca\u653e\u200b\u9501\u200b\u3002\\(\\text{acq}\\) \u200b\u51fd\u6570\u200b\u901a\u8fc7\u200b \\(CAS\\) \u200b\u64cd\u4f5c\u200b\u6765\u200b\u5c1d\u8bd5\u200b\u83b7\u53d6\u200b\u9501\u200b\uff0c\u200b\u5982\u679c\u200b\u9501\u200b\u5df2\u7ecf\u200b\u662f\u200b \\(Locked\\) \u200b\u72b6\u6001\u200b\uff0c\u200b\u5219\u200b \\(\\text{acq}\\) \u200b\u4f1a\u200b\u91cd\u8bd5\u200b\u3002 - \\(\\text{rel}\\) \u200b\u51fd\u6570\u200b\u7b80\u5355\u200b\u5730\u200b\u5c06\u200b\u9501\u200b\u7684\u200b\u72b6\u6001\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b \\(Unlocked\\) \uff0c\u200b\u4ece\u800c\u200b\u91ca\u653e\u200b\u9501\u200b\u3002 - \\(\\text{acq}\\) \u200b\u548c\u200b \\(\\text{rel}\\) \u200b\u51fd\u6570\u200b\u64cd\u4f5c\u200b\u6700\u7ec8\u200b\u90fd\u200b\u8981\u200b\u4e0a\u5347\u200b\u5230\u200b \\(UPDISL\\) \u200b\u89c4\u5219\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#33","title":"3.3 \u200b\u7cbe\u5316\u200b\u63a8\u7406","text":"<p>CaReSL\u200b\u5e76\u200b\u6ca1\u6709\u200b\u7b80\u5355\u200b\u5730\u200b\u5728\u200b\u5e76\u884c\u200b\u5206\u79bb\u200b\u903b\u8f91\u200b\u4e4b\u4e0a\u200b\u6dfb\u52a0\u200b\u7cbe\u5316\u200b\u4f5c\u4e3a\u200b\u539f\u5b50\u200b\u6982\u5ff5\u200b\u3002\u200b\u76f8\u53cd\u200b\uff0cCaReSL\u200b\u5c06\u200b\u7cbe\u5316\u200b\u89c6\u4e3a\u200b\u6d3e\u751f\u200b\u6982\u5ff5\u200b\uff0c\u200b\u8868\u793a\u200b\u4e3a\u200b\u7279\u5b9a\u200b\u7684\u200bHoare\u200b\u6837\u5f0f\u200b\u89c4\u8303\u200b\u3002</p> <p>\u200b\u4e24\u4e2a\u200b\u57fa\u672c\u200b\u89c4\u8303\u200b\u65ad\u8a00\u200b\uff1a \u200b\u89c4\u8303\u200b\u6307\u5411\u200b\u65ad\u8a00\u200b: \\(\\ell \\hookrightarrow_{S} v\\) \uff0c\u200b\u58f0\u79f0\u200b\u89c4\u8303\u200b\u5806\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u6240\u6709\u6743\u200b\uff1a\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b \\(\\ell\\) \u200b\u6307\u5411\u200b\u503c\u200b \\(v\\) \uff0c \u200b\u89c4\u8303\u200b\u7ebf\u7a0b\u200b\u65ad\u8a00\u200b: \\(i \\shortmid \\! \\Rightarrow_S e\\) \uff0c\u200b\u58f0\u79f0\u200b\u4e00\u4e2a\u200b\u89c4\u8303\u200b\u7ebf\u7a0b\u200b\u7684\u200b\u6240\u6709\u6743\u200b\uff0c\u200b\u8be5\u200b\u89c4\u8303\u200b\u7ebf\u7a0b\u200bID\u200b\u662f\u200b \\(i\\)\uff0c\u200b\u6267\u884c\u200b\u8868\u8fbe\u5f0f\u200b \\(e\\) \u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#caresl_1","title":"CaReSL\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4e0e\u200b\u89c4\u8303\u200b\u4e4b\u95f4\u200b\u7684\u200b\u903b\u8f91\u5173\u7cfb","text":"<p>\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u4e0a\u4e0b\u6587\u200b \\(\\Omega\\) \u200b\u548c\u200b\u7c7b\u578b\u200b \\(\\tau\\) \u200b\u4e0b\u200b\uff0c\u200b\u903b\u8f91\u5173\u7cfb\u200b \\(e_{I} \\preceq e_{S} : \\tau\\) \u200b\u8868\u793a\u200b \\(e_{I}\\) \uff08\u200b\u5b9e\u73b0\u200b\u8868\u8fbe\u5f0f\u200b\uff09\u200b\u662f\u200b \\(e_{S}\\) \uff08\u200b\u89c4\u8303\u200b\u8868\u8fbe\u5f0f\u200b\uff09\u200b\u7684\u200b\u903b\u8f91\u200b\u7ec6\u5316\u200b\uff0c\u200b\u5373\u200b \\(e_{I}\\) \u200b\u7684\u200b\u884c\u4e3a\u200b\u4e0d\u4f1a\u200b\u8d85\u51fa\u200b \\(e_{S}\\) \u200b\u6240\u200b\u5b9a\u4e49\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_15","title":"\u903b\u8f91\u5173\u7cfb","text":"<ul> <li>\\(e_{I} \\preceq e_{S} : \\tau\\) \u200b\u8868\u793a\u200b\u5728\u200b\u4e0a\u4e0b\u6587\u200b \\(\\Omega\\) \u200b\u548c\u200b\u7c7b\u578b\u200b \\(\\tau\\) \u200b\u4e0b\u200b\uff0c\\(e_{I}\\) \u200b\u903b\u8f91\u200b\u4e0a\u200b\u76f8\u5173\u200b\u4e8e\u200b \\(e_{S}\\)\u3002</li> <li>\u200b\u8fd9\u4e2a\u200b\u5173\u7cfb\u200b\u662f\u200b\u901a\u8fc7\u200bCaReSL\u200b\u4e2d\u200b\u7684\u200b \\(\\Omega \\vdash e_{I} \\preceq e_{S} : \\tau\\) \u200b\u5224\u65ad\u200b\u6765\u200b\u4f7f\u7528\u200b\u7684\u200b\uff0c\u200b\u5176\u4e2d\u200b \\(\\Omega\\) \u200b\u662f\u200b\u8bc1\u660e\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u3002</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_16","title":"\u8bc1\u660e\u200b\u4e0a\u4e0b\u6587","text":"<ul> <li>\u200b\u5728\u200b\u8bc1\u660e\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u7c7b\u578b\u200b\u53d8\u91cf\u200b \\(\\alpha\\) \u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u8d4b\u4e88\u200b\u4efb\u610f\u200b\u7684\u200b\u7c7b\u578b\u200b\u89e3\u91ca\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u9879\u200b\u53d8\u91cf\u200b \\(x\\) \u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u8d4b\u4e88\u200b\u5728\u200b\u9002\u5f53\u200b\u7c7b\u578b\u200b\u4e0b\u200b\u76f8\u5173\u8054\u200b\u7684\u200b\u9879\u200b\u53d8\u91cf\u200b\u5bf9\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u8bc1\u660e\u200b\u4e0a\u4e0b\u6587\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8db3\u591f\u200b\u7684\u200b\u4fe1\u606f\u200b\u6765\u200b\u89e3\u91ca\u200b\u7c7b\u578b\u200b\u548c\u200b\u9879\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u200b\u903b\u8f91\u5173\u7cfb\u200b\u5f97\u4ee5\u200b\u5efa\u7acb\u200b\u3002</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_17","title":"\u5171\u4eab\u200b\u4e0d\u53d8\u6027\u200b\u534f\u8bae","text":"<ul> <li>\u200b\u5bf9\u4e8e\u200b\u7c7b\u578b\u200b\u4e3a\u200b \\(ref \\ \\tau\\) \u200b\u7684\u200b\u9879\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5177\u6709\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u7684\u200b\u9879\u200b\uff09\uff0c\u200b\u8bc1\u660e\u200b\u4e0a\u4e0b\u6587\u200b\u4f1a\u200b\u63d0\u4f9b\u200b\u5bf9\u200b\u5171\u4eab\u200b\u4e0d\u53d8\u6027\u200b\u534f\u8bae\u200b\u7684\u200b\u8bbf\u95ee\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u534f\u8bae\u200b\u89c4\u5b9a\u200b\u4e86\u200b\u5bf9\u5e94\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u4e0d\u53d8\u6027\u200b\u8981\u6c42\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\u7684\u200b\u5f15\u7528\u200b\u66f4\u65b0\u200b\u4e0e\u200b\u89c4\u8303\u200b\u4e2d\u200b\u7684\u200b\u66f4\u65b0\u200b\u540c\u6b65\u8fdb\u884c\u200b\u3002</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_18","title":"\u79c1\u6709\u200b\u5f15\u7528","text":"<ul> <li>\u200b\u5982\u679c\u200b\u5f15\u7528\u200b\u662f\u200b\u5728\u200b\u5b9e\u73b0\u200b\u6216\u200b\u89c4\u8303\u200b\u5185\u90e8\u200b\u5206\u914d\u200b\u7684\u200b\uff08\u200b\u5373\u200b\u79c1\u6709\u200b\u5f15\u7528\u200b\uff09\uff0c\u200b\u5b83\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u9075\u5faa\u200b\u5171\u4eab\u200b\u4e0d\u53d8\u6027\u200b\u534f\u8bae\u200b\uff0c\u200b\u9664\u975e\u200b\u5b83\u4eec\u200b\u88ab\u200b\u66b4\u9732\u200b\u7ed9\u200b\u5916\u90e8\u200b\u3002\u200b\u8fd9\u200b\u8868\u660e\u200b\u79c1\u6709\u200b\u5f15\u7528\u200b\u7684\u200b\u884c\u4e3a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u200b\u8fdd\u53cd\u200b\u89c4\u8303\u200b\u7684\u200b\u524d\u63d0\u200b\u4e0b\u200b\uff0c\u200b\u6709\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u81ea\u7531\u5ea6\u200b\u3002</li> </ul> <p>Note</p> <p>\u200b\u4f5c\u8005\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u7ec6\u5316\u200b\u8bc1\u660e\u200b\u7684\u200b\u8349\u56fe\u200b\uff0c\u200b\u5e76\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u4e24\u79cd\u200b\u5806\u6808\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002\u200b\u7b2c\u4e00\u79cd\u200b\u5b9e\u73b0\u200b\u662f\u200b \\(stack_{S}\\)\u3002\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c97\u7c92\u5ea6\u200b\u7684\u200b\u53c2\u8003\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u6587\u4e2d\u200b\u5c06\u200b\u5176\u200b\u89c6\u4e3a\u200b\u89c4\u8303\u200b\u3002\\(stack_{S}\\) \u200b\u7684\u200b\u7279\u70b9\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li> <p>\u200b\u6570\u636e\u8868\u793a\u200b\uff1a\\(stack_{S}\\) \u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u53ef\u53d8\u200b\u7684\u200b\u5f15\u7528\u200b \\(hd_{S}\\)\uff0c\u200b\u5b83\u200b\u6307\u5411\u200b\u4e00\u4e2a\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\u5217\u8868\u200b\u3002\u200b\u8fd9\u79cd\u200b\u6570\u636e\u7ed3\u6784\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6808\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p> </li> <li> <p>\u200b\u540c\u6b65\u200b\u5305\u88c5\u200b\u5668\u200b\uff1a \\(stack_{S}\\) \u200b\u4f7f\u7528\u200b\u7531\u200b \\(mkSync\\) \u200b\u63d0\u4f9b\u200b\u7684\u200b\u540c\u6b65\u200b\u5305\u88c5\u200b\u5668\u200b \\(sync\\) \u200b\u6765\u200b\u786e\u4fdd\u200b\u5bf9\u6808\u200b\u7684\u200b\u5e76\u53d1\u200b\u8bbf\u95ee\u200b\u662f\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u3002</p> </li> <li> <p>\u200b\u51fd\u6570\u200b\uff1a\\(stack_{S}\\) \u200b\u63d0\u4f9b\u200b\u4e86\u200b \\(push\\) \u200b\u548c\u200b \\(pop\\) \u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u901a\u8fc7\u200b\u540c\u6b65\u200b\u673a\u5236\u200b\u6765\u200b\u66f4\u65b0\u200b \\(hd_{S}\\)\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5728\u200b\u6267\u884c\u200b\u5165\u6808\u200b\u548c\u200b\u51fa\u6808\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u9501\u5b9a\u200b\u6808\u200b\uff0c\u200b\u9632\u6b62\u200b\u5176\u4ed6\u200b\u7ebf\u7a0b\u200b\u540c\u65f6\u200b\u4fee\u6539\u200b\u3002</p> </li> <li> <p>\u200b\u8fed\u4ee3\u200b\u5668\u200b\u7684\u200b\u540c\u6b65\u200b\u95ee\u9898\u200b\uff1a\u200b\u5c3d\u7ba1\u200b \\(push\\) \u200b\u548c\u200b \\(pop\\) \u200b\u64cd\u4f5c\u200b\u662f\u200b\u540c\u6b65\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b \\(stack_{S}\\) \u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\u5e76\u200b\u4e0d\u662f\u200b\u5b8c\u5168\u200b\u540c\u6b65\u200b\u7684\u200b\u3002\u200b\u8fed\u4ee3\u200b\u5668\u200b\u901a\u8fc7\u200b\u539f\u5b50\u200b\u5feb\u7167\u200b\uff08atomic snapshot\uff09\u200b\u7684\u200b\u65b9\u5f0f\u200b\u83b7\u53d6\u200b\u6808\u200b\u7684\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\uff0c\u200b\u7136\u540e\u200b\u5bf9\u200b\u5176\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u8c03\u7528\u51fd\u6570\u200b \\(f\\)\u3002\u200b\u800c\u200b\u5728\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u8fed\u4ee3\u200b\u5668\u200b\u4e0d\u200b\u6301\u6709\u200b\u4efb\u4f55\u200b\u9501\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5728\u200b\u8c03\u7528\u51fd\u6570\u200b\\(f\\)\u200b\u65f6\u200b\uff0c\u200b\u6808\u200b\u7684\u200b\u5185\u5bb9\u200b\u53ef\u80fd\u200b\u5df2\u7ecf\u200b\u53d1\u751f\u200b\u4e86\u200b\u53d8\u5316\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u8fed\u4ee3\u200b\u5668\u200b\u89c2\u5bdf\u200b\u5230\u200b\u7684\u200b\u6808\u200b\u72b6\u6001\u200b\u53ef\u80fd\u200b\u662f\u200b\u8fc7\u65f6\u200b\u7684\u200b\uff0c\u200b\u4e0d\u200b\u53cd\u6620\u200b\u5f53\u524d\u200b\u7684\u200b\u6700\u65b0\u200b\u72b6\u6001\u200b\u3002</p> </li> </ol>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#treiber","title":"Treiber\u200b\u5806\u6808\u200b\u53ca\u5176\u200b\u8fed\u4ee3\u200b\u5668","text":"<p>\u200b\u7b2c\u4e8c\u79cd\u200b\u5806\u6808\u200b\u5b9e\u73b0\u200b \\(stack_{I}\\)\u200b\u662f\u200bTreiber\u200b\u5806\u6808\u200b\uff08Treiber's stack\uff09\u200b\u7684\u200b\u6269\u5c55\u200b\u7248\u672c\u200b\uff0c\u200b\u589e\u52a0\u200b\u4e86\u200b\u8fed\u4ee3\u200b\u5668\u200b\u529f\u80fd\u200b\u3002</p> <ol> <li>Treiber\u200b\u5806\u6808\u200b\uff1aTreiber\u200b\u5806\u6808\u200b\u662f\u200b\u4e00\u79cd\u200b\u65e0\u9501\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u5e76\u53d1\u200b\u73af\u5883\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u6808\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b\u539f\u5b50\u200b\u64cd\u4f5c\u200bCAS\u200b\u6765\u200b\u66f4\u65b0\u200b\u5806\u6808\u200b\u9876\u90e8\u200b\u7684\u200b\u5f15\u7528\u200b\uff08\\(hd_{I}\\)\uff09\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u4e92\u65a5\u200b\u9501\u200b\u3002</li> <li> <p>\u200b\u6570\u636e\u8868\u793a\u200b\uff1a\\(stack_{I}\\) \u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u5f15\u7528\u200b \\(hd_{I}\\)\uff0c\u200b\u6307\u5411\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\uff0c\u200b\u8be5\u200b\u5217\u8868\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6808\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002\\(hd_{I}\\) \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b \\(ref \\  clist \\ (\\alpha)\\)\uff0c\u200b\u5176\u4e2d\u200b \\(clist \\ (\\alpha)\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b\u4e86\u200b\u9012\u5f52\u200b\u7c7b\u578b\u200b\uff08\\(\\mu\\beta.\\)\uff09\u200b\u7684\u200b\u94fe\u8868\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8868\u793a\u200b\u4e3a\u200b \\(ref \\ (1 + (\\alpha \\times \\beta))\\)\uff0c\u200b\u8fd9\u91cc\u200b\u7684\u200b \\(1\\) \u200b\u8868\u793a\u200b\u7a7a\u200b\u5217\u8868\u200b\uff0c\\(\\alpha \\times \\beta\\) \u200b\u8868\u793a\u200b\u975e\u7a7a\u200b\u8282\u70b9\u200b\uff0c\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u548c\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u5f15\u7528\u200b\u3002</p> </li> <li> <p>\u200b\u4e50\u89c2\u200b\u5e76\u53d1\u200b\uff1a \\(stack_{I}\\) \u200b\u7684\u200b \\(push\\) \u200b\u548c\u200b \\(pop\\) \u200b\u51fd\u6570\u200b\u91c7\u7528\u200b\u4e50\u89c2\u200b\u5e76\u53d1\u200b\u7b56\u7565\u200b\u3002\u200b\u5b83\u4eec\u200b\u4e0d\u662f\u200b\u901a\u8fc7\u200b\u83b7\u53d6\u200b\u9501\u6765\u200b\u901a\u77e5\u200b\u5176\u4ed6\u200b\u7ebf\u7a0b\u200b\u5373\u5c06\u200b\u8fdb\u884c\u200b\u66f4\u6539\u200b\uff0c\u200b\u800c\u662f\u200b\u9996\u5148\u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b \\(hd_{I}\\) \u200b\u7684\u200b\u5feb\u7167\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u65b0\u503c\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200bCAS\u200b\u64cd\u4f5c\u200b\u5c1d\u8bd5\u200b\u5b89\u88c5\u200b\u8fd9\u4e2a\u200b\u65b0\u503c\u200b\u3002\u200b\u5982\u679c\u200b \\(hd_{I}\\) \u200b\u7684\u200b\u8eab\u4efd\u200b\u6ca1\u6709\u200b\u6539\u53d8\u200b\uff0c\u200b\u90a3\u4e48\u200bCAS\u200b\u64cd\u4f5c\u200b\u5c31\u200b\u4f1a\u200b\u6210\u529f\u200b\u3002\u200b\u76f4\u89c2\u200b\u539f\u7406\u200b\u5c31\u662f\u200b\uff0c\u200b\u5982\u679c\u200b \\(hd_{I}\\) \u200b\u7684\u200b\u8eab\u4efd\u200b\u6ca1\u6709\u200b\u6539\u53d8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6808\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u6539\u53d8\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6240\u6709\u200b\u7684\u200b\u53d8\u66f4\u200b\u90fd\u200b\u662f\u200b\u901a\u8fc7\u200b\u6539\u53d8\u200b \\(hd_{I}\\) \u200b\u7684\u200b\u8eab\u4efd\u200b\u6765\u200b\u5b8c\u6210\u200b\u7684\u200b\u3002</p> </li> <li> <p>\u200b\u8fed\u4ee3\u200b\u5668\u200b\u884c\u4e3a\u200b\uff1a \\(stack_{I}\\) \u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4e00\u4e2a\u200b\uff08\u200b\u53ef\u80fd\u200b\u662f\u200b\u8fc7\u65f6\u200b\u7684\u200b\uff09\\(hd_{I}\\) \u200b\u5feb\u7167\u200b\u5f00\u59cb\u200b\uff0c\u200b\u904d\u5386\u200b\u6808\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002\u200b\u4f46\u200b\u7531\u4e8e\u200b\u8fed\u4ee3\u200b\u5668\u200b\u4e0d\u200b\u6301\u6709\u200b\u9501\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b83\u200b\u53ef\u80fd\u200b\u89c2\u5bdf\u200b\u5230\u200b\u7684\u200b\u6808\u200b\u72b6\u6001\u200b\u4e0d\u662f\u200b\u6700\u65b0\u200b\u7684\u200b\u3002</p> </li> </ol>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_19","title":"\u6848\u4f8b\u200b\u7814\u7a76","text":"<p>\u200b\u8bba\u6587\u200b\u4f7f\u7528\u200bCaReSL\u200b\u6765\u200b\u9a8c\u8bc1\u200bHendler\u200b\u7b49\u200b\u4eba\u200b\u7684\u200b\u201c\u200b\u5e73\u9762\u200b\u7ec4\u5408\u200b\u201d\u200b\u7b97\u6cd5\u200b\u3002\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u5c06\u200b\u987a\u5e8f\u200bADT\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u76f8\u5bf9\u200b\u9ad8\u6548\u200b\u7684\u200b\u5e76\u53d1\u200bADT\u200b\u7684\u200b\u901a\u7528\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200bCaReSL\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\u7684\u200b\u6709\u6548\u6027\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/CaReSL/#_20","title":"\u7ed3\u8bba","text":"<p>CaReSL\u200b\u5c55\u793a\u200b\u4e86\u200b\u5728\u200b\u9ad8\u9636\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u4e2d\u200b\u7edf\u4e00\u200b\u7cbe\u5316\u200b\u548c\u200bHoare\u200b\u98ce\u683c\u200b\u63a8\u7406\u200b\u7684\u200b\u53ef\u80fd\u6027\u200b\u3002\u200b\u901a\u8fc7\u200b\u6848\u4f8b\u200b\u7814\u7a76\u200b\uff0c\u200b\u8bc1\u660e\u200b\u4e86\u200bCaReSL\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\u7684\u200b\u6709\u6548\u6027\u200b\u548c\u200b\u7075\u6d3b\u6027\u200b\u3002CaReSL\u200b\u7684\u200b\u63d0\u51fa\u200b\uff0c\u200b\u4e3a\u200b\u5e76\u53d1\u7a0b\u5e8f\u200b\u7684\u200b\u6a21\u5757\u5316\u200b\u9a8c\u8bc1\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u89c6\u89d2\u200b\u548c\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/","title":"Spoq: Scaling Machine-Checkable Systems Verification in Coq","text":"<p> \u200b\u7ea6\u200b 4631 \u200b\u4e2a\u200b\u5b57\u200b  73 \u200b\u884c\u200b\u4ee3\u7801\u200b  \u200b\u9884\u8ba1\u200b\u9605\u8bfb\u200b\u65f6\u95f4\u200b 16 \u200b\u5206\u949f\u200b</p> <p>Xupeng Li, Xuheng Li, Wei Qiang, Ronghui Gu, and Jason Nieh, Columbia University</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u7531\u4e8e\u200b\u5176\u200b\u4ee3\u7801\u200b\u590d\u6742\u5ea6\u200b\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u5f62\u5f0f\u5316\u200b\u9a8c\u8bc1\u200b\u5f80\u5f80\u200b\u8f83\u96be\u200b\u3002\u200b\u8bba\u6587\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u81ea\u52a8\u5316\u200b\u7a0b\u5e8f\u9a8c\u8bc1\u200b\u6846\u67b6\u200bSpoq\uff0c\u200b\u4ee5\u200b\u964d\u4f4e\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u7684\u200b\u7a0b\u5e8f\u5316\u200b\u9a8c\u8bc1\u200b\u6210\u672c\u200b\u3002\u200b\u8bba\u6587\u200b\u7684\u200b\u4e3b\u8981\u200b\u8d21\u732e\u200b\u548c\u200b\u7279\u70b9\u200b\u5305\u62ec\u200b\uff1a - Spoq\u200b\u80fd\u591f\u200b\u81ea\u52a8\u200b\u5c06\u200b\u672a\u4fee\u6539\u200b\u7684\u200bC\u200b\u7cfb\u7edf\u200b\u4ee3\u7801\u200b\uff08\u200b\u5982\u200bLinux\u200b\u5185\u6838\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7801\u200b\uff09\u200b\u7ffb\u8bd1\u6210\u200bCoq\u200b\u8868\u793a\u200b\uff0c\u200b\u8fd9\u662f\u200b\u9996\u4e2a\u200b\u80fd\u591f\u200b\u5b9e\u73b0\u200b\u8fd9\u4e00\u200b\u529f\u80fd\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002 - Spoq\u200b\u652f\u6301\u200b\u5b8c\u6574\u200b\u7684\u200bC\u200b\u8bed\u8a00\u200b\u8bed\u4e49\u200b\uff0c\u200b\u5305\u62ec\u200bGNU C\u200b\u7279\u5b9a\u200b\u6269\u5c55\u200b\u548c\u200b\u5185\u8054\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\u3002 - Spoq\u200b\u5229\u7528\u200b\u5206\u5c42\u200b\u8bc1\u660e\u200b\u7b56\u7565\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b\u5b9e\u73b0\u200b\u7684\u200b\u5c42\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5c06\u200b\u9a8c\u8bc1\u200b\u5206\u89e3\u200b\u4e3a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u4f7f\u200b\u6bcf\u4e2a\u200b\u9a8c\u8bc1\u200b\u6b65\u9aa4\u200b\u66f4\u200b\u5bb9\u6613\u200b\u5b8c\u6210\u200b\u3002 - Spoq\u200b\u81ea\u52a8\u200b\u751f\u6210\u200bCoq\u200b\u5c42\u200b\u89c4\u8303\u200b\u548c\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u8fd9\u662f\u200b\u9996\u4e2a\u200b\u80fd\u591f\u200b\u4e3a\u200b\u5e76\u53d1\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u81ea\u52a8\u5316\u200b\u751f\u6210\u200b\u5c42\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002 - Spoq\u200b\u51cf\u5c11\u200b\u4e86\u200b\u8fdb\u884c\u200b\u6e90\u4ee3\u7801\u200b\u7ea7\u200b\u673a\u68b0\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u4fe1\u4efb\u200b\u8ba1\u7b97\u200b\u57fa\u7840\u200b\uff08TCB\uff09\uff0c\u200b\u56e0\u4e3a\u200b\u751f\u6210\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e0d\u200b\u9700\u8981\u200b\u4fe1\u4efb\u200bSpoq\u3002 - Spoq\u200b\u5728\u200b\u5b9e\u9645\u200b\u7684\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u8bc4\u4f30\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200b\u5176\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u591a\u5904\u7406\u5668\u200b\uff08SeKVM\uff09\u200b\u865a\u62df\u673a\u200b\u5b9e\u73b0\u200b\u65b9\u9762\u200b\u7684\u200b\u6709\u6548\u6027\u200b\u3002</p> <p>\u200b\u5229\u7528\u200bClang\u200b\u7f16\u8bd1\u5668\u200b\u524d\u7aef\u200b\u5c06\u200bC\u200b\u4ee3\u7801\u200b\u89e3\u6790\u200b\u4e3a\u200bLLVM IR, \u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e00\u76f4\u200b\u65b0\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u91cd\u5efa\u200b\u6280\u672f\u200b\uff0c\u200b\u5c06\u200bLLVM IR CFG \u200b\u8f6c\u6362\u200b\u4e3a\u200b Coq\u200b\u8868\u793a\u200b\u3002\u200b\u8fd9\u4f7f\u200bSpoq\u200b\u6210\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u81ea\u52a8\u200b\u8f6c\u6362\u200b\u672a\u4fee\u6539\u200b\u7684\u200bC\u200b\u7cfb\u7edf\u200b\u4ee3\u7801\u200b\u7684\u200b\u7cfb\u7edf\u200b</p> <p>Spoq\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u79cd\u200b\u65b0\u200b\u7684\u200b\u7a0b\u5e8f\u7ed3\u6784\u200b\u91cd\u6784\u200b\u6280\u672f\u200b\uff0c\u200b\u5229\u7528\u200bLLVM\u200b\u5c06\u200bC\u200b\u4ee3\u7801\u200b\u7ffb\u8bd1\u6210\u200bCoq\uff0c\u200b\u652f\u6301\u200b\u5b8c\u6574\u200b\u7684\u200bC\u200b\u8bed\u4e49\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6e90\u4ee3\u7801\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u4fee\u6539\u200b\u5373\u53ef\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u6b64\u5916\u200b\uff0cSpoq\u200b\u5229\u7528\u200b\u5206\u5c42\u200b\u8bc1\u660e\u200b\u7b56\u7565\u200b\uff0c\u200b\u5e76\u200b\u5f15\u5165\u200b\u4e86\u200b\u65b0\u200b\u7684\u200bCoq\u200b\u7b56\u7565\u200b\u548c\u200b\u8f6c\u6362\u89c4\u5219\u200b\uff0c\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u5c42\u200b\u89c4\u8303\u200b\u548c\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u7b80\u5316\u200b\u4e86\u200b\u5e76\u53d1\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u3002Spoq\u200b\u8fd8\u200b\u652f\u6301\u200b\u8f7b\u677e\u200b\u96c6\u6210\u200b\u624b\u52a8\u200b\u7f16\u5199\u200b\u7684\u200b\u5c42\u200b\u89c4\u8303\u200b\u548c\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#_2","title":"\u5f15\u8a00","text":"<p>\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\uff08\u200b\u5982\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u548c\u200b\u865a\u62df\u673a\u200b\uff09\u200b\u662f\u200b\u8ba1\u7b97\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u57fa\u7840\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u73b0\u4ee3\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u56e0\u200b\u5176\u200b\u89c4\u6a21\u200b\u5e9e\u5927\u200b\u3001\u200b\u7ed3\u6784\u590d\u6742\u200b\uff0c\u200b\u5b58\u5728\u200b\u8bb8\u591a\u200b\u53ef\u80fd\u200b\u88ab\u200b\u5229\u7528\u200b\u7684\u200b\u5b89\u5168\u6f0f\u6d1e\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e00\u200b\u95ee\u9898\u200b\uff0c\u200b\u5f62\u5f0f\u5316\u200b\u9a8c\u8bc1\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u6f5c\u5728\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u5b83\u200b\u901a\u8fc7\u200b\u6570\u5b66\u200b\u8bc1\u660e\u200b\u6765\u200b\u786e\u4fdd\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u80fd\u591f\u200b\u63d0\u4f9b\u200b\u5173\u952e\u200b\u7684\u200b\u5b89\u5168\u200b\u4fdd\u8bc1\u200b\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u529f\u80fd\u200b\u6b63\u786e\u6027\u200b\uff08\u200b\u5373\u200b\u8f6f\u4ef6\u200b\u5b9e\u73b0\u200b\u6ee1\u8db3\u200b\u5176\u200b\u89c4\u8303\u200b\uff09\u200b\u662f\u200b\u5f62\u5f0f\u5316\u200b\u9a8c\u8bc1\u200b\u4e2d\u200b\u6700\u200b\u5177\u6709\u200b\u6311\u6218\u6027\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u5b9e\u73b0\u200b\u7684\u200b\u590d\u6742\u6027\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u5b9e\u73b0\u200b\u901a\u5e38\u200b\u7528\u200bC\u200b\u8bed\u8a00\u200b\u7f16\u5199\u200b\uff0cC\u200b\u8bed\u8a00\u200b\u5177\u6709\u200b\u590d\u6742\u200b\u7684\u200b\u8bed\u4e49\u200b\u548c\u200b\u7279\u6027\u200b\uff0c\u200b\u8bb8\u591a\u200b\u7279\u6027\u200b\u4e0d\u200b\u88ab\u200b\u9a8c\u8bc1\u200b\u5de5\u5177\u200b\u652f\u6301\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u7528\u4e8e\u200b\u9a8c\u8bc1\u200b\u66f4\u200b\u9ad8\u7ea7\u522b\u200b\u5c5e\u6027\u200b\uff08\u200b\u5982\u200b\u5b89\u5168\u6027\u200b\uff09\u200b\u7684\u200b\u9ad8\u5c42\u200b\u89c4\u8303\u200b\u4e0e\u200b\u5b9e\u73b0\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u663e\u8457\u200b\u7684\u200b\u8bed\u4e49\u200b\u5dee\u8ddd\u200b\uff0c\u200b\u9700\u8981\u200b\u5927\u91cf\u200b\u7684\u200b\u624b\u52a8\u200b\u8bc1\u660e\u200b\u5de5\u4f5c\u200b\u6765\u200b\u5f25\u5408\u200b\u8fd9\u4e00\u200b\u5dee\u8ddd\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u529f\u80fd\u200b\u6b63\u786e\u6027\u200b\u6765\u200b\u786e\u4fdd\u200b\u8bc1\u660e\u200b\u9002\u7528\u200b\u4e8e\u200b\u5b9e\u9645\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5f62\u5f0f\u5316\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u4fdd\u8bc1\u200b\u5728\u5b9e\u8df5\u4e2d\u200b\u53ef\u80fd\u200b\u6beb\u65e0\u610f\u4e49\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e9b\u200b\u95ee\u9898\u200b\uff0c\u200b\u8bba\u6587\u200b\u63d0\u51fa\u200b\u4e86\u200bSpoq\u200b\u6846\u67b6\u200b\u3002Spoq\u200b\u65e8\u5728\u200b\u901a\u8fc7\u200b\u81ea\u52a8\u5316\u200bCoq\u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u6765\u200b\u964d\u4f4e\u200b\u8bc1\u660e\u200b\u6210\u672c\u200b\uff0c\u200b\u540c\u65f6\u200b\u786e\u4fdd\u200b\u6240\u6709\u200b\u8bc1\u660e\u200b\u90fd\u200b\u662f\u200b\u673a\u5668\u200b\u53ef\u200b\u68c0\u67e5\u200b\u7684\u200b\u3002Spoq\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u7b80\u5316\u200b\u529f\u80fd\u200b\u6b63\u786e\u6027\u200b\u7684\u200b\u6b63\u5f0f\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u4ee5\u200b\u964d\u4f4e\u200b\u8bc1\u660e\u200b\u6210\u672c\u200b\uff0c\u200b\u540c\u65f6\u200b\u786e\u4fdd\u200b\u6240\u6709\u200b\u8bc1\u660e\u200b\u90fd\u200b\u7531\u200b\u5b9a\u7406\u200b\u8bc1\u660e\u200b\u5668\u200b\u8fdb\u884c\u200b\u673a\u5668\u200b\u68c0\u67e5\u200b\uff0c\u200b\u5e76\u200b\u9a8c\u8bc1\u200b\u5230\u200b\u5b9e\u9645\u200b\u8f6f\u4ef6\u200b\u5b9e\u73b0\u200b\u3002Spoq\u200b\u64cd\u4f5c\u200b\u5728\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\u7684\u200b\u672a\u4fee\u6539\u200b\u7684\u200bC\u200b\u4ee3\u7801\u200b\u4e0a\u200b\uff0c\u200b\u5e76\u200b\u5229\u7528\u200bCoq\u200b\u8bc1\u660e\u200b\u52a9\u624b\u200b\u6765\u200b\u542f\u7528\u200b\u590d\u6742\u200b\u7cfb\u7edf\u200b\u7684\u200b\u673a\u5668\u200b\u53ef\u200b\u68c0\u67e5\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u5176\u200b\u5173\u952e\u200b\u7279\u6027\u200b\u662f\u200b\u901a\u8fc7\u200b\u81ea\u52a8\u5316\u200b\u7f16\u5199\u200bCoq\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u7684\u200b\u8bb8\u591a\u200b\u65b9\u9762\u200b\uff0c\u200b\u4f7f\u200bCoq\u200b\u66f4\u200b\u6613\u4e8e\u200b\u4f7f\u7528\u200b\u3002\u200b\u8fd9\u200b\u51cf\u5c11\u200b\u4e86\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u7f16\u5199\u200b\u7684\u200bCoq\u200b\u4ee3\u7801\u200b\u91cf\u200b\uff0c\u200b\u4ece\u800c\u200b\u663e\u8457\u200b\u964d\u4f4e\u200b\u4e86\u200b\u8fdb\u884c\u200b\u673a\u5668\u200b\u53ef\u200b\u68c0\u67e5\u200b\u9a8c\u8bc1\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002</p> <p>Spoq\u200b\u662f\u200b\u7b2c\u4e00\u4e2a\u200b\u80fd\u591f\u200b\u81ea\u52a8\u200b\u5c06\u200b\u672a\u4fee\u6539\u200b\u7684\u200bC\u200b\u7cfb\u7edf\u200b\u4ee3\u7801\u200b\uff08\u200b\u5982\u200bLinux\u200b\u5185\u6838\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7801\u200b\uff09\u200b\u7ffb\u8bd1\u6210\u200bCoq\u200b\u8868\u793a\u200b\u7684\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u4ee5\u524d\u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200bCompCert\u200b\u7684\u200bClightGen\uff0c\u200b\u5b83\u200b\u53ea\u200b\u652f\u6301\u200bC\u200b\u8bed\u8a00\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b50\u96c6\u200b\u3002\u200b\u4f7f\u7528\u200bClightGen\u200b\u7684\u200b\u7cfb\u7edf\u200b\uff08\u200b\u5982\u200bCertiKOS\uff09\u200b\u9700\u8981\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u4e4b\u524d\u200b\u5bf9\u7cfb\u7edf\u200b\u5b9e\u73b0\u200b\u8fdb\u884c\u200b\u5927\u91cf\u200b\u624b\u52a8\u200b\u4fee\u6539\u200b\uff0c\u200b\u989d\u5916\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6765\u200b\u5f00\u53d1\u200b\u548c\u200b\u7ef4\u62a4\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4ecd\u7136\u200b\u4e0d\u80fd\u200b\u4e3a\u200b\u5b9e\u9645\u200b\u8fd0\u884c\u200b\u7248\u672c\u200b\u63d0\u4f9b\u200b\u4efb\u4f55\u200b\u7ecf\u8fc7\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u4fdd\u8bc1\u200b\u3002Spoq\u200b\u901a\u8fc7\u200b\u5229\u7528\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\u7684\u200bClang\u200b\u7f16\u8bd1\u5668\u200b\u524d\u7aef\u200b\u89e3\u6790\u200bC\u200b\u4ee3\u7801\u200b\u5230\u200bLLVM\u200b\u7684\u200b\u72ec\u7acb\u200b\u4e8e\u200b\u8bed\u8a00\u200b\u7684\u200b\u4e2d\u95f4\u200b\u8868\u793a\u200b\uff08IR\uff09\u200b\u6765\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u3002Spoq\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u79cd\u200b\u65b0\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u91cd\u5efa\u200b\u6280\u672f\u200b\uff0c\u200b\u5c06\u200b\u63a7\u5236\u6d41\u200b\u56fe\u200b\uff08CFG\uff09\u200b\u8f6c\u6362\u200b\u56de\u200b\u4f7f\u7528\u200bif-then-else\u200b\u548c\u200b\u5faa\u73af\u200b\u8bed\u53e5\u200b\u7684\u200bCoq\u200b\u8868\u793a\u200b\uff0c\u200b\u8fd9\u200b\u66f4\u200b\u9002\u5408\u200b\u4e8e\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u4f7f\u200bSpoq\u200b\u80fd\u591f\u200b\u652f\u6301\u200b\u5b8c\u6574\u200b\u7684\u200bC\u200b\u8bed\u8a00\u200b\u8bed\u4e49\u200b\uff0c\u200b\u5305\u62ec\u200bGNU C\u200b\u7279\u5b9a\u200b\u6269\u5c55\u200b\u548c\u200b\u5185\u8054\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\uff0c\u200b\u540c\u65f6\u200b\u5de5\u4f5c\u200b\u4e0e\u200b\u4e3a\u200b\u81ea\u52a8\u200b\u7ffb\u8bd1\u200b\u5230\u200b\u53e6\u200b\u4e00\u79cd\u200b\u8868\u793a\u200b\u800c\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u5177\u6709\u200b\u6e05\u6670\u200b\u8bed\u4e49\u200b\u7684\u200bIR\u3002Spoq\u200b\u8fd8\u200b\u5229\u7528\u200b\u57fa\u4e8e\u200b\u5e76\u53d1\u200b\u8ba4\u8bc1\u200b\u62bd\u8c61\u200b\u5c42\u200b\uff08CCAL\uff09\u200b\u7684\u200b\u5206\u5c42\u200b\u8bc1\u660e\u200b\u7b56\u7565\u200b\uff0c\u200b\u5c06\u200b\u9a8c\u8bc1\u200b\u6a21\u5757\u5316\u200b\u548c\u200b\u5206\u89e3\u200b\u4e3a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u4f7f\u200b\u6bcf\u4e2a\u200b\u9a8c\u8bc1\u200b\u6b65\u9aa4\u200b\u66f4\u200b\u5bb9\u6613\u200b\u5b8c\u6210\u200b\u3002\u200b\u8fd9\u200b\u6d89\u53ca\u200b\u5230\u200b\u5b9a\u4e49\u200b\u5b9e\u73b0\u200b\u7684\u200b\u5c42\u6b21\u7ed3\u6784\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b\u5c42\u6b21\u200b\u7531\u200b\u4e00\u7ec4\u200b\u5b9a\u4e49\u200b\u5c42\u6b21\u200b\u63a5\u53e3\u200b\u7684\u200b\u51fd\u6570\u200b\u7ec4\u6210\u200b\u3002\u200b\u66f4\u200b\u9ad8\u5c42\u6b21\u200b\u53ef\u4ee5\u200b\u8c03\u7528\u200b\u8f83\u200b\u4f4e\u5c42\u6b21\u200b\u63a5\u53e3\u200b\u66b4\u9732\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u53cd\u5411\u200b\u8c03\u7528\u200b\u3002\u200b\u6700\u9ad8\u5c42\u200b\u662f\u200b\u6574\u4e2a\u200b\u5b9e\u73b0\u200b\u884c\u4e3a\u200b\u7684\u200b\u9ad8\u5c42\u200b\u89c4\u8303\u200b\uff0c\u200b\u800c\u200b\u5e95\u5c42\u200b\u662f\u200b\u4e00\u4e2a\u200b\u673a\u5668\u200b\u6a21\u578b\u200b\uff0c\u200b\u5176\u200b\u63a5\u53e3\u200b\u65e8\u5728\u200b\u652f\u6301\u200bLLVM IR\u200b\u8bed\u4e49\u200b\u3002\u200b\u9a8c\u8bc1\u200b\u6d89\u53ca\u200b\u8bc1\u660e\u200b\u5c42\u6b21\u200b\u7ec4\u5408\u200b\u5730\u200b\u7cbe\u70bc\u200b\u4e86\u200b\u6574\u4e2a\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6700\u4e0a\u5c42\u200b\u89c4\u8303\u200b\u3002</p> <p>\u200b\u5c3d\u7ba1\u200bSpoq\u200b\u4f9d\u8d56\u4e8e\u200b\u672a\u7ecf\u200b\u9a8c\u8bc1\u200b\u7684\u200bClang\uff0c\u200b\u4f46\u200b\u5927\u591a\u6570\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u5df2\u7ecf\u200b\u9700\u8981\u200b\u4fe1\u4efb\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\u7684\u200bClang\u200b\u6216\u200b\u672a\u7ecf\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u66ff\u4ee3\u54c1\u200b\uff0c\u200b\u5982\u200bGNU C\u200b\u7f16\u8bd1\u5668\u200b\uff0c\u200b\u4ee5\u200b\u751f\u6210\u200b\u5b9e\u9645\u200b\u8fd0\u884c\u200b\u7684\u200b\u53ef\u200b\u6267\u884c\u200b\u4ee3\u7801\u200b\u3002Spoq\u200b\u5c1a\u672a\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u90e8\u5206\u200b\u9700\u8981\u200b\u4fe1\u4efb\u200b\u7684\u200b\u662f\u200b\u5176\u200b\u4ece\u200bLLVM IR\u200b\u5230\u200bCoq\u200b\u7684\u200b\u7ffb\u8bd1\u5668\u200b\uff0c\u200b\u8fd9\u90e8\u5206\u200b\u8bbe\u8ba1\u200b\u5f97\u200b\u975e\u5e38\u200b\u5c0f\u200b\u3002\u200b\u8fd9\u4e2a\u200bTCB\u200b\u6bd4\u200bCompCert\u200b\u7684\u200bClightGen\u200b\u5c0f\u5f97\u591a\u200b\uff0c\u200b\u540e\u8005\u200b\u66f4\u5927\u4e14\u200b\u66f4\u200b\u590d\u6742\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u9700\u8981\u200b\u76f4\u63a5\u200b\u89e3\u6790\u200b\u548c\u200b\u7ffb\u8bd1\u200bC\u200b\u4ee3\u7801\u200b\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u56f0\u96be\u200b\u548c\u200b\u6d89\u53ca\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u8bba\u6587\u200b\u8fd8\u200b\u63d0\u5230\u200b\u4e86\u200bSpoq\u200b\u5728\u200b\u5546\u54c1\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u4e0a\u200b\u7684\u200b\u5b9e\u73b0\u200b\u548c\u200b\u8bc4\u4f30\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200bSpoq\u200b\u5728\u200b\u5c06\u200bC\u200b\u7cfb\u7edf\u200b\u4ee3\u7801\u200b\u8f6c\u6362\u200b\u4e3a\u200bCoq\u200b\u8868\u793a\u200b\u65b9\u9762\u200b\u7684\u200b\u6709\u6548\u6027\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u591a\u5904\u7406\u5668\u200bKVM\u200b\u865a\u62df\u673a\u200b\u5b9e\u73b0\u200b\u65f6\u200b\u51cf\u5c11\u200b\u624b\u52a8\u200b\u8bc1\u660e\u200b\u5de5\u4f5c\u91cf\u200b\u7684\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#spoq-usage-model","title":"Spoq Usage Model","text":"<p>\u200b\u8981\u200b\u5229\u7528\u200bSpoq\u200b\u8fdb\u884c\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u9996\u5148\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5c06\u200b\u6e90\u4ee3\u7801\u200b\u7f16\u8bd1\u6210\u200bLLVM\u200b\u4e2d\u95f4\u200b\u8868\u793a\u200b\uff08IR\uff09\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u8bed\u8a00\u200b\u65e0\u5173\u200b\u7684\u200b\u4e2d\u95f4\u4ee3\u7801\u200b\u5f62\u5f0f\u200b\u3002\u200b\u63a5\u7740\u200b\uff0c\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u5c42\u6b21\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff08\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u5c42\u6b21\u7ed3\u6784\u200b\uff09\u3002\u200b\u5206\u5c42\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u5c06\u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u6a21\u5757\u5316\u200b\uff0c\u200b\u786e\u4fdd\u200b\u6bcf\u4e2a\u200b\u5c42\u6b21\u200b\u7684\u200b\u51fd\u6570\u200b\u53ea\u80fd\u200b\u8c03\u7528\u200b\u66f4\u200b\u4f4e\u5c42\u6b21\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5982\u679c\u200b\u6e90\u4ee3\u7801\u200b\u4e2d\u6709\u200b\u4e09\u4e2a\u200b\u51fd\u6570\u200bA\u3001B\u200b\u548c\u200bC\uff0c\u200b\u5176\u4e2d\u200bA\u200b\u8c03\u7528\u200bB\uff0cB\u200b\u8c03\u7528\u200bC\uff0c\u200b\u90a3\u4e48\u200b\u81f3\u5c11\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b\u4e09\u4e2a\u200b\u5c42\u6b21\u200b\u3002</p> <p>\u200b\u5c42\u6b21\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\u4e86\u200b\u6bcf\u4e2a\u200b\u5c42\u6b21\u200b\u7684\u200b\u540d\u79f0\u200b\u3001\u200b\u6bcf\u4e2a\u200b\u5c42\u6b21\u200b\u4e2d\u200b\u51fd\u6570\u200b\u7684\u200b\u540d\u79f0\u200b\u3001\u200b\u6e90\u200bIR\u200b\u4ee3\u7801\u200b\u7684\u200b\u8def\u5f84\u200b\u4ee5\u53ca\u200bCoq\u200b\u9879\u76ee\u200b\u7684\u200b\u8def\u5f84\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fd8\u5e94\u200b\u5305\u62ec\u200b\u5e95\u5c42\u200b\u62bd\u8c61\u200b\u673a\u5668\u200b\u6a21\u578b\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5305\u62ec\u200b\u673a\u5668\u200b\u72b6\u6001\u200b\u7684\u200b\u5b9a\u4e49\u200b\u3002Spoq\u200b\u6839\u636e\u200b\u8fd9\u4e2a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u751f\u6210\u200bCoq\u200b\u9879\u76ee\u200b\uff0c\u200b\u5305\u62ec\u200b\u6240\u6709\u200b\u5c42\u6b21\u200b\u7684\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u3002\u200b\u5982\u679c\u200b\u6e90\u4ee3\u7801\u200b\u6216\u200b\u5c42\u6b21\u7ed3\u6784\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u91cd\u65b0\u200b\u8fd0\u884c\u200bSpoq\u200b\u6765\u200b\u66f4\u65b0\u200bCoq\u200b\u9879\u76ee\u200b\uff0cSpoq\u200b\u4f1a\u200b\u6839\u636e\u200b\u53d8\u5316\u200b\u91cd\u65b0\u200b\u751f\u6210\u200b\u53d7\u200b\u5f71\u54cd\u200b\u90e8\u5206\u200b\u7684\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u3002</p> <p>Spoq\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u5141\u8bb8\u200b\u7528\u6237\u200b\u8f7b\u677e\u200b\u96c6\u6210\u200b\u624b\u52a8\u200b\u7f16\u5199\u200b\u7684\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u3002\u200b\u5982\u679c\u200bSpoq\u200b\u751f\u6210\u200b\u7684\u200b\u67d0\u4e2a\u200b\u5c42\u6b21\u200b\u7684\u200b\u89c4\u8303\u200b\u4e0d\u591f\u200b\u7b80\u6d01\u200b\u6216\u200b\u7cbe\u70bc\u200b\u8bc1\u660e\u200b\u5931\u8d25\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u7f16\u5199\u200b\u89c4\u8303\u200b\u6216\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u5c42\u6b21\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6ce8\u91ca\u200b\uff0c\u200b\u4ee5\u4fbf\u200bSpoq\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u7684\u200b\u89c4\u8303\u200b\u6216\u200b\u8bc1\u660e\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u4f7f\u5f97\u200bSpoq\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u529f\u80fd\u200b\u6b63\u786e\u6027\u200b\u65f6\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u9876\u5c42\u200b\u89c4\u8303\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5b9e\u73b0\u200b\u6ee1\u8db3\u200b\u89c4\u8303\u200b\u3002\u200b\u9664\u6b64\u4e4b\u5916\u200b\uff0cSpoq\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u9a8c\u8bc1\u200b\u66f4\u200b\u9ad8\u7ea7\u200b\u7684\u200b\u7cfb\u7edf\u200b\u5c5e\u6027\u200b\uff0c\u200b\u5982\u200b\u5b89\u5168\u6027\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bSpoq\u200b\u751f\u6210\u200b\u7684\u200b\u9876\u5c42\u200b\u89c4\u8303\u200b\u6765\u200b\u9a8c\u8bc1\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6574\u4f53\u200b\u5b89\u5168\u200b\u5c5e\u6027\u200b\uff0c\u200b\u786e\u4fdd\u200b\u8fd9\u4e9b\u200b\u5c5e\u6027\u200b\u5728\u200b\u5b9e\u9645\u200b\u8fd0\u884c\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u5b9e\u73b0\u200b\u4e0a\u200b\u6210\u7acb\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#spoq","title":"Spoq\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b","text":"<p>Spoq\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6d41\u7a0b\u56fe\u200b\u5982\u4e0b\u200b: </p> <p>\u200b\u9996\u5148\u200bSpoq\u200b\u9700\u8981\u200b\u5c06\u200b\u7a0b\u5e8f\u8f6c\u6362\u200b\u4e3a\u200bCoq\u200b\u8868\u793a\u200b\u7684\u200b\u62bd\u8c61\u200b\u8bed\u6cd5\u200b\u6811\u200b\uff08AST\uff09\uff0c\u200b\u5bf9\u5e94\u200b\u56fe\u4e2d\u200b\u7684\u200b\u6b65\u9aa4\u200b1\u3002\u200b\u57fa\u4e8e\u200bClang\u200b\u7f16\u8bd1\u5668\u200b\uff0cSpoq\u200b\u53ef\u4ee5\u200b\u5c06\u200bC\u200b\u4ee3\u7801\u200b\u8f6c\u6362\u200b\u4e3a\u200bLLVM\u200b\u7684\u200b\u4e2d\u95f4\u200b\u8868\u793a\u200b(Intermediate Representation)\uff0c\u200b\u8fd9\u4e00\u200b\u4e2d\u95f4\u200b\u8868\u793a\u200b\u5c06\u200b\u7a0b\u5e8f\u200b\u8868\u793a\u200b\u4e3a\u200b\u7531\u200b\u591a\u4e2a\u200b\u51fd\u6570\u200b\u57fa\u672c\u5757\u200b\u7ec4\u5408\u800c\u6210\u200b\u7684\u200b\u63a7\u5236\u6d41\u200b\u56fe\u200b(CFG)\u3002Spoq\u200b\u63a5\u7740\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u79cd\u200b\u65b0\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5c06\u200bLLVM IR\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u4ee3\u7801\u200b\u5757\u200b\u5408\u5e76\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200bif-then-else\u3001loop\u3001continue\u3001break\u200b\u548c\u200breturn\u200b\u8bed\u53e5\u200b\u91cd\u5efa\u200b\u7a0b\u5e8f\u7ed3\u6784\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u6ca1\u6709\u200b\u5faa\u73af\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0cSpoq\u200b\u57fa\u4e8e\u200b\u56db\u6761\u200b\u57fa\u672c\u200b\u89c4\u5219\u200b\u4ece\u200bCFG\u200b\u91cd\u6784\u200b\u7a0b\u5e8f\u200b\u3002\u200b\u800c\u200b\u5bf9\u4e8e\u200b\u6709\u200b\u5faa\u73af\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0cSpoq\u200b\u5148\u200b\u8ba1\u7b97\u200b\u5176\u5f3a\u200b\u8054\u901a\u200b\u5206\u91cf\u200b\uff08SCC\uff09\uff0c\u200b\u518d\u200b\u57fa\u4e8e\u200b\u56db\u6761\u200b\u9644\u52a0\u200b\u91cd\u5199\u200b\u89c4\u5219\u200b\u5c06\u200b\u5176\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e0e\u200b\u5faa\u73af\u200b\u76f8\u5173\u200b\u7684\u200b\u8bed\u53e5\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\uff1a </p> <p>Spoq\u200b\u8fd8\u200b\u901a\u8fc7\u200b\u5c06\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6c47\u7f16\u200b\u6307\u4ee4\u200b\uff0c\u200b\u8f6c\u6362\u200b\u4e3a\u200bCoq\u200b\u8868\u793a\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5904\u7406\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\u3002\u200b\u5e76\u4e14\u200b\u901a\u8fc7\u200b\u5c06\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\u63d0\u53d6\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5355\u72ec\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0cSpoq\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5185\u8054\u200b\u6c47\u7f16\u200b\u4e0e\u200bLLVM IR \u200b\u89e3\u200b\u8026\u200b\u3002</p> <p>\u200b\u4e4b\u540e\u200b\uff0cSpoq\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u5c42\u200b\uff08layer\uff09\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9a\u4e49\u200b\u6240\u6709\u200b\u7684\u200b\u5c42\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u4e0d\u540c\u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u5728\u200b\u54ea\u5c42\u200b\u88ab\u200b\u8bc1\u660e\u200b\uff0c\u200b\u6700\u7ec8\u200b\u53ef\u4ee5\u200b\u57fa\u4e8e\u200bCCALs\u200b\u6784\u5efa\u200b\u673a\u68b0\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u56fe\u4e2d\u200b\u6b65\u9aa4\u200b2\uff0c\u200b\u5176\u200b\u8bc1\u660e\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u8868\u660e\u200b\u6784\u9020\u200b\u5728\u200b\u5e95\u5c42\u200b\u63a5\u53e3\u200b \\(L\\) \u200b\u4e4b\u4e0a\u200b\u7684\u200b\u5b9e\u73b0\u200b \\(M\\)\uff0c\u200b\u57fa\u4e8e\u200b\u7cbe\u5316\u200b\u5173\u7cfb\u200b\uff08refinement relation\uff09\\(R\\) \u200b\u7cbe\u5316\u200b\uff08refine\uff09\\(L^{'}\\)\u3002</p> \\[ M @ L\\sqsubseteq_{R} L^{'} \\] <p>Spoq\u200b\u4f1a\u4e3a\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u751f\u6210\u200b\u4f4e\u9636\u200bspecification\u200b\u548c\u200b\u7ec6\u8282\u200b\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\u6d41\u7a0b\u56fe\u200b\u4e2d\u200b\u6b65\u9aa4\u200b3\u3002\u200b\u5bf9\u4e8e\u200b\u6ca1\u6709\u200b\u5faa\u73af\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u8fd9\u4e00\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u76f4\u63a5\u200b\u7684\u200b\u3002\u200b\u800c\u200b\u5bf9\u4e8e\u200b\u6709\u200b\u5faa\u73af\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0cSpoq\u200b\u8981\u6c42\u200b\u7528\u6237\u200b\u5bf9\u200b\u5faa\u73af\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u975e\u8d1f\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u5faa\u73af\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5355\u8c03\u200b\u9012\u51cf\u200b\u7684\u200b\u6392\u5e8f\u200b\u51fd\u6570\u200b\u3002\u200b\u4ece\u800c\u200b\u4f7f\u7528\u200bCoq\u200b\u4e2d\u200b\u7684\u200bFixpoint\u200b\u6784\u9020\u200b\uff0c\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u9012\u5f52\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u4f4e\u9636\u200bspecification\u3002Spoq\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u7684\u200b\u5f52\u7eb3\u200b\u6a21\u677f\u200b\u4ee5\u200b\u751f\u6210\u200b\u6700\u7ec8\u200b\u7684\u200brefinement\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u6d41\u7a0b\u56fe\u200b\u4e2d\u200b\u7684\u200b\u6b65\u9aa4\u200b4\u3002</p> <p>Spoq\u200b\u540c\u6837\u200b\u4f1a\u200b\u5bf9\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u751f\u6210\u200b\u9ad8\u9636\u200bspecification\uff0c\u200b\u5e76\u200b\u63d0\u5347\u200b\u5176\u200brefinement proof\uff0c\u200b\u5bf9\u5e94\u200b\u6d41\u7a0b\u56fe\u200b\u4e2d\u200b\u7684\u200b\u6b65\u9aa4\u200b5-6\u3002\u200b\u5f53\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u6570\u636e\u62bd\u8c61\u200b\u6765\u200b\u9690\u85cf\u200b\u4f4e\u9636\u200b\u6570\u636e\u200b\u7684\u200b\u8868\u793a\u200b\u7ec6\u8282\u200b\uff0c\u200b\u4ee5\u200b\u7b80\u5316\u200b\u9ad8\u9636\u200b\u7684\u200b\u8bc1\u660e\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u4e00\u200b\u8fc7\u7a0b\u200b\u53ef\u4ee5\u200b\u81ea\u52a8\u200b\u5b8c\u6210\u200b\u3002\u200b\u800c\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u6570\u636e\u62bd\u8c61\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u7528\u6237\u200b\u5b9a\u5236\u200b\u7cbe\u5316\u200b\u5173\u7cfb\u200b\uff08refinement relation\uff09\uff0c\u200b\u5b9a\u4e49\u200b\u62bd\u8c61\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u624b\u52a8\u200b\u8bc1\u660e\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#_3","title":"\u4f8b","text":"<p>Spoq\u200b\u5c06\u5c42\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u4f7f\u7528\u200bccal\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u673a\u5668\u200b\u53ef\u200b\u68c0\u67e5\u200b\u7684\u200b\u8bc1\u660e\u200b\u5bf9\u8c61\u200b \\(M @ L\\sqsubseteq_{R} L^{'}\\)\u200b\u663e\u793a\u200b\u4e86\u200b\u5efa\u7acb\u200b\u5728\u200b\u5e95\u5c42\u200b\u63a5\u53e3\u200b \\(L\\)\u200b\u4e4b\u4e0a\u200b\u7684\u200b\u5b9e\u73b0\u200b \\(M\\)\uff0c\u200b\u901a\u8fc7\u200b\u7ec6\u5316\u200b\u5173\u7cfb\u200b \\(R\\)\u200b\u5bf9\u63a5\u53e3\u200b \\(L^{'}\\)\u200b\u8fdb\u884c\u200b\u7ec6\u5316\u200b\u3002 \u200b\u5c42\u200b\u7ed3\u6784\u200b\u5047\u5b9a\u200b\u5e95\u5c42\u200b\u4e3a\u200b\u673a\u5668\u200b\u6a21\u578b\u200b \\(L_{0}\\)\uff0cSpoq\u200b\u901a\u8fc7\u200b\u8bc6\u522b\u200b\u6e90\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5168\u5c40\u200b\u5185\u5b58\u200b\u5bf9\u8c61\u200b\u5e76\u200b\u5728\u200bCoq\u200b\u4e2d\u200b\u751f\u6210\u200b\u76f8\u5e94\u200b\u7684\u200b\u673a\u5668\u200b\u72b6\u6001\u200b\u6765\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u8be5\u200b\u6a21\u578b\u200b\u3002Spoq\u200b\u8fd8\u200b\u4e3a\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u751f\u6210\u200b\u5185\u5b58\u200bload/store\u200b\u539f\u8bed\u200b(primitives)\u3002\u200b\u539f\u8bed\u200b\u4ee5\u200b\u5185\u5b58\u200b\u6307\u9488\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u504f\u79fb\u91cf\u200b\u8ba1\u7b97\u200b\u8981\u200b\u8bbf\u95ee\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u548c\u200b\u7ed3\u6784\u200b\u5143\u7d20\u200b\u3002\u200b\u8fd8\u200b\u5305\u62ec\u200b\u7d22\u5f15\u200b\u8fb9\u754c\u200b\u548c\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u68c0\u67e5\u200b\u3002 <pre><code>// Layer interface L1\nuint page[MAX_PAGE];\nuint get_page (uint i) { return page[i] }\nvoid set_page (uint i, uint s) { page[i] = s; }\n// Layer interface L2\n#define ALLOC() ({ \n    uint i; \n    for (i = 0; i &lt; MAX_PAGE; i++){ \n        if (get_page(i) == 0) { \n            set_page(i, 1); \n            break; \n        } \n    } \n    i;})\nuint alloc() { return ALLOC(); }\n</code></pre> \u200b\u5b83\u200b\u5c06\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200bCCAL\" \\(M_{page}@L_{0} \\sqsubseteq_{R_{1}} L_{1}\\) \"\uff0c\u200b\u5c06\u200b\u9875\u9762\u200b\u6570\u7ec4\u200b\u62bd\u8c61\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u4ece\u200b\u81ea\u7136\u6570\u200b\u5230\u200b\u6574\u6570\u200b\u7684\u200bCoq Map\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5b83\u200b\u7684\u200b\u5143\u7d20\u200b\u53ea\u80fd\u200b\u5206\u522b\u200b\u901a\u8fc7\u200bgetter\u200b\u548c\u200bsetter\u200b\u65b9\u6cd5\u200bget_page\u200b\u548c\u200bset_page\u200b\u6765\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u800c\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b\u4efb\u610f\u200b\u7684\u200b\u5185\u5b58\u200b\u64cd\u4f5c\u200b\u6765\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u8fd9\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u610f\u60f3\u4e0d\u5230\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002\u200b\u7ec6\u5316\u200b\u5173\u7cfb\u200bR1\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5982\u4f55\u200b\u5c06\u200b\u9875\u9762\u200b\u6570\u7ec4\u200b\u62bd\u8c61\u200b\u5230\u200bMap\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u4f7f\u7528\u200bMap\u200b\u5bf9\u8c61\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200bCCAL\" \\(M_{malloc}@L_{1} \\sqsubseteq_{id} L_{2}\\)\"\u200b\u6765\u200b\u9a8c\u8bc1\u200bL1\u200b\u4e4b\u4e0a\u200b\u7684\u200balloc\u200b\u51fd\u6570\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u62c5\u5fc3\u200bpage\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u3002\u200b\u8fd9\u91cc\u200b\uff0cid\u200b\u662f\u200b\u4e00\u4e2a\u200b\u76f8\u540c\u200b\u7684\u200b\u7ec6\u5316\u200b\u5173\u7cfb\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5728\u200b\u9a8c\u8bc1\u200balloc\u200b\u65f6\u200b\u4e0d\u200b\u9700\u8981\u200b\u6570\u636e\u62bd\u8c61\u200b(\u200b\u540e\u9762\u200b5-6)\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#3-4","title":"\u89c4\u8303\u200b\u548c\u200b\u7ec6\u5316\u200b\u8bc1\u660e\u200b\u6b65\u9aa4\u200b3-4\uff1a","text":"<p>Spoq\u200b\u4f1a\u4e3a\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u751f\u6210\u200b\u4f4e\u9636\u200b\u89c4\u8303\u200b\u548c\u200b\u7ec6\u8282\u200b\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\u6d41\u7a0b\u56fe\u200b\u4e2d\u200b\u6b65\u9aa4\u200b3\u3002\u200b\u5bf9\u4e8e\u200b\u6ca1\u6709\u200b\u5faa\u73af\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u8fd9\u4e00\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u76f4\u63a5\u200b\u5f97\u5230\u200b\u7684\u200b\u3002\u200b\u800c\u200b\u5bf9\u4e8e\u200b\u6709\u200b\u5faa\u73af\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0cSpoq\u200b\u8981\u6c42\u200b\u7528\u6237\u200b\u5bf9\u200b\u5faa\u73af\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u975e\u8d1f\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u5faa\u73af\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5355\u8c03\u200b\u9012\u51cf\u200b\u7684\u200b\u6392\u5e8f\u200b\u51fd\u6570\u200b\u3002\u200b\u4ece\u800c\u200b\u4f7f\u7528\u200bCoq\u200b\u4e2d\u200b\u7684\u200bFixpoint\u200b\u51fd\u6570\u200b\u7ed3\u6784\u200b\u4f53\u200b\u6784\u9020\u200b\uff0c\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u9012\u5f52\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u4f4e\u9636\u200b\u89c4\u8303\u200b\u3002Spoq\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u7684\u200b\u5f52\u7eb3\u200b\u6a21\u677f\u200b\u4ee5\u200b\u751f\u6210\u200b\u6700\u7ec8\u200b\u7684\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u6d41\u7a0b\u56fe\u200b\u4e2d\u200b\u7684\u200b\u6b65\u9aa4\u200b4\u3002</p> <p>\u200b\u5229\u7528\u200b\u91cd\u6784\u200b\u7684\u200b\u7a0b\u5e8f\u7ed3\u6784\u200b\uff0cSpoq\u200b\u7b80\u5355\u200b\u5730\u200b\u626b\u63cf\u200bCoq AST\u200b\u8868\u793a\u200b\uff0c\u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200b\u8bed\u53e5\u200b\u5f00\u59cb\u200b\u8fdb\u884c\u200b\u6848\u4f8b\u200b\u5206\u6790\u200b\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\u7684\u200bLLVM IR\u200b\u8bed\u4e49\u200b\u751f\u6210\u200b\u76f8\u5e94\u200b\u7684\u200bCoq\u200b\u5b9a\u4e49\u200b\u4f5c\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u3002\u200b\u4e0b\u9762\u200b\u662f\u200b\u8d4b\u503c\u200b\u548c\u200b\u5206\u652f\u200b\u8bed\u53e5\u200b\u7684\u200b\u4e00\u5c0f\u200b\u6bb5\u200bPython\u200b\u4f2a\u200b\u4ee3\u7801\u200b:</p> <pre><code>def spec_gen (ast, spec):\n    for n in range(len(ast)):\n        i = ast[n]\n        if isinstance(i, IAssign): # Assignment case\n            s = f\"let {coq_name(i.asg)} := {val(i.v)} in\"\n            spec.append(s)\n        elif isinstance(i, IIf): # Branch case\n            spec.append(f\"if {coq_name(i.cond)} then\")\n            spec_gen(i.true_body + ast[n+1:], spec)\n            spec.append(f\"else\")\n            spec_gen(i.false_body + ast[n+1:], spec)\n    ...\n</code></pre> <p>Spoq\u200b\u4f7f\u7528\u200bCoq\u200b\u4e2d\u200b\u7684\u200b\u9012\u5f52\u200bFixpoint\u200b\u6784\u9020\u200b\u4e3a\u200b\u5faa\u73af\u200b\u751f\u6210\u200b\u4f4e\u7ea7\u200b\u89c4\u8303\u200b\u3002Fixpoint\u200b\u5b9a\u4e49\u200b\u9700\u8981\u200b\u9012\u51cf\u200b\u53c2\u6570\u200b\uff0c\u200b\u5176\u200b\u7c7b\u578b\u200b\u4e3a\u200b \\(Nat\\)\uff0c\u200b\u6bcf\u6b21\u200b\u9012\u5f52\u200b\u8c03\u7528\u51fd\u6570\u200b\u65f6\u200b\u9012\u51cf\u200b\u3002Spoq\u200b\u8981\u6c42\u200b\u7528\u6237\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u5faa\u73af\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u6392\u5e8f\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u9012\u51cf\u200b\u53c2\u6570\u200b\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u5b83\u200b\u901a\u8fc7\u200b\u586b\u5145\u200b\u4e0b\u9762\u200b\u6a21\u677f\u200b\u4e2d\u200b\u6807\u8bb0\u200b\u4e3a\u200b{{}}\u200b\u7684\u200b\u90e8\u5206\u200b\u6765\u200b\u751f\u6210\u200b\u5faa\u73af\u200b\u7684\u200b\u4f4e\u7ea7\u200b\u89c4\u8303\u200b:</p> <pre><code>Fixpoint _loop (n: nat) (bk rt: bool) {{Vi Vo}} st:=\n    match n with\n    | O =&gt; Some (bk, rt, {{Vo}}, st)\n    | S n\u2019 =&gt;\n        match _loop n\u2019 bk rt {{Vi Vo}} st with\n        | Some (bk\u2019, rt\u2019, {{Vo\u2019}}, st\u2019) =&gt;\n            if bk\u2019 then Some (bk\u2019, rt\u2019, {{Vo\u2019}}, st\u2019)\n            else if rt\u2019 then Some (bk\u2019, rt\u2019, {{Vo\u2019}}, st\u2019)\n            else {{low-level spec of the loop body}}\n        | _ =&gt; None\n        end\n    end.\n Definition _low {{args}} (st: ST):=\n    {{low-level spec before the loop}}\n    let n := {{rank i_Vi}} in\n    match _loop n false false {{i_Vi i_Vo}} st with\n    | Some (bk, rt, {{Vo}}, st\u2019) =&gt;\n        if rt then Some ({{Vo}}, st\u2019)\n        else {{low-level spec after the loop}}\n    | _ =&gt; None\n    end.\n</code></pre>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#_4","title":"\u8f6c\u6362\u89c4\u5219","text":"<p>\u200b\u8f6c\u6362\u89c4\u5219\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u7b80\u5316\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u63a7\u5236\u6d41\u200b\u5e76\u200b\u6d88\u9664\u200b\u5c3d\u53ef\u80fd\u200b\u591a\u200b\u7684\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002 Spoq\u200b\u540c\u6837\u200b\u4f1a\u200b\u5bf9\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u751f\u6210\u200b\u9ad8\u9636\u200b\u89c4\u8303\u200b\uff0c\u200b\u63d0\u5347\u200b\u5176\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u6d41\u7a0b\u56fe\u200b\u4e2d\u200b\u7684\u200b\u6b65\u9aa4\u200b5-6\u3002\u200b\u5f53\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u6570\u636e\u62bd\u8c61\u200b\u6765\u200b\u9690\u85cf\u200b\u4f4e\u9636\u200b\u6570\u636e\u200b\u7684\u200b\u8868\u793a\u200b\u7ec6\u8282\u200b\uff0c\u200b\u4ee5\u200b\u7b80\u5316\u200b\u9ad8\u9636\u200b\u7684\u200b\u8bc1\u660e\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u4e00\u200b\u8fc7\u7a0b\u200b\u53ef\u4ee5\u200b\u81ea\u52a8\u200b\u5b8c\u6210\u200b\u3002\u200b\u800c\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u6570\u636e\u62bd\u8c61\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u7528\u6237\u200b\u624b\u52a8\u200b\u5b9a\u5236\u200b\u7cbe\u5316\u200b\u5173\u7cfb\u200b\uff08refinement relation\uff09\uff0c\u200b\u5b9a\u4e49\u200b\u62bd\u8c61\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u624b\u52a8\u200b\u8bc1\u660e\u200b\u3002 \u200b\u6570\u636e\u62bd\u8c61\u200b\uff1a Spoq\u200b\u5c06\u5c42\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4f7f\u7528\u200bccal\u200b\u6269\u5c55\u200b\u6784\u9020\u200b\u673a\u68b0\u5316\u200b\u8bc1\u660e\u200b\u3002\u200b\u4f8b\u5982\u200b\u56fe\u4e2d\u200b\u7684\u200b\u5c42\u200b\u914d\u7f6e\u200b\u8fd0\u884c\u200b\u793a\u4f8b\u200b\u5b9a\u4e49\u200bget / set_page\u200b\u5e94\u8be5\u200b\u9a8c\u8bc1\u200b \\(L_{0}\\)\u200b\u5c42\u200b\u4e4b\u4e0a\u200b,\u200b\u800c\u200balloc\u200b\u5e94\u200b\u9a8c\u8bc1\u200b\u5c42\u200b \\(L_{1}\\) <pre><code>// Layer interface L1\nuint page[MAX_PAGE];\nuint get_page (uint i) { return page[i] }\nvoid set_page (uint i, uint s) { page[i] = s; }\n// Layer interface L2\n#define ALLOC() ({ \n    uint i; \n    for (i = 0; i &lt; MAX_PAGE; i++){ \n        if (get_page(i) == 0) { \n            set_page(i, 1); \n            break; \n        } \n    } \n    i;})\nuint alloc() { return ALLOC(); }\n</code></pre> \u200b\u4f8b\u5982\u200b \\(L_{1}\\)\u200b\u5c42\u200b\u5c06\u200b\u6570\u7ec4\u200b\u201cpage\u201d\u200b\u62bd\u8c61\u200b\u4e3a\u200bCoq Map\u200b\u7c7b\u578b\u200bst.page\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5e95\u5c42\u200b \\(L_{0}\\)\u200b\u7684\u200b\u673a\u5668\u200b\u6a21\u578b\u200b\u63d0\u4f9b\u200b\u7684\u200b\u5185\u5b58\u200b\u64cd\u4f5c\u200bload_mem\u200b\u548c\u200bstore_mem\u200b\u62bd\u8c61\u200b\u4e3a\u200b\u5e26\u6709\u200b\u8fb9\u754c\u200b\u68c0\u67e5\u200b\u7684\u200bMap\u200b\u64cd\u4f5c\u200b(st.page#i\u200b\u548c\u200bst.page#i&lt;-s):\u200b\u7531\u4e8e\u200b\u6570\u636e\u62bd\u8c61\u200b\uff0c\u200b\u5c42\u200b \\(L_{1}\\)\u200b\u7684\u200b\u63d0\u5347\u200b\u7cbe\u5316\u200b\u8bc1\u660e\u200b\u4e0d\u662f\u200b\u81ea\u52a8\u5316\u200b\u7684\u200b\uff0c\u200b\u5fc5\u987b\u200b\u624b\u52a8\u200b\u63d0\u4f9b\u200b\u3002\u200b\u53e6\u4e00\u65b9\u9762\u200b\uff0c \\(L_{2}\\)\u200b\u5c42\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u6570\u636e\u62bd\u8c61\u200b\u3002\u200b\u5bf9\u4e8e\u200b \\(L_{2}\\)\u200b\u5c42\u200b\uff0cSpoq\u200b\u901a\u8fc7\u200b\u5e94\u7528\u200b\u4e00\u7cfb\u5217\u200b\u8f6c\u6362\u89c4\u5219\u200b(\u200b\u5305\u62ec\u200b\u5c55\u5f00\u200b\u5b9a\u4e49\u200b\u3001\u200b\u5408\u5e76\u200b\u51e0\u4e4e\u200b\u91cd\u590d\u200b\u7684\u200b\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\u3001\u200b\u6d88\u9664\u200b\u9884\u5148\u786e\u5b9a\u200b\u7684\u200b\u5206\u652f\u200b\u548c\u200b\u65ad\u8a00\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u6267\u884c\u200b\u6570\u5b66\u200b\u7b80\u5316\u200b)\uff0c\u200b\u81ea\u52a8\u200b\u4ece\u200b\u4f4e\u7ea7\u200b\u89c4\u8303\u200b\u751f\u6210\u200b\u9ad8\u7ea7\u200b\u89c4\u8303\u200b\u3002 <pre><code>(* Low-level specifications *)\nDefinition get_page_low (i: nat) (st: ST) :=\n    load_mem st (\"page\", i * 4) u32.\nDefinition set_page_low (i s: nat) (st: ST) :=\n    store_mem st (\"page\", i * 4) s u32.\n(* High-level specifications in L1 *)\nDefinition get_page_high (i: nat) (st: ST) :=\n    if 0 &lt;=i&lt; MAX_PAGE then Some st.page#i else None.\nDefinition set_page_high (i s: nat) (st: ST) :=\n    if 0 &lt;=i&lt; MAX_PAGE then Some st.page#i&lt;-s else None.\n</code></pre> Spoq\u200b\u901a\u8fc7\u200b\u5c06\u200b\u4e00\u7ec4\u200b\u8f6c\u6362\u89c4\u5219\u200b\u5e94\u7528\u200b\u4e8e\u200b\u4f4e\u7ea7\u200b\u89c4\u8303\u200b\u6765\u200b\u751f\u6210\u200b\u9ad8\u7ea7\u200b\u89c4\u8303\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u200b\u4f4e\u7ea7\u200b\u89c4\u8303\u200b\u81ea\u200b\u5305\u542b\u200b\u4e14\u200b\u7b80\u5355\u200b\u3002Spoq\u200b\u4f7f\u7528\u200b12\u200b\u4e2a\u200b\u8f6c\u6362\u89c4\u5219\u200b\uff0c\u200b\u800c\u4e14\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u5730\u200b\u6dfb\u52a0\u200b\u5176\u4ed6\u200b\u89c4\u5219\u200b\u3002 </p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#_5","title":"\u8bc4\u4f30","text":"<p>\u200b\u8bba\u6587\u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200bSpoq\u200b\u539f\u578b\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5305\u62ec\u200b\u4e86\u200b\u4e09\u4e2a\u200b\u7ec4\u4ef6\u200b\uff1a\u200b\u4ece\u200b\u7cfb\u7edf\u200b\u6e90\u7801\u200b\u5230\u200bCoq\u200b\u7684\u200b\u8f6c\u6362\u5668\u200b\uff0c\u200b\u89c4\u5219\u200b\u548c\u200b\u8bc1\u660e\u200b\u751f\u6210\u5668\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u7528\u4e8e\u200bLLVM IR\uff0c\u200b\u6c47\u7f16\u200b\u8bed\u4e49\u200b\u548c\u200b\u7b56\u7565\u200b\u7684\u200bCoq\u200b\u5e93\u200b\u3002\u200b\u63a5\u7740\u200b\u672c\u6587\u200b\u8bc4\u4f30\u200b\u4e86\u200b\u4f7f\u7528\u200bSpoq\u200b\u5c06\u200b\u4e0d\u540c\u200b\u5f00\u6e90\u200b\u8f6f\u4ef6\u200b\u7684\u200bC\u200b\u4ee3\u7801\u200b\u8f6c\u6362\u6210\u200bcoq\u200b\u7684\u200b\u6548\u7387\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5bf9\u200b\u4e00\u4e2a\u200bKVM hypervisor\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u5bf9\u200b\u4e0d\u540c\u200b\u5f00\u6e90\u200b\u7cfb\u7edf\u200bC\u200b\u4ee3\u7801\u200b\u8f6c\u6362\u200b\uff0c\u200b\u5176\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\uff1a  \u200b\u4ece\u200b\u4e0a\u200b\u56fe\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c\u200b\u5728\u200b\u6240\u6709\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff0c\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u548c\u200blinux\u200b\u5185\u6838\u200b\u4e2d\u200b\uff0cSpoq\u200b\u6210\u529f\u200b\u5730\u200b\u5c06\u200b\u6e90\u4ee3\u7801\u200b\u7684\u200b99%\u200b\u8f6c\u6362\u6210\u200b\u4e86\u200bCoq\uff0c\u200b\u5269\u4f59\u200b\u90e8\u5206\u200b\u662f\u200b\u7531\u200b\u76ee\u524d\u200b\u4e0d\u200b\u652f\u6301\u200b\u7684\u200bLLVM\u200b\u9ad8\u7ea7\u200b\u5206\u652f\u200b\u6307\u4ee4\u200b\u5bfc\u81f4\u200b\u7684\u200b\u3002\u200b\u4e14\u200b\u5176\u200b\u6027\u80fd\u200b\u660e\u663e\u200b\u4f18\u4e8e\u200bCLightGen\u3002\u200b\u800c\u4e14\u200bSpoq\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4e5f\u200b\u8981\u200b\u5c0f\u200b\u7684\u200b\u591a\u200b\u3002</p> <p>\u200b\u63a5\u7740\u200b\uff0c\u200b\u5728\u200b\u5bf9\u200bseKVM\uff08KVM/Arm\u200b\u7684\u200b\u6539\u8fdb\u200b\u7248\u672c\u200b\uff09\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u4e0a\u200b\uff0c\u200b\u4ece\u200b\u4e0b\u8868\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c\u200b\u76f8\u6bd4\u200b\u4e8e\u200b\u624b\u5de5\u200b\u7f16\u5199\u200b\u7684\u200b\u8bc1\u660e\u200b\uff0cSpoq\u200b\u6781\u5927\u200b\u5730\u200b\u51cf\u5c11\u200b\u4e86\u200b\u8bc1\u660e\u200b\u884c\u200b\u6570\u200b\uff08\u200b\u5e73\u5747\u200b\u7ea6\u200b90%\uff09\uff0c\u200b\u4ee5\u53ca\u200b\u51cf\u5c11\u200b\u4e86\u200b70%\u200b\u7684\u200b\u624b\u52a8\u200b\u8bc1\u660e\u200b\u5de5\u4f5c\u91cf\u200b\u3002</p> <p></p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/Spoq/#_6","title":"\u7ed3\u8bba","text":"<p>Spoq\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u81ea\u52a8\u5316\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u6846\u67b6\u200b\uff0c\u200b\u6210\u529f\u200b\u5730\u200b\u5c06\u200bC\u200b\u7cfb\u7edf\u200b\u4ee3\u7801\u200b\u8f6c\u6362\u200b\u4e3a\u200bCoq\u200b\u8868\u793a\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u5bf9\u200b\u5e76\u53d1\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u7684\u200b\u673a\u5668\u200b\u53ef\u200b\u68c0\u67e5\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u8fd9\u4e00\u200b\u8fc7\u7a0b\u200b\u4e0d\u4ec5\u200b\u652f\u6301\u200b\u5b8c\u6574\u200b\u7684\u200bC\u200b\u8bed\u8a00\u200b\u8bed\u4e49\u200b\uff0c\u200b\u5305\u62ec\u200bC\u200b\u5b8f\u200b\u3001\u200b\u5185\u8054\u200b\u6c47\u7f16\u200b\u548c\u200b\u7f16\u8bd1\u5668\u200b\u6307\u4ee4\u200b\uff0c\u200b\u800c\u4e14\u200b\u8fd8\u200b\u663e\u8457\u200b\u964d\u4f4e\u200b\u4e86\u200b\u8bc1\u660e\u200b\u6210\u672c\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u9a8c\u8bc1\u200b\u8fc7\u7a0b\u200b\u66f4\u52a0\u200b\u9ad8\u6548\u200b\u3002</p> <p>Spoq\u200b\u901a\u8fc7\u200b\u5f15\u5165\u200b\u65b0\u200b\u7684\u200b\u7a0b\u5e8f\u7ed3\u6784\u200b\u91cd\u5efa\u200b\u6280\u672f\u200b\uff0c\u200b\u5c06\u200bLLVM IR\u200b\u7684\u200b\u63a7\u5236\u6d41\u200b\u56fe\u200b\u8f6c\u6362\u200b\u4e3a\u200bCoq\u200b\u4e2d\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u98ce\u683c\u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd9\u4e00\u200b\u65b9\u6cd5\u200b\u4f7f\u5f97\u200bSpoq\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u7684\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u5b9e\u73b0\u200b\u3002\u200b\u6b64\u5916\u200b\uff0cSpoq\u200b\u91c7\u7528\u200b\u5206\u5c42\u200b\u8bc1\u660e\u200b\u7b56\u7565\u200b\uff0c\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u5c42\u200b\u89c4\u683c\u200b\u548c\u200b\u7cbe\u70bc\u200b\u8bc1\u660e\u200b\uff0c\u200b\u7b80\u5316\u200b\u4e86\u200b\u5e76\u53d1\u200b\u7cfb\u7edf\u8f6f\u4ef6\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u5de5\u4f5c\u200b\u3002Spoq\u200b\u8fd8\u200b\u652f\u6301\u200b\u7528\u6237\u200b\u8f7b\u677e\u200b\u96c6\u6210\u200b\u624b\u52a8\u200b\u7f16\u5199\u200b\u7684\u200b\u5c42\u200b\u89c4\u683c\u200b\u548c\u200b\u7cbe\u70bc\u200b\u8bc1\u660e\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u53ef\u6269\u5c55\u6027\u200b\u3002</p> <p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0cSpoq\u200b\u5728\u200b\u9a8c\u8bc1\u200bLinux\u200b\u5185\u6838\u200b\u548c\u200b\u591a\u5904\u7406\u5668\u200bKVM\u200b\u865a\u62df\u673a\u200b\u5b9e\u73b0\u200b\u65b9\u9762\u200b\u8868\u73b0\u51fa\u8272\u200b\uff0c\u200b\u8bc1\u660e\u200b\u4e86\u200b\u5176\u200b\u5728\u200b\u51cf\u5c11\u200b\u624b\u52a8\u200b\u8bc1\u660e\u200b\u5de5\u4f5c\u91cf\u200b\u65b9\u9762\u200b\u7684\u200b\u663e\u8457\u200b\u4f18\u52bf\u200b\u3002Spoq\u200b\u7684\u200b\u5b9e\u73b0\u200b\u51cf\u5c11\u200b\u4e86\u200b\u5bf9\u200b\u53ef\u4fe1\u8ba1\u7b97\u200b\u57fa\u200b\uff08TCB\uff09\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u4f7f\u5f97\u200bCoq\u200b\u751f\u6210\u200b\u7684\u200b\u89c4\u8303\u200b\u548c\u200b\u8bc1\u660e\u200b\u7684\u200b\u53ef\u4fe1\u5ea6\u200b\u66f4\u9ad8\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u5b8c\u5168\u200b\u4fe1\u4efb\u200bSpoq\u200b\u7684\u200b\u7ffb\u8bd1\u5668\u200b\u3002</p> <p>\u200b\u5c3d\u7ba1\u200bSpoq\u200b\u53d6\u5f97\u200b\u4e86\u200b\u663e\u8457\u200b\u7684\u200b\u6210\u679c\u200b\uff0c\u200b\u4f46\u200b\u4f5c\u8005\u200b\u4e5f\u200b\u6307\u51fa\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5c40\u9650\u6027\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0cSpoq\u200b\u7684\u200b\u7ffb\u8bd1\u5668\u200b\u5c1a\u672a\u200b\u7ecf\u8fc7\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u4e14\u200b\u76ee\u524d\u200b\u53ea\u200b\u652f\u6301\u200bLLVM IR\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b50\u96c6\u200b\u3002\u200b\u6b64\u5916\u200b\uff0cSpoq\u200b\u5728\u200b\u5904\u7406\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\u8df3\u8f6c\u200b\u548c\u200b\u6570\u636e\u62bd\u8c61\u200b\u8bc1\u660e\u200b\u65b9\u9762\u200b\u8fd8\u6709\u200b\u5f85\u200b\u6539\u8fdb\u200b\u3002\u200b\u4f5c\u8005\u200b\u63d0\u51fa\u200b\u4e86\u200b\u672a\u6765\u200b\u7684\u200b\u5de5\u4f5c\u200b\u65b9\u5411\u200b\uff0c\u200b\u5305\u62ec\u200b\u589e\u5f3a\u200b\u5bf9\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\u7684\u200b\u652f\u6301\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5f00\u53d1\u200b\u5e38\u7528\u200b\u6570\u636e\u62bd\u8c61\u200b\u8bc1\u660e\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u4ee5\u200b\u8fdb\u4e00\u6b65\u200b\u81ea\u52a8\u5316\u200b\u8bc1\u660e\u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87/%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AF%81%E6%98%8E/hoare_logic/","title":"\u970d\u5c14\u200b\u903b\u8f91","text":"<p> \u200b\u7ea6\u200b 4 \u200b\u4e2a\u200b\u5b57\u200b </p>"}]}