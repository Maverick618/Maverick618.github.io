{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5982\u200b\u6211\u200b\u6240\u89c1","text":"<p>\u200b\u7d20\u200b\u65c5\u4e4b\u5f80\u200b\uff0c\u200b\u5fc3\u4e4b\u6240\u200b\u5411\u200b\u3002</p>"},{"location":"#_2","title":"\u8fdb\u884c\u200b\u4e2d","text":"<ul> <li>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b</li> <li>PyTorch</li> <li>VecQ</li> </ul> <p>\u200b\u4f5c\u200b\u8bd7\u200b\u4e00\u9996\u200b</p> <p>\u200b\u4e34\u6c5f\u4ed9\u200b \u2022 \u200b\u5143\u591c\u200b\u6292\u6000\u200b</p> <p>\u200b\u6708\u200b\u4e0a\u200b\u67f3\u68a2\u200b\u706f\u6f2b\u200b\u6302\u200b\uff0c\u200b\u6843\u6c5f\u200b\u6708\u200b\u4e0b\u200b\u70df\u6865\u200b\u3002\u200b\u5f20\u706f\u7ed3\u5f69\u200b\u8fce\u200b\u5143\u5bb5\u200b\uff0c\u200b\u800c\u4eca\u200b\u597d\u666f\u200b\uff0c\u200b\u5374\u9022\u200b\u53cb\u4eba\u200b\u79bb\u200b\u3002</p> <p>\u200b\u8dc2\u671b\u200b\u773c\u6ce2\u200b\u7709\u9edb\u200b\u5904\u200b\uff0c\u200b\u5357\u5c71\u200b\u6811\u200b\u4e0b\u200b\u65b0\u82d7\u200b\u3002\u200b\u76f8\u51ed\u200b\u98ce\u597d\u200b\u4e0a\u200b\u91cd\u9704\u200b\uff0c\u200b\u6625\u98ce\u200b\u5341\u91cc\u200b\uff0c\u200b\u501f\u200b\u628a\u200b\u82e6\u6101\u200b\u6d88\u200b\u3002</p>"},{"location":"#_3","title":"\u66f4\u65b0\u200b\u65e5\u5fd7","text":"<ul> <li>2023/05/06 \u200b\u65b0\u589e\u200bmkdocs_pro&amp;slove; \u200b\u5b8c\u5584\u200b\u7b14\u8bb0\u200b\u3002</li> <li>2023/05/05 \u200b\u65b0\u589e\u200b\u4e00\u4e9b\u200b\u76ee\u5f55\u200b\uff0c\u200b\u4fee\u6539\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u76ee\u5f55\u200b\u7ed3\u6784\u200b\uff1b\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u7b14\u8bb0\u200b\u3002</li> </ul>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/","title":"\u4e3a\u200b\u6211\u200b\u6240\u5b66","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/","title":"DIR","text":"<ul> <li>\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b\u6570\u636e\u5904\u7406\u200b</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u642d\u5efa\u200b</li> </ul>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","title":"\u6570\u636e\u200b\u96c6\u200b\u4e0e\u200b\u6570\u636e\u5904\u7406","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_2","title":"\u5185\u7f6e\u200b\u6570\u636e\u200b\u96c6","text":"<p>PyTorch\u200b\u4e3a\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u9886\u57df\u200b\u4e2d\u200b\u7ecf\u5e38\u200b\u4f7f\u7528\u200b\u7684\u200b\u4e00\u4e9b\u200b\u6570\u636e\u200b\u96c6\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4fbf\u643a\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5e76\u200b\u9488\u5bf9\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u8fdb\u884c\u200b\u4e86\u200b\u7b80\u5355\u200b\u7684\u200b\u5206\u7c7b\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5f00\u53d1\u8005\u200b\u80fd\u591f\u200b\u65b9\u4fbf\u5feb\u6377\u200b\u5730\u200b\u4f7f\u7528\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u672c\u200b\u8282\u200b\u6807\u9898\u200b\u94fe\u63a5\u200b\u7684\u200b\u662f\u200btorchvision\u200b\u4e2d\u200b\u5185\u7f6e\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e5f\u200b\u5c06\u200b\u4f7f\u7528\u200btorchvision\u200b\u4e2d\u200b\u5185\u7f6e\u200b\u7684\u200bCIFAR10\u200b\u6570\u636e\u200b\u96c6\u200b\u3002 \uff081\uff09\u200b\u4f7f\u7528\u200bCIFAR10\u200b\u6570\u636e\u200b\u96c6\u200b<pre><code>import torchvision\n\ntrain_set = torchvision.datasets.CIFAR10(\n    root=\"./dataset\"\uff0c  # \u200b\u6570\u636e\u200b\u96c6\u200b\u5b58\u653e\u200b\u7684\u200b\u76ee\u5f55\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u91c7\u7528\u200b\u7684\u200b\u662f\u200b\u76f8\u5bf9\u8def\u5f84\u200b\n    train=True,         # \u200b\u9700\u8981\u200b\u7684\u200b\u6570\u636e\u200b\u662f\u5426\u200b\u4e3a\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\n    transform=***,      # \u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\n    download=True)      # \u200b\u5982\u679c\u200b\u6570\u636e\u200b\u96c6\u200b\u4e0d\u200b\u5b58\u5728\u200b\u662f\u5426\u200b\u8fdb\u884c\u200b\u8054\u7f51\u200b\u4e0b\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\ntest_set = torchvision.datasets.CIFAR10(root=\"./dataset\", train=False, download=True)\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_3","title":"\u521b\u5efa\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u5c3d\u7ba1\u200bPyTorch\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u76f8\u5f53\u53ef\u89c2\u200b\u7684\u200b\u5185\u7f6e\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4e00\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u81ea\u5df1\u200b\u5df2\u6709\u200b\u7684\u200b\u6570\u636e\u200b\u3002\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cPyTorch\u200b\u4e3a\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200bDataset\u200b\u5de5\u5177\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u3002</p> <p>\u200b\u5efa\u8bae\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7f51\u7edc\u200b\u7684\u200b\u521d\u5b66\u8005\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u5185\u7f6e\u200b\u6570\u636e\u200b\u96c6\u200b\u3002\u200b\u4f7f\u7528\u200bDataset\u200b\u521b\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u4ee5\u540e\u200b\u518d\u5b66\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_4","title":"\u6587\u4ef6\u5939\u200b\u5206\u7c7b\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u6211\u200b\u8fd9\u91cc\u200b\u6240\u8bf4\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\u5206\u7c7b\u200b\u6570\u636e\u200b\u96c6\u662f\u200b\u6307\u200b\u5728\u200b\u5206\u7c7b\u200b\u5de5\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u540c\u200b\u4e00\u7c7b\u200b\u7684\u200b\u6570\u636e\u200b\u90fd\u200b\u653e\u5728\u200b\u540c\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\uff0c\u200b\u540c\u65f6\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\u6240\u5c5e\u200b\u7684\u200b\u7c7b\u522b\u200b\u5c31\u662f\u200b\u6587\u4ef6\u5939\u200b\u7684\u200b\u540d\u5b57\u200b\u3002\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a <pre><code>- train\n    - tag_01\n        - data_01_01\n        - data_01_02\n        \u00b7\u00b7\u00b7\n    - tag_02\n        - data_02_01\n        - data_02_02\n        \u00b7\u00b7\u00b7\n- test\n    - tag_01\n        - data_01_01\n        - data_01_02\n        \u00b7\u00b7\u00b7\n    - tag_02\n        - data_02_01\n        - data_02_02\n        \u00b7\u00b7\u00b7\n</code></pre> \u200b\u5982\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bDataset\u200b\u5de5\u5177\u200b\u6765\u200b\u6784\u5efa\u200b\u8fd9\u79cd\u200b\u7b80\u5355\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u3002 \uff082\uff09dataset\u200b\u793a\u4f8b\u200b01<pre><code>from torch.utils.data import Dataset\nfrom PIL import Image\nimport os\n\nclass MyData(Dataset): # \u200b\u4e00\u822c\u800c\u8a00\u200b\uff0c\u200b\u7ee7\u627f\u200bDataset\u200b\u7c7b\u200b\u5e76\u200b\u91cd\u5199\u200b\u4e24\u4e2a\u200b\u65b9\u6cd5\u200b\u5373\u53ef\u200b\u6784\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u5566\u200b\n    def __init__(self, root_dir, label):\n        # \u200b\u50a8\u5b58\u200b\u8def\u5f84\u200b\u4fe1\u606f\u200b\n        self.root_dir = root_dir\n        self.label = label\n        self.data_path = os.path.join(root_dir, label)\n        # \u200b\u50a8\u5b58\u200b\u6570\u636e\u200b\u4fe1\u606f\u200b\n        self.img_path = os.listdir(self.data_path)\n\n    def __getitem__(self, idx):\n        # \u200b\u83b7\u53d6\u200b\u76ee\u6807\u200b\u8def\u5f84\u200b\n        item_path = self.img_path[idx]\n        item_path = os.path.join(self.data_path, item_path)\n        # \u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\n        img = Image.open(img_path)\n        label = self.label\n        return img, label\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_5","title":"\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u6570\u636e\u200b\u96c6","text":"<p>\u200b\u6211\u200b\u6240\u8bf4\u200b\u7684\u200b\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u6570\u636e\u200b\u96c6\u662f\u200b\u6307\u200b\u8fd9\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u90fd\u200b\u6709\u200b\u4e0e\u200b\u4e4b\u200b\u4e00\u4e00\u5bf9\u5e94\u200b\u7684\u200b\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u3002\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u6570\u636e\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a <pre><code>    - data_01\n        - data_01_01.xxx\n        \u00b7\u00b7\u00b7\n    - lable_01\n        - data_01_01.txt (\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u662f\u200b\u5176\u4ed6\u200b\u683c\u5f0f\u200b)\n</code></pre> \u200b\u8fd9\u6837\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\u6784\u5efa\u200b\u8d77\u6765\u200b\u548c\u200b\u4ee3\u7801\u200b\uff082\uff09\u200b\u4e5f\u200b\u6ca1\u591a\u5927\u200b\u5dee\u522b\u200b\u3002\u200b\u533a\u522b\u200b\u4e3b\u8981\u200b\u4f53\u73b0\u200b\u5728\u200b\u5bf9\u200b\u6807\u7b7e\u200b\u7684\u200b\u5904\u7406\u200b\u4e0a\u200b\uff0c\uff082\uff09\u200b\u4e2d\u200b\u6807\u7b7e\u200b\u662f\u200b\u5df2\u77e5\u200b\u7684\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5373\u53ef\u200b\u3002\u200b\u800c\u200b\uff083\uff09\u200b\u4e2d\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u8def\u5f84\u200b\u6253\u5f00\u200b\u6807\u7b7e\u200b\u6587\u4ef6\u200b\u83b7\u53d6\u200b\u76f8\u5e94\u200b\u7684\u200b\u6807\u7b7e\u200b\u3002 \uff083\uff09dataset\u200b\u793a\u4f8b\u200b02<pre><code>from torch.utils.data import Dataset\nfrom PIL import Image\nimport os\n\nclass MyData(Dataset):\n    def __init__(self, data_dir, label_dir):\n        self.data_path = data_dir\n        self.label_dir = label_dir\n        self.img_path = os.listdir(self.data_path)\n        self.label_path = os.listdir(self.data_path)\n\n    def __getitem__(self, idx):\n        item_path = self.img_path[idx]\n        item_path = os.path.join(self.data_path, item_path)\n        item_label_path = self.label_path[idx]\n        item_label_path = os.path.join(self.labelpath, item_label_path)\n        # \u200b\u83b7\u53d6\u6570\u636e\u200b\n        img = Image.open(img_path)\n        # \u200b\u6839\u636e\u200b item_label_path \u200b\u83b7\u53d6\u200b label\uff0c\u200b\u4e0d\u540c\u200b\u4efb\u52a1\u200blabel\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0d\u540c\u200b\n        # label = \u00b7\u00b7\u00b7\n        return img, label\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_6","title":"\u6570\u636e\u5904\u7406","text":"<p>\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u83b7\u53d6\u200b\u5230\u200b\u4e86\u200b\u6570\u636e\u200b\uff0c\u200b\u6bd4\u5982\u200b\u662f\u200b\u4e00\u4e9b\u200b\u56fe\u7247\u200b\uff0c\u200b\u8981\u200b\u505a\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u56fe\u7247\u200b\u53ef\u80fd\u200b\u5927\u5c0f\u200b\u5c31\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u683c\u5f0f\u200b\u53ef\u80fd\u200b\u4e5f\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5bf9\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u4e00\u4e9b\u200b\u5904\u7406\u200b\uff0c\u200b\u624d\u200b\u80fd\u591f\u200b\u66f4\u597d\u200b\u7684\u200b\u7ed9\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\u3002\u200b\u4e0b\u9762\u200b\u4e3b\u8981\u200b\u4ecb\u7ecd\u200btorchvision\u200b\u4e2d\u200b\u7684\u200b\u51e0\u79cd\u200btransforms\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#totensor","title":"ToTensor","text":"<p>\u200b\u8f93\u5165\u200b\uff1aPIL Image or ndarray</p> <p>\u200b\u8f93\u51fa\u200b\uff1atensor</p> <p>\u200b\u793a\u4f8b\u200b\uff1a \uff084\uff09Totensor<pre><code># \u200b\u5148\u6709\u200b\u53d8\u91cf\u200bimg\u200b\u4e3a\u200bPIL\u200b\u7c7b\u578b\u200b\nfrom torchvision import transforms as T\ntotensor = T.ToTensor() # \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u8f6c\u6362\u5668\u200b\u5bf9\u8c61\u200b\nimg = totensor(img)     # \u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#resize","title":"Resize","text":"<p>Resize the input image to the given size.</p> <p>If the image is torch Tensor, it is expected to have [..., H, W] shape, where ... means an arbitrary number of leading dimensions</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#normalize","title":"Normalize","text":"<p>Normalize a tensor image with mean and standard deviation.</p> <p>This transform does not support PIL Image.</p> <p>Given mean: <code>(mean[1],...,mean[n])</code> and std: <code>(std[1],..,std[n])</code> for <code>n</code> channels, this transform will normalize each channel of the input <code>torch.*Tensor</code> i.e.,</p> <p><code>output[channel] = (input[channel] - mean[channel]) / std[channel]</code></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#compose","title":"Compose","text":"<p>Compose\u200b\u4e3b\u8981\u200b\u662f\u200b\u7528\u6765\u200b\u6574\u5408\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u5316\u200b\u4ee3\u7801\u200b\uff0cCompose\u200b\u8981\u6c42\u200b\u8fd9\u200b\u4e00\u7cfb\u5217\u200b\u7684\u200b\u5904\u7406\u200b\u4e2d\u200b\uff0c\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5904\u7406\u200b\u7684\u200b\u8f93\u51fa\u200b\u80fd\u591f\u200b\u4f5c\u4e3a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5904\u7406\u200b\u7684\u200b\u8f93\u5165\u200b\u3002 \uff085\uff09\u200b\u5b98\u65b9\u200bCompose\u200b\u793a\u4f8b\u200b<pre><code>    Example:\n        transforms.Compose([\n            transforms.CenterCrop(10),\n            transforms.PILToTensor(),\n            transforms.ConvertImageDtype(torch.float),\n        ])\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#more","title":"MORE","text":"<p>\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u6570\u636e\u5904\u7406\u200b\u64cd\u4f5c\u200b\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200bPyTorch\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u6216\u200b\u76f4\u63a5\u200b\u67e5\u8be2\u200b\u6e90\u7801\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/PyTorch/%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_7","title":"\u6570\u636e\u200b\u52a0\u8f7d","text":"<p>\u200b\u5728\u200bPyTorch\u200b\u4e2d\u200b\u6211\u4eec\u200b\u4e00\u822c\u200b\u4f7f\u7528\u200bDataLoader\u200b\u6765\u200b\u8fdb\u884c\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u3002DataLoader\u200b\u7684\u200b\u4e3b\u8981\u200b\u4f5c\u7528\u200b\u662f\u200b\u5c06\u200b\u6570\u636e\u200b\u4ece\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u6309\u200b\u4e00\u5b9a\u200b\u89c4\u5219\u200b\u52a0\u8f7d\u200b\u8fdb\u6765\u200b\uff0c\u200b\u4e0b\u9762\u200b\u4f5c\u200b\u7b80\u5355\u200b\u7684\u200b\u6f14\u793a\u200b\u3002 \uff086\uff09DataLoader\u200b\u7684\u200b\u7b80\u5355\u200b\u4f7f\u7528\u200b<pre><code>    # \u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4ee3\u7801\u200b\uff081\uff09\u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\n    from torch.utils.data import DataLoader\n    train_loader = DataLoader(\n        dataset=train_set,   # \u200b\u52a0\u8f7d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\n        batch_size=128,      # \u200b\u6279\u91cf\u200b\u5927\u5c0f\u200b\n        shuffle=True,        # \u200b\u662f\u5426\u200b\u6253\u4e71\u200b\u6570\u636e\u200b\n        num_works=0,         # \u200b\u5de5\u4f5c\u200b\u8fdb\u7a0b\u200b\u6570\u200b\n        drop_last=True       # \u200b\u662f\u5426\u200b\u820d\u5f03\u200b\u6700\u540e\u200b\u6570\u91cf\u200b\u4e0d\u8db3\u200b\u6279\u91cf\u200b\u5927\u5c0f\u200b\u7684\u200b\u90a3\u4e9b\u200b\u6570\u636e\u200b\n    ) # \u200b\u66f4\u200b\u591a\u200b\u53c2\u6570\u200b\u53c2\u8003\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u6216\u200b\u6e90\u7801\u200b\n\n    for epoch in range(10):\n        for data in train_loader:\n            # some operations for data\n            # such as:\n            # imgs, labels = data\n            # ...\n</code></pre></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/data_structure_and_algorithm/","title":"\u6570\u636e\u7ed3\u6784\u200b\u4e0e\u200b\u7b97\u6cd5","text":"<p>\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u57fa\u7840\u8bfe\u200b~</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/data_structure_and_algorithm/#20230228-dp","title":"2023/02/28 DP\u200b\u8fdb\u884c\u200b\u4e2d","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/data_structure_and_algorithm/dynamic_programing/","title":"\u52a8\u6001\u200b\u89c4\u5212\u200b  Dynamic Programming","text":"<p>!!!</p> <p>\u200b\u4e0d\u200b\u5b66\u4f1a\u200bDP\u200b\u4e0d\u6539\u200b\u7f51\u540d\u200b\uff01</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/data_structure_and_algorithm/dynamic_programing/#01","title":"01\u200b\u80cc\u5305","text":"<p>\u200b\u6709\u200bn\u200b\u4e2a\u200b\u91cd\u91cf\u200b\u548c\u200b\u4ef7\u503c\u200b\u5206\u522b\u200b\u662f\u200bWi,vi\u200b\u7684\u200b\u7269\u54c1\u200b\u3002\u200b\u4ece\u200b\u8fd9\u4e9b\u200b\u7269\u54c1\u200b\u4e2d\u200b\u6311\u51fa\u200b\u603b\u91cd\u91cf\u200b\u4e0d\u200b\u8d85\u8fc7\u200bW\u200b\u7684\u200b\u7269\u54c1\u200b\uff0c\u200b\u6c42\u200b\u6240\u6709\u200b\u6311\u9009\u200b\u65b9\u6848\u200b\u4e2d\u200b\u4ef7\u503c\u200b\u603b\u548c\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002</p> \u200b\u7a77\u7aed\u200b\u641c\u7d22\u200b(C++)<pre><code>    int n, W;\n    int w[MAX_N], V[MAX_N];\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/","title":"\u8bb0\u5f55\u200b\u529b\u6263\u200b\u5237\u9898\u200b\u6240\u200b\u60f3","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/","title":"April 2021","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#01","title":"01 \u200b\u7b28\u200b\u9636\u4e58","text":"<p>\u3010\u200b\u7b28\u200b\u9636\u4e58\u200b\u3011</p> <ol> <li>\u200b\u628a\u200b\u6211\u200b\u7b28\u6b7b\u4e86\u200b\u3002</li> </ol> <p>\u200b\u7528\u200bVScode\uff0c\u200b\u5199\u200bc++ \u200b\u90fd\u200b\u4e0d\u200b\u77e5\u9053\u200b\u8981\u200b\u7528\u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200bstd\uff1b</p> <p>using namespace std;</p> <p>\u3010\u200b\u7b28\u200b\u601d\u8def\u200b\u3011 \u200b\u4e00\u5982\u65e2\u5f80\u200b\u7684\u200bswitch\u200b\u8ba1\u7b97\u5668\u200b\u601d\u8def\u200b\uff01 \u200b\u5728\u200b\u8fd0\u7b97\u200b\u51cf\u6cd5\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u8bef\u7528\u200b\u4e86\u200b\u9012\u5f52\u200b\uff01\u200b\u5bfc\u81f4\u200b\u8fd0\u7b97\u200b\u51fa\u9519\u200b\uff01</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a10\n\u200b\u8f93\u51fa\u200b\uff1a12\n\u200b\u89e3\u91ca\u200b\uff1a12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n                        (\u200b\u5982\u679c\u200b\u51cf\u6cd5\u200b\u7528\u200b\u9012\u5f52\u200b\uff0c +3 \u200b\u5c31\u200b\u4f1a\u200b\u53d8\u6210\u200b -3 )  \n</code></pre> <pre><code>class Solution {\npublic:\n    int clumsy(int N){\n        int flag = 0; //\u200b\u6807\u8bc6\u7b26\u200b\uff0c\u200b\u7528\u6765\u200b\u66f4\u6539\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u7b2c\u4e00\u6b21\u200b\u4e3a\u200b\u4e58\u6cd5\u200b\u8fd0\u7b97\u200b\n        int ans = N; //\u200b\u8fd4\u56de\u503c\u200b\n        N--;\n        while(N){\n            switch(flag % 4){\n                case 0:\n                    ans *= N;\n                    break;\n                case 1:\n                    ans /= N;\n                    break;\n                case 2:\n                    ans += N;\n                    break;\n                case 3:\n                    if(N &gt;= 3){\n                        ans -= N * (N - 1) / (N - 2);\n                        N -= 2;\n                        flag = 1;\n                    }else if( N == 2){\n                        ans -= 2;\n                        N = 1;\n                    }else{\n                        ans--;\n                    }\n                    break;\n                default:\n                    break;\n            }\n            flag++;\n            N--;\n        }\n        return ans; \n    }\n};\n</code></pre> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7684\u200b\u795e\u5947\u200b\u601d\u8def\u200b\u3011</p> <pre><code>// \u200b\u5206\u6210\u200b4\u200b\u7684\u200b\u9012\u5f52\u200b\u601d\u8def\u200b\nclass Solution {\npublic:\n int clumsy(int N) {\n        if(N&lt;=2)return N;\n        if(N==3)return 6;\n        int sum=N*(N-1)/(N-2)+N-3;\n        N-=4;\n        while(N&gt;=4){\n         sum+=(-N*(N-1)/(N-2)+N-3);\n         N-=4;\n        }\n        return sum-clumsy(N);\n    }\n};\n\n//\u200b\u627e\u200b\u89c4\u5f8b\u200b\nclass Solution {\npublic:\n    int clumsy(int N){\n        if(N&gt;4)\n        {\n            switch(N%4)\n            {\n                case 0:return N+1;break;\n                case 1:return N+2;break;\n                case 2:return N+2;break;\n                case 3:return N-1;break;\n                default:break;\n            }\n        }\n        switch(N)\n        {\n            case 0:return 0;\n            case 1:return 1;\n            case 2:return 2;\n            case 3:return 6;\n            case 4:return 7;\n            default:break;\n        }\n        return 0;\n    }\n};\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#02","title":"02 \u200b\u76f4\u65b9\u56fe\u200b\u7684\u200b\u6c34\u91cf","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#03","title":"03 \u200b\u6700\u957f\u200b\u516c\u5171\u200b\u5b50\u200b\u5e8f\u5217","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#04","title":"04 \u200b\u68ee\u6797\u200b\u4e2d\u200b\u7684\u200b\u5154\u5b50","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#05","title":"05 \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#06-ii","title":"06 \u200b\u5220\u9664\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879\u200b II","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u7c7b\u4f3c\u200b\u53ea\u7559\u200b\u4e00\u4e2a\u200b\u91cd\u590d\u200b\u9879\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u7b2c\u4e8c\u4e2a\u200b\u5224\u65ad\u200b\u6761\u4ef6\u200b\uff0c\u200b\u8ba9\u200b\u5176\u80fd\u200b\u4fdd\u6709\u200b\u4e24\u4e2a\u200b\u91cd\u590d\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</li> <li>\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b2\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u4e0d\u7528\u200b\u5904\u7406\u200b\u3002</li> <li>\u200b\u56e0\u4e3a\u200b\u8981\u200b\u5904\u7406\u200b +2 \u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6709\u200b\u6570\u636e\u200b\u8d8a\u754c\u200b\u7684\u200b\u60c5\u51b5\u200b\u53d1\u751f\u200b\uff0c\u200b\u5e72\u8106\u200b\u5728\u200b\u540e\u9762\u200b\u52a0\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u540e\u9762\u200b\u5728\u200b\u628a\u200b\u5b83\u200b\u5220\u6389\u200b\u3002</li> </ol> <p>\u3010\u200b\u4e0d\u8db3\u200b\u3011</p> <ol> <li> <p>\u200b\u6ca1\u6709\u200b\u5145\u5206\u5229\u7528\u200b\u6570\u7ec4\u200b\u9012\u589e\u200b\u8fd9\u4e2a\u200b\u6761\u4ef6\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\u7684\u200b\u65f6\u5019\u200b\u7528\u200b\u4e86\u200b\u4e00\u4e0b\u200b\u3002</p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u5f88\u200b\u7b28\u62d9\u200b\uff1a</p> </li> </ol> <p>\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a8 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b57.79%\u200b\u7684\u200b\u7528\u6237\u200b</p> <p>\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a10.7 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b38.78%\u200b\u7684\u200b\u7528\u6237\u200b</p> <p>\u3010\u200b\u4ee3\u7801\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums) {\n        if(nums.size() &lt; 3)\n            return nums.size();\n\n        int i = 0, j = 0;\n        nums.push_back(nums[0]-1);\n        nums.push_back(nums[0]-1);\n        for (; i &lt; nums.size() - 2; ++i ){\n            if(nums[i] != nums[i + 1])\n                nums[j++] = nums[i];\n            else if(nums[i + 1] != nums[i + 2])\n                nums[j++] = nums[i];\n        }\n        i += 2;\n        while(i - j){\n            nums.pop_back();\n            j++;\n        }\n        return nums.size();\n    }\n};\n</code></pre> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u3011\u200b\u8bb8\u200b\u540c\u5b66\u200b\u4e0d\u4f1a\u200b\u8ba4\u8f93\u200b\u7684\u200b</p> <ol> <li> <p>\u200b\u5904\u7406\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\u4e0a\u200b\u91c7\u7528\u200b\u76f8\u53cd\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u65e2\u7136\u200b\u6570\u636e\u200b\u8d8a\u754c\u200b\u7684\u200b\u60c5\u51b5\u200b\u5fc5\u7136\u200b\u662f\u200b\u5728\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b2\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u624d\u200b\u4f1a\u200b\u53d1\u751f\u200b\uff0c\u200b\u6545\u200b\u4e0b\u6807\u200bindex - 2 &gt; 0  \u200b\u4e00\u5b9a\u200b\u6210\u7acb\u200b\u3002</p> </li> <li> <p>\u200b\u601d\u8def\u200b\u4e5f\u200b\u4e0d\u200b\u592a\u200b\u4e00\u6837\u200b\uff0cTa\u200b\u7684\u200b\u601d\u8def\u200b(\u200b\u6211\u200b\u6240\u200b\u7406\u89e3\u200b\u7684\u200b)\uff0c\u200b\u5e94\u8be5\u200b\u662f\u200b\uff0cindex\u200b\u4f5c\u4e3a\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e0b\u6807\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u6709\u200b\uff0c</p> </li> </ol> <p>nums[index] != nums[index - 2] </p> <p>\u200b\u56e0\u6b64\u200b\u53ea\u200b\u9700\u200b\u627e\u5230\u200b\u539f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7b26\u5408\u200b nums[i] != nums[index - 2] \u200b\u7684\u200b nums[i] \u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u8d4b\u503c\u200b\u7ed9\u200bnums[index] \u200b\u5373\u53ef\u200b\uff0c\u200b\u540c\u65f6\u200bindex\u200b\u9700\u8981\u200b\u81ea\u52a8\u200b\u52a0\u4e00\u200b\uff0c\u200b\u5373\u200b\u80fd\u591f\u200b\u5bfb\u627e\u200b\u4e0b\u200b\u4e00\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff0c</p> <p>nums  = [1,2,2,2,3,3];</p> <p>index = 2, i = 2;</p> <p>\u200b\u663e\u7136\u200b\uff0c</p> <p>nums[index] = 2, nums[index - 2] = 0, nums[i] = 2,</p> <p>\u200b\u6545\u200b line a \u200b\u8bed\u53e5\u200b\u4f1a\u200b\u88ab\u200b\u6267\u884c\u200b\uff0c\u200b\u6267\u884c\u200b\u540e\u200b\u6709\u200b\uff0c</p> <p>index = 3, nums[index] = 2, nums[index - 2] = 2;</p> <p>\u200b\u5faa\u73af\u200b\u4e00\u6b21\u200b\u540e\u200b(\u200b\u5373\u200b\u4e0a\u8ff0\u200bline a\u200b\u6267\u884c\u200b\u540e\u200b i \u200b\u4f1a\u52a0\u200b1)\uff0c</p> <p>\u200b    i = 3, nums[i] = 2,</p> <p>\u200b\u4e0d\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0c\u200b\u800c\u540e\u200b,</p> <pre><code>    i = 4, nums[i] = 3,\n</code></pre> <p>\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0cline a\u200b\u88ab\u200b\u6267\u884c\u200b\uff0c</p> <p>index = 4,  nums[index] = 3, nums [index - 2] = 2, nums  = [1,2,2,3,3,3]</p> <p>\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5143\u7d20\u200b2\u200b\u53ea\u200b\u4fdd\u7559\u200b\u4e86\u200b\u4e24\u9879\u200b\uff0c\u200b\u540c\u6837\u200b\u7684\u200b\uff0c\u200b\u540e\u7eed\u200b\u7684\u200b\u5143\u7d20\u200b3\u200b\u4e5f\u200b\u4f1a\u200b\u53ea\u200b\u4fdd\u7559\u200b\u4e24\u9879\u200b\uff08index\u200b\u53ea\u4f1a\u200b\u8bb0\u5230\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b3\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u6700\u540e\u200bindex\u200b\u7684\u200b\u503c\u4f4d\u200b\u4e3a\u200b5\u200b\u800c\u200b\u4e0d\u662f\u200b6\uff09\u3002</p> <ol> <li>\u200b\u540c\u6837\u200b\u7684\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b2\u200b\u7684\u200b\u6570\u7ec4\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u4f5c\u200b\u5904\u7406\u200b\u3002</li> </ol> <pre><code>// \u200b\u4ee3\u7801\u200b\u53c2\u8003\u200b\u540e\u200b\u7565\u6709\u200b\u4fee\u6539\u200b\uff0c\u200b\u8bc4\u8bba\u8005\u200b\u4f3c\u4e4e\u200b\u662f\u200b\u7528\u200b\u7684\u200bC#\u200b\u4ee3\u7801\u200b\nclass Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums){\n        if(nums.size() &lt;= 2) return nums.size();\n\n        int index = 2;\n        for(int i = 2; i &lt; nums.size(); i++){\n            if(nums[i] != nums[index-2])\n                nums[index++] = nums[i];// line a\n        }\n\n        return index;\n    }\n};\n</code></pre> <p>\u3010\u200b\u5176\u4ed6\u200b\u53c2\u8003\u200b\u3011</p> <ol> <li>\u200b\u5b9d\u5b9d\u200b\u53ef\u4e56\u200b\u4e86\u200b</li> <li>\u200b\u5c06\u200b\u524d\u9762\u200b\u7684\u200b\u957f\u5ea6\u200b\u5224\u65ad\u200b\u53d6\u6d88\u200b\u7684\u200b\u65b9\u6cd5\u200b: Passion</li> <li>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b</li> </ol> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011</p> <ol> <li>\u200b\u5728\u200b\u6bd4\u8f83\u200b\u5f53\u4e2d\u200b\uff0c\u200b\u91c7\u7528\u200b+1\uff0c+2\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8bbf\u95ee\u200b\u6570\u7ec4\u200b\u603b\u200b\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u7528\u200b\u51cf\u6cd5\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8bbf\u95ee\u200b\u6bd4\u8f83\u200b\u3002</li> </ol>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#07-ii","title":"07 \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#08","title":"08 \u200b\u5bfb\u627e\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u6211\u80fd\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u627e\u200b\u6700\u5c0f\u503c\u200b\u554a\u200b\uff0cfind\u200b\u65b9\u6cd5\u200bQAQ\u3002</li> <li>\u200b\u4ece\u200b\u4e24\u8fb9\u200b\u903c\u8fd1\u200b\uff0c\u200b\u627e\u5230\u200b\u6700\u5c0f\u503c\u200b</li> </ol> <p>\u3010\u200b\u4ee3\u7801\u200b\u3011\uff08\u200b\u6709\u8bef\u200b\uff09</p> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\n            return nums[0];\n        int len = nums.size();\n        int index = 0;\n\n        while(nums[index] &gt; nums[len - index]) //from sides to center to find the minimum\n            index++;\n        // two situations\n        return (nums[index] &lt; nums[len - index + 1]) ? nums[index] : nums[len - index + 1]; \n    }\n};  \n</code></pre> <p>\u3010\u200b\u9519\u8bef\u200b\u3011</p> <p>\u200b\u6267\u884c\u200b\u51fa\u9519\u200b</p> <p>\u200b\u6700\u540e\u200b\u6267\u884c\u200b\u7684\u200b\u8f93\u5165\u200b\uff1a[2,1]</p> <p>\u3010\u200b\u5206\u6790\u200b\u539f\u56e0\u200b\u3011</p> <ol> <li>\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u95ee\u9898\u200b\uff0c\u200b\u8d8a\u754c\u200b\u4e86\u200b(\u200b\u53c8\u200b\u662f\u200b\u8d8a\u754c\u200b)\uff0c\u200b\u5e94\u8be5\u200b\u662f\u200blen\u200b\u5fd8\u8bb0\u200b\u51cf\u200b1\u200b\u4e86\u200b\u3002</li> </ol> <p>\u3010\u200b\u6539\u52a8\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\n            return nums[0];\n        int len = nums.size() - 1;\n        int index = 0;\n\n        while(nums[index] &gt; nums[len - index]) //from sides to center to find the minimum\n            index++;\n        // two situations\n        return (nums[index] &lt; nums[len - index + 1]) ? nums[index] : nums[len - index + 1]; \n    }\n};  \n\n// or \nclass Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        if(nums[0] &lt;= nums[nums.size()-1]) // equals for nums.length() == 1\n            return nums[0];\n        int len = nums.size();\n        int index = 0;\n\n        while(nums[index] &gt; nums[len - index - 1]) //from sides to center to find the minimum\n            index++;\n        // two situations\n        return (nums[index] &lt; nums[len - index]) ? nums[index] : nums[len - index]; \n    }\n};  \n</code></pre> <p>\u3010\u200b\u8bc4\u4ef7\u200b\u3011</p> <p>150 / 150 \u200b\u4e2a\u200b\u901a\u8fc7\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b</p> <p>\u200b\u72b6\u6001\u200b\uff1a\u200b\u901a\u8fc7\u200b</p> <p>\u200b\u6267\u884c\u200b\u7528\u65f6\u200b: 0 ms </p> <p>\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b: 9.8 MB </p> <p>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b</p> <p>\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b x\uff1a\u200b\u5728\u200b\u6700\u5c0f\u503c\u200b\u53f3\u4fa7\u200b\u7684\u200b\u5143\u7d20\u200b\uff08\u200b\u4e0d\u200b\u5305\u62ec\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u672c\u8eab\u200b\uff09\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u4e00\u5b9a\u200b\u90fd\u200b\u4e25\u683c\u200b\u5c0f\u4e8e\u200b x\uff1b\u200b\u800c\u200b\u5728\u200b\u6700\u5c0f\u503c\u200b\u5de6\u4fa7\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u4e00\u5b9a\u200b\u90fd\u200b\u4e25\u683c\u200b\u5927\u4e8e\u200b x\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u8fd9\u200b\u4e00\u6761\u200b\u6027\u8d28\u200b\uff0c\u200b\u901a\u8fc7\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u65b9\u6cd5\u200b\u627e\u51fa\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        int low = 0;\n        int high = nums.size() - 1;\n        while (low &lt; high) {\n            int pivot = low + (high - low) / 2;\n            if (nums[pivot] &lt; nums[high]) {\n                high = pivot;\n            }\n            else {\n                low = pivot + 1;\n            }\n        }\n        return nums[low];\n    }\n};\n\n\u200b\u4f5c\u8005\u200b\uff1aLeetCode-Solution\n\u200b\u94fe\u63a5\u200b\uff1ahttps://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/xun-zhao-xuan-zhuan-pai-xu-shu-zu-zhong-5irwp/\n\u200b\u6765\u6e90\u200b\uff1a\u200b\u529b\u6263\u200b\uff08LeetCode\uff09\n\u200b\u8457\u4f5c\u6743\u200b\u5f52\u200b\u4f5c\u8005\u200b\u6240\u6709\u200b\u3002\u200b\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u8054\u7cfb\u200b\u4f5c\u8005\u200b\u83b7\u5f97\u200b\u6388\u6743\u200b\uff0c\u200b\u975e\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002\n</code></pre> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011</p> <p>\u200b\u5173\u4e8e\u200b\u6709\u5e8f\u200b\u641c\u7d22\u200b\u67e5\u627e\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u591a\u591a\u200b\u8003\u8651\u200b\u5229\u7528\u200b\u4e8c\u5206\u6cd5\u200b\u3002\u200b\u4ece\u200b\u4e0d\u540c\u200b\u89d2\u5ea6\u200b\u5bf9\u200b\u4e8c\u5206\u6cd5\u200b\u8fdb\u884c\u200b\u4f7f\u7528\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u52a0\u6df1\u200b\u5bf9\u200b\u4e8c\u5206\u6cd5\u200b\u7684\u200b\u7406\u89e3\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#09-ii","title":"09 \u200b\u5bfb\u627e\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b II","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li> <p>\u200b\u548c\u200b\u6628\u5929\u200b\u7684\u200b\u9898\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5e94\u8be5\u200b\u53ea\u200b\u9700\u8981\u200b\u5bf9\u200b\u4e8c\u5206\u6cd5\u200b\u7a0d\u4f5c\u200b\u4fee\u6539\u200b\u5c31\u884c\u4e86\u200b\u3002</p> </li> <li> <p>\u200b\u521a\u200b\u5f00\u59cb\u200b\u60f3\u200b\u7684\u200b\u591a\u4e2a\u200b\u6761\u4ef6\u200b\u5c31\u884c\u4e86\u200b\u3002</p> </li> </ol> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        int low = 0, high = nums.size() - 1;\n        int mid = 0;\n        while(low &lt; high) {\n            mid = (low + high) / 2;\n            if(nums[mid] &lt; nums[high])\n                high = mid;\n            else if(nums[mid] &gt; nums[high])\n                low = mid + 1;\n            else\n                high--; //\u200b\u65b0\u52a0\u200b\u7684\u200b\u8bed\u53e5\u200b\n        }\n        return nums[low];\n    }\n};\n\n//\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a0 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b100.00%\u200b\u7684\u200b\u7528\u6237\u200b\n//\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a11.9 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b78.69%\u200b\u7684\u200b\u7528\u6237\u200b\n</code></pre> <ol> <li>\u200b\u540e\u6765\u200b\u60f3\u7740\u200b\u80fd\u200b\u4e0d\u80fd\u200b\u9012\u5f52\u200b\uff0c\u200b\u7ed3\u679c\u200b\u7279\u522b\u200b\u6162\u200b\u3002\u3002\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    int findMin(vector&lt;int&gt;&amp; nums) {\n        int low = 0, high = nums.size() - 1;\n        int mid = 0;\n        while(low &lt; high) {\n            mid = (low + high) / 2;\n            if(nums[mid] &lt; nums[high])\n                high = mid;\n            else if(nums[mid] &gt; nums[high])\n                low = mid + 1;\n            else{\n                if(low == mid)\n                    return nums[low];\n                vector&lt;int&gt; pre(nums.begin() + low, nums.begin() + mid);\n                vector&lt;int&gt; last(nums.begin() + mid, nums.begin() + high + 1);\n                return (findMin(pre) &lt; findMin(last)) ? findMin(pre) : findMin(last);\n            }    \n        }\n        return nums[low];\n    }\n};\n\n//\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a96 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b22.48%\u200b\u7684\u200b\u7528\u6237\u200b\n//\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a37.8 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b5.12%\u200b\u7684\u200b\u7528\u6237\u200b\n</code></pre> <p>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u4e0e\u200b\u601d\u8def\u200b\u4e00\u200b\u6700\u200b\u5f00\u59cb\u200b\u7684\u200b\u60f3\u6cd5\u200b\u4e00\u81f4\u200b\u3002</p> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011</p> <p>\u200b   \u200b\u6709\u65f6\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u82db\u6c42\u200b\u7279\u522b\u200b\u7684\u200b\u7b97\u6cd5\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#12","title":"12 \u200b\u6700\u5927\u6570","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u57fa\u6570\u6392\u5e8f\u200b\uff1f</li> <li>\u200b\u592a\u96be\u200b\u4e86\u200b\uff0c\u200b\u6ca1\u200b\u505a\u200b\u51fa\u6765\u200b\uff0c\u200b\u82b1\u200b\u4e86\u200b\u65f6\u95f4\u200b\u90fd\u200b\u6ca1\u200b\u505a\u200b\u51fa\u6765\u200b</li> </ol> <p>\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b</p> <p>\u200b\u5bab\u6c34\u200b\u4e09\u53f6\u200b\u306e\u200b\u76f8\u4fe1\u200b\u79d1\u5b66\u200b\u7cfb\u5217\u200b</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#13","title":"13  \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u8282\u70b9\u200b\u6700\u5c0f\u200b\u8ddd\u79bb","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u53ea\u200b\u9700\u200b\u6bd4\u8f83\u200broot-&gt;right - root \u200b\u548c\u200b root - root-&gt;left\u200b\u7684\u200b\u503c\u200b\u7684\u200b\u5927\u5c0f\u200b\u5373\u53ef\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u9012\u5f52\u200b\u3002</li> <li>\u200b\u8981\u200b\u8003\u8651\u200b\u6ca1\u6709\u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u6216\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5b50\u6811\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        if(root-&gt;left){ \n            //\u200b\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            if(root-&gt;right){ \n                // \u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u90fd\u200b\u6709\u200b\n                int min = ((root-&gt;val - root-&gt;left-&gt;val) &lt; (root-&gt;right-&gt;val - root-&gt;val)) ?  (root-&gt;val - root-&gt;left-&gt;val) : (root-&gt;right-&gt;val - root-&gt;val);\n                min = (min &lt; minDiffInBST(root-&gt;left)) ? min : minDiffInBST(root-&gt;left);\n                return (min &lt; minDiffInBST(root-&gt;right)) ? min : minDiffInBST(root-&gt;right);\n            }\n            //\u200b\u53ea\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            return ((root-&gt;val - root-&gt;left-&gt;val) &lt; minDiffInBST(root-&gt;left)) ? (root-&gt;val - root-&gt;left-&gt;val) : minDiffInBST(root-&gt;left);\n        }else if(root-&gt;right) // \u200b\u53ea\u6709\u200b\u53f3\u5b50\u200b\u6811\u200b\n            return ((root-&gt;right-&gt;val - root-&gt;val) &lt; minDiffInBST(root-&gt;right)) ? (root-&gt;right-&gt;val - root-&gt;val) : minDiffInBST(root-&gt;right);\n        else //\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u7531\u9898\u200b\u53ef\u77e5\u200b\uff0c\u200b\u6811\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u5355\u4e2a\u200b\u7684\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\n            return root-&gt;val;\n    }\n};\n\n/*\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u89e3\u7b54\u200b\u9519\u8bef\u200b\n\u200b\u663e\u793a\u200b\u8be6\u60c5\u200b\n\u200b\u8f93\u5165\u200b\uff1a\n[1,0,48,null,null,12,49]\n\u200b\u8f93\u51fa\u200b\uff1a\n0\n\u200b\u9884\u671f\u200b\u7ed3\u679c\u200b\uff1a\n1\n*/\n</code></pre> <p>\u3010\u200b\u89e3\u7b54\u200b\u51fa\u9519\u200b\u3011</p> <ol> <li>\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\u7684\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\u3002</li> </ol> <p>\u3010\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u3011</p> <ol> <li> <p>\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\u60c5\u51b5\u200b\u4e0b\u5e94\u200b\u8fd4\u8fd8\u200b\u6700\u5927\u503c\u200b\uff08100000\uff09\u3002</p> </li> <li> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u6811\u4e2d\u200b\u8282\u70b9\u200b\u6570\u76ee\u200b\u5728\u200b\u8303\u56f4\u200b <code>[2, 100]</code> \u200b\u5185\u200b</li> <li><code>0 &lt;= Node.val &lt;= 100000</code></li> </ul> </li> </ol> <pre><code>class Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        if(root-&gt;left){ \n            //\u200b\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            if(root-&gt;right){ \n                // \u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u90fd\u200b\u6709\u200b\n                int min = ((root-&gt;val - root-&gt;left-&gt;val) &lt; (root-&gt;right-&gt;val - root-&gt;val)) ?  (root-&gt;val - root-&gt;left-&gt;val) : (root-&gt;right-&gt;val - root-&gt;val);\n                min = (min &lt; minDiffInBST(root-&gt;left)) ? min : minDiffInBST(root-&gt;left);\n                return (min &lt; minDiffInBST(root-&gt;right)) ? min : minDiffInBST(root-&gt;right);\n            }\n            //\u200b\u53ea\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\n            return ((root-&gt;val - root-&gt;left-&gt;val) &lt; minDiffInBST(root-&gt;left)) ? (root-&gt;val - root-&gt;left-&gt;val) : minDiffInBST(root-&gt;left);\n        }else if(root-&gt;right) // \u200b\u53ea\u6709\u200b\u53f3\u5b50\u200b\u6811\u200b\n            return ((root-&gt;right-&gt;val - root-&gt;val) &lt; minDiffInBST(root-&gt;right)) ? (root-&gt;right-&gt;val - root-&gt;val) : minDiffInBST(root-&gt;right);\n        else //\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u7531\u9898\u200b\u53ef\u77e5\u200b\uff0c\u200b\u6811\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u5355\u4e2a\u200b\u7684\u200b\u53f6\u5b50\u200b\u7ed3\u70b9\u200b\n            return 100000;\n    }\n};\n\n/*\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u89e3\u7b54\u200b\u9519\u8bef\u200b\n\u200b\u663e\u793a\u200b\u8be6\u60c5\u200b\n\u200b\u8f93\u5165\u200b\uff1a\n[90,69,null,49,89,null,52]\n\u200b\u8f93\u51fa\u200b\uff1a\n3\n\u200b\u9884\u671f\u200b\u7ed3\u679c\u200b\uff1a\n1\n*/\n</code></pre> <p>\u3010\u200b\u89e3\u7b54\u200b\u51fa\u9519\u200b\u3011</p> <ol> <li>\u201c\u200b\u4efb\u610f\u200b\u201d\u200b\u7ed3\u70b9\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u201c\u200b\u76f8\u90bb\u200b\u201d\u200b\u7ed3\u70b9\u200b\uff08\u200b\u611f\u8c22\u200b\u8bc4\u8bba\u200b\u533a\u200b\u6458\u661f\u200b\uff09\u3002</li> </ol> <p>\u3010\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u3011</p> <ol> <li>\u200b\u7c7b\u4f3c\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u5bfb\u627e\u200b\u95f4\u8ddd\u200b\u6700\u5c0f\u200b\uff08\u200b\u611f\u8c22\u200b\u8bc4\u8bba\u200b\u533a\u200bCoding_Gengjiabo\uff09\u3002</li> </ol> <pre><code>\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#14-trie","title":"14 \u200b\u5b9e\u73b0\u200b Trie (\u200b\u524d\u7f00\u200b\u6811\u200b)","text":"<p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#15-ii","title":"15 \u200b\u6253\u5bb6\u52ab\u820d\u200b II","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u3002</li> </ol> <p>\u200b\u4e3e\u51fa\u200b\u53cd\u4f8b\u200b\u540e\u200b\u53d1\u73b0\u200b\u4e0d\u884c\u200b</p> <p>\u200b\u53cd\u4f8b\u200b: {1, 3, 4, 3, 0} </p> <p>\u200b\u6700\u4f18\u200b\u89e3\u200b\u5e94\u8be5\u200b\u662f\u200b 3+3\uff0c \u200b\u800c\u200b\u4e0d\u662f\u200b 4 + 1 + 0, \u200b\u4e0d\u80fd\u200b\u4f18\u5148\u200b\u9009\u200b\u6700\u5927\u200b\u7684\u200b\uff1f\u200b\u90a3\u200b\u600e\u4e48\u529e\u200b\u5462\u200b\uff1f</p> <ol> <li> <p>\u200b\u4e0d\u80fd\u200b\u6392\u5e8f\u200b\uff0c\u200b\u6392\u5e8f\u200b\u4f1a\u200b\u6253\u4e71\u200b\u539f\u6709\u200b\u76f8\u90bb\u200b\u5173\u7cfb\u200b\u3002</p> </li> <li> <p>\u200b\u8fd8\u662f\u200b\u8003\u8651\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u5e8f\u5217\u200b(x, y, z)\uff0c \u200b\u5982\u679c\u200b\u6ee1\u8db3\u200b \uff1a</p> </li> <li> <p>y &gt;= x + z\uff0c \u200b\u5219\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200by\u200b\u800c\u200b\u629b\u5f03\u200bx\u3001z\u3002</p> </li> <li>y &lt; x + z, \u200b\u4e14\u200b x \u200b\u548c\u200b z \u200b\u4e0d\u200b\u76f8\u90bb\u200b\uff0c \u200b\u5219\u200b\u629b\u5f03\u200by\uff0c\u200b\u7ee7\u7eed\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u3002</li> <li> <p>x \u200b\u548c\u200b z \u200b\u76f8\u90bb\u200b\uff0c\u200b\u53ea\u80fd\u200b\u9009\u62e9\u200by\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8f93\u51fa\u200by\u3002</p> </li> <li> <p>\u200b\u5982\u4f55\u200b\u629b\u5f03\u200b\uff1f</p> </li> <li> <p>\u200b\u7f6e\u200b\u96f6\u200b\u3002\u200b\u5c06\u200b\u629b\u5f03\u200b\u7684\u200b\u9009\u62e9\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u503c\u7f6e\u200b\u4e3a\u200b\u96f6\u200b\u3002</p> </li> <li> <p>\u200b\u5982\u4f55\u200b\u5904\u7406\u200b\u9996\u5c3e\u200b\u76f8\u90bb\u200b\u95ee\u9898\u200b\uff1a</p> </li> <li> <p>\u200b\u6dfb\u52a0\u200b\u5224\u65ad\u200b\u8bed\u53e5\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8bbf\u95ee\u200b\u65f6\u200b\u8003\u8651\u200b\u662f\u5426\u200b\u4e3a\u9996\u200b\u90e8\u200b\u6216\u200b\u5c3e\u90e8\u200b\u3002</p> </li> <li> <p>\u200b\u6a21\u957f\u200b\u9664\u4f59\u6cd5\u200b(\u200b\u81ea\u5df1\u200b\u778e\u8d77\u200b\u7684\u200b\u540d\u5b57\u200b)\uff0c\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u4e0b\u6807\u200b x, nums[x]\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200bnums[(x+length-1) % length] \u200b\u548c\u200bnums[(i+1)%length]\u200b\u5fc5\u7136\u200b\u5b58\u5728\u200b\uff08\u200b\u5c31\u662f\u200b\u4e0d\u4f1a\u200b\u6709\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\uff09\u3002</p> </li> <li> <p>\u200b\u5982\u4f55\u200b\u5224\u65ad\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u7684\u200b\u7ed3\u675f\u200b\uff1f</p> </li> <li> <p>\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u5df2\u200b\u9009\u62e9\u200b\u548c\u200b\u5df2\u7ecf\u200b\u629b\u5f03\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u90fd\u200b\u7f6e\u200b\u4e3a\u200b0\uff0c\u200b\u6570\u7ec4\u200b\u5168\u96f6\u5219\u200b\u8f93\u51fa\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b</p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b</p> </li> </ol> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int len = nums.size();\n        int i = 0; // a Loop control variable\n        int max_index = 0;\n        int answer = 0;\n        bool flag = false; // whether this solution gets the answer\n        while(!flag) {\n            max_index = 0;\n            for(i = 1; i &lt; len; i++) { // find the maximum\n                max_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n            }\n            // three situation\n            // for (x, y, z)\n            if (nums[max_index] &gt;= (nums[(max_index + len - 1) % len] + nums[(max_index + 1) % len])){ // y &gt;= x + z\n                answer += nums[max_index];\n                nums[max_index] = 0;\n                nums[(max_index + len - 1) % len] = 0;\n                nums[(max_index + 1) % len] = 0;\n            }else if(3 == len)\n                return nums[1];\n            else // y &lt; x + z &amp;&amp; x and z are not adjacent\n                nums[max_index] = 0;\n\n            // whether gets the answer\n            for (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n                ;\n            flag = (i == len) ? 1 : 0;\n        }\n        //return answer\n        return answer;\n    }\n};\n\n\n//\u200b\u90e8\u5206\u200b\u4f18\u5316\u200b\n\nclass Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int len = nums.size();\n        int i = 0; // a Loop control variable\n        int max_index = 0;\n        int answer = 0;\n        bool flag = false; // whether this solution gets the answer\n        while(!flag) {\n            max_index = 0;\n            for(i = 1; i &lt; len; i++) { // find the maximum\n                max_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n            }\n            // three situation\n            // for (x, y, z)\n            if (nums[max_index] &gt;= (nums[(max_index + len - 1) % len] + nums[(max_index + 1) % len])){ // y &gt;= x + z\n                answer += nums[max_index];\n                nums[max_index] = 0;\n                nums[(max_index + len - 1) % len] = 0;\n                nums[(max_index + 1) % len] = 0;\n            }else if(len &lt; 4)\n                return nums[max_index];\n            else // y &lt; x + z &amp;&amp; x and z are not adjacent\n                nums[max_index] = 0;\n\n            // whether gets the answer\n            for (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n                ;\n            flag = i == len;\n        }\n        //return answer\n        return answer;\n    }\n};\n</code></pre> <p>\u3010\u200b\u81ea\u5df1\u200b\u8c03\u8bd5\u200b\u9636\u6bb5\u200b\u627e\u5230\u200b\u7684\u200b\u9519\u8bef\u200b\u3011</p> <p>\u200b\u6d4b\u8bd5\u200b\u6837\u4f8b\u200b\uff1anums = {1, 3, 4, 3, 3};</p> <p>\u200b\u7b54\u6848\u200b\u5e94\u8be5\u200b\u662f\u200b 7 \u200b\u4f46\u662f\u200b\u8f93\u51fa\u200b\u4e3a\u200b6\uff0c\u200b\u8fd8\u662f\u200b\u5728\u200b\u60c5\u51b5\u200b\u5224\u65ad\u200b\u4e0a\u200b\u5931\u7b56\u200b\u4e86\u200b\uff0c\u200b\u600e\u4e48\u529e\u200b\u5462\u200b\uff1f</p> <p>\u200b\u53c8\u200b\u611f\u89c9\u200b\u8d2a\u5fc3\u200b\u8d70\u200b\u4e0d\u901a\u200b\u4e86\u200b\u3002\u3002\u3002</p> <ol> <li>\u200b\u4e00\u79cd\u200b\u9012\u5f52\u200b\u7684\u200b\u89e3\u51b3\u200b\u65b9\u5f0f\u200b</li> </ol> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt; nums) { \n        int len = nums.size();\n        int max_index = 0;\n        int i = 0;\n\n        for (i = 0; i &lt; len &amp;&amp; !nums[i]; i++)\n            ;\n        if(i == len)\n            return 0;\n\n        max_index = 0;\n        for(i = 1; i &lt; len; i++) { // find the maximum\n            max_index = (nums[max_index] &gt; nums[i]) ? max_index : i;\n        }\n        if(len &lt; 4)\n            return nums[max_index];\n\n        int temp = nums[max_index];\n\n        nums[max_index] = 0;\n        int temp_a = rob(nums);\n\n        nums[(max_index + len - 1) % len] = 0;\n        nums[(max_index + 1) % len] = 0;\n        int temp_b = rob(nums) + temp;\n        //return answer\n        return temp_a &gt; temp_b ? temp_a : temp_b;\n    }\n};\n\n/*\n\u200b\u53ef\u60dc\u200b\u7684\u200b\u662f\u200b\n\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u8d85\u65f6\u200b\u4e86\u200b\u3002\u3002\n\u200b\u5f53\u200b\u6570\u7ec4\u200b\u53d8\u957f\u200b\u65f6\u200b\uff0c\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6700\u5927\u503c\u200b\u90fd\u200b\u8981\u200b\u4e24\u6b21\u200b\u9012\u5f52\u200b\n\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u6210\u200b\u6307\u6570\u200b\u589e\u957f\u200b\uff0c\u200b\u8d39\u65f6\u200b\u8d39\u8d44\u200b\n*/\n</code></pre> <ol> <li>\u200b\u8003\u8651\u200b\u53ef\u80fd\u200b\u8981\u200b\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\uff0c\u200b\u53ef\u662f\u200b\u6211\u200b\u4e0d\u4f1a\u200b\u554a\u200b\u3002\u3002\u3002</li> <li>\u200b\u592a\u96be\u200b\u4e86\u200b\uff0c\u200b\u6211\u200b\u662f\u200b\u5783\u573e\u200b\uff0c\u200b\u5199\u200b\u7684\u200b\u90fd\u200b\u662f\u200b\u5783\u573e\u200b\u3002</li> </ol> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#16-1","title":"16-1 \u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32","text":"<p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#16-2","title":"16-2 \u200b\u9664\u200b\u81ea\u8eab\u200b\u4ee5\u5916\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e58\u79ef","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li> <p>\u200b\u4e0d\u7528\u200b\u9664\u6cd5\u200b\u8fd8\u8981\u200b\u518d\u200bO(n)\u200b\u65f6\u95f4\u200b\u5185\u200b\u5b8c\u6210\u200b(\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b)\uff1f\uff1f</p> </li> <li> <p>\u200b\u521d\u59cb\u5316\u200b\u8f93\u51fa\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5176\u503c\u200b\u4e3a\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u5411\u200b\u5de6\u200b\u79fb\u52a8\u200b\u540e\u200b\u7684\u200b\u503c\u200b\u3002</p> </li> </ol> <p>\u200b\u4f8b\u200b\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a[1, 2, 3, 4]</p> <p>\u200b\u8f93\u51fa\u200b\uff1a[2, 3, 4, 1]</p> <ol> <li>\u200b\u7136\u540e\u200b\uff0c\u200b\u5de6\u79fb\u200b\uff0c\u200b\u6570\u7ec4\u200b\u76f8\u4e58\u200b\uff1f</li> <li>\u200b\u4e0d\u884c\u200b\uff0c\u200b\u9996\u5148\u200b\uff0c\u200b\u6ca1\u6cd5\u200b\u5de6\u79fb\u200b\u53f3\u79fb\u200b\u7684\u200b\uff0c\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u961f\u5217\u200b\uff0c\u200b\u5176\u6b21\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u652f\u6301\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u76f4\u63a5\u200b\u4e58\u200b\u3002</li> </ol> <p>\u3010\u200b\u6709\u6548\u200b\u601d\u8def\u200b\u3011</p> <ol> <li> <p>yauldmar\uff1a\u200b\u6700\u200b\u76f4\u63a5\u200b\u7684\u200b\u60f3\u6cd5\u200b\u5e94\u8be5\u200b\u662f\u200b\uff1a\u200b\u521d\u59cb\u5316\u200b\u7ed3\u679c\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u90fd\u200b\u4fdd\u5b58\u200b\u6240\u6709\u200b\u6570\u200b\u7684\u200b\u4e58\u79ef\u200b\uff0c\u200b\u7136\u540e\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u9664\u4ee5\u200bnums\u200b\u6570\u7ec4\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u6837\u200b\u6700\u5927\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u200b\u5982\u679c\u200b\u6570\u7ec4\u200b\u5b58\u5728\u200b0\uff0c\u200b\u5c31\u200b\u6709\u200b\u95ee\u9898\u200b\u4e86\u200b\uff0c\u200b\u800c\u4e14\u200b\u9898\u76ee\u200b\u4e2d\u200b\u660e\u786e\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u4f7f\u7528\u200b\u9664\u6cd5\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u601d\u8def\u200b\u6392\u9664\u200b\u3002</p> </li> <li> <p>\u200b\u90a3\u4e48\u200b\u6211\u200b\u8003\u8651\u200b\u5c06\u200b\u8f93\u51fa\u200b\u6570\u7ec4\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b\u5168\u200b1\u200b\u6570\u7ec4\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u4e34\u65f6\u200b\u7684\u200b\u79ef\u200btemp\uff0c\u200b\u521d\u59cb\u503c\u200b\u4e3a\u200b\u4e00\u200b\uff0c\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u200b\u8bbf\u95ee\u200b\u4e00\u4e2a\u200bnums[i]\uff0ctemp\u200b\u5c31\u200b\u4e58\u4ee5\u200bnums[i]\uff0c\u200b\u7136\u540e\u200bout[i+1]\u200b\u4e58\u4ee5\u200btemp\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\u4e0d\u80fd\u200b\u8d8a\u754c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5faa\u73af\u200b\u6761\u4ef6\u200b\u662f\u200b  i &lt; nums.size() - 1\u3002</p> </li> </ol> <p>[a, b, c, d], [1, 1, 1, 1]</p> <p>[1, 1, 1, 1] ==&gt; [1, a, ab, abc]</p> <ol> <li> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b (2.) \u200b\u53cd\u8fc7\u6765\u200b\u6267\u884c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u7b54\u6848\u200b\u5566\u200b\uff01</p> </li> <li> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b:O(2n) = O(n)</p> </li> <li> <p>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b:O(1)</p> </li> <li> <p>\u200b\u4ee3\u7801\u200b</p> </li> </ol> <pre><code>// 1.0\nclass Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; ans(nums.size(),1);\n        int temp = 1, len = nums.size();\n\n        for(int i = 0; i &lt; len - 1; i++){\n            temp *= nums[i];\n            ans[i + 1] *= temp;\n        }\n        temp = 1;\n        for(int i = len - 1; i &gt; 0 ; i--){\n            temp *= nums[i];\n            ans[i - 1] *= temp;\n        }\n\n        return ans;\n    }\n};\n\n/*\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u901a\u8fc7\u200b\n\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a24 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b83.25%\u200b\u7684\u200b\u7528\u6237\u200b\n\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a23.3 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b85.40%\u200b\u7684\u200b\u7528\u6237\u200b\n*/\n</code></pre> <p>\u200b\u611f\u8c22\u200byauldmar, \u200b\u8ba9\u200b\u6211\u200b\u53d1\u73b0\u200bC\u3001\u200b\u4e24\u4e2a\u200bfor\u200b\u5faa\u73af\u200b\u8bed\u53e5\u200b\u5176\u5b9e\u200b\u80fd\u200b\u6574\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u3002</p> <pre><code>//1.1\nclass Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; ans(nums.size(),1);\n        int left = 1, right = 1, len = nums.size();\n\n        for(int i = 0; i &lt; len - 1; i++){\n            left *= nums[i];\n            right *= nums[len - 1 - i];\n            ans[i + 1] *= left;\n            ans[len - i - 2] *= right;\n        }\n\n        return ans;\n    }\n};\n</code></pre> <ol> <li>\u200b\u81ea\u6211\u200b\u601d\u8def\u200b\u6700\u7ec8\u200b\u60f3\u6cd5\u200b</li> </ol> <p>\u200b\u6613\u8bc1\u200b\uff0c\u200b\u82e5\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5b58\u5728\u200b\u4e24\u4e2a\u200b\u4e3a\u200b\u96f6\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5219\u200b\u8f93\u51fa\u200b\u6570\u7ec4\u200b\u4e00\u5b9a\u200b\u662f\u200b\u5168\u96f6\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>//2.0\n#include&lt;algorithm&gt;\nclass Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        if(count(nums.begin(), nums.end(), 0) &gt; 1)\n            return vector&lt;int&gt;(nums.size(), 0);\n\n        vector&lt;int&gt; ans(nums.size(),1);\n        int left = 1, right = 1, len = nums.size();\n\n        for(int i = 0; i &lt; len - 1; i++){\n            left *= nums[i];\n            right *= nums[len - 1 - i];\n            ans[i + 1] *= left;\n            ans[len - i - 2] *= right;\n        }\n\n        return ans;\n    }\n};\n/*\n\u200b\u53c2\u8003\u200b\u8bc4\u4ef7\u200b\n\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u901a\u8fc7\u200b\n\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a20 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b94.43%\u200b\u7684\u200b\u7528\u6237\u200b\n\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a23.3 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b90.47%\n\u200b\u7684\u200b\u7528\u6237\u200b\n*/\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011\u3010\u200b\u6211\u200b\u7684\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#17-iii","title":"17 \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b III","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u52a0\u4e2a\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff1f\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200bO(n^2)\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector&lt;int&gt;&amp; nums, int k, int t) {\n\n        for(int i = 0; i &lt; nums.size() ;i++)\n            for(int j = i + 1; j &lt; i + k + 1 &amp;&amp; j &lt; nums.size(); j++){\n                if(abs(nums[i] - nums[j]) &lt;= t)\n                    return true;\n            }\n        return false;\n    }\n};\n</code></pre> <ol> <li> <p>\u200b\u7b2c\u4e00\u200b\uff0c\u200b\u6ca1\u200b\u6ce8\u610f\u200b\u5206\u6790\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\uff0cint\u200b\u4e0d\u591f\u200b\u957f\u200b</p> <p>[-2147483648,2147483647] 1 1</p> <p>\u200b\u6d4b\u8bd5\u200b\u6837\u4f8b\u200b\u4e0d\u200b\u901a\u8fc7\u200b</p> <p>\u200b\u6539\u7248\u200b</p> <pre><code>class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector&lt;int&gt;&amp; nums, int k, int t) {\n\n        for(int i = 0; i &lt; nums.size() ;i++)\n            for(int j = i + 1; j &lt; i + k + 1 &amp;&amp; j &lt; nums.size(); j++){\n                if(abs((long long int)nums[i] - (long long int)nums[j]) &lt;= t)\n                    return true;\n            }\n        return false;\n    }\n};\n</code></pre> <p>\u200b\u8fd8\u662f\u200b\u9519\u8bef\u200b\u7684\u200b\uff0c\u200b\u6ca1\u200b\u6ce8\u610f\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u9650\u5236\u200b\uff0cO(n^2) \u200b\u8d85\u65f6\u200b\u3002</p> </li> <li> <p>\u200b\u8003\u8651\u200b\u53e6\u5916\u200b\u4e00\u79cd\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5148\u200b\u6392\u5e8f\u200b\uff0c\u200b\u7136\u540e\u200b\u770b\u524d\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u5c31\u884c\u4e86\u200b\u3002</p> </li> <li>\u200b\u4e0d\u884c\u200b\uff01\u200b\u7edd\u5bf9\u200b\u4e0d\u884c\u200b\uff0c\u200b\u6392\u5e8f\u200b\u4f1a\u200b\u6253\u4e71\u200b\u539f\u6709\u200b\u7684\u200b\u6570\u7ec4\u200b\u5e8f\u200b\uff0c\u200b\u4e0d\u200b\u7b26\u5408\u200b\u9898\u610f\u200b\u8981\u6c42\u200b\u3002</li> </ol> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#18","title":"18 \u200b\u5220\u9664\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u6b64\u200b\u9898\u4e3a\u200b06\u200b\u65e5\u200b\u505a\u200b\u7684\u200b\u9898\u200b\u7684\u200b\u524d\u8eab\u200b\u7248\u672c\u200b\uff0c\u200b\u6211\u200b\u7684\u200b\u601d\u8def\u200b\u8fd8\u662f\u200b\u548c\u200b\u5220\u9664\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u91cd\u590d\u200b\u7684\u200b\u4e00\u6837\u200b\u3002</li> </ol> <p>\u3010\u200b\u53cc\u200b\u6307\u9488\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums) {\n        if(nums.size() &lt; 2) // \u200b\u9898\u9762\u200b\u6709\u200b\u8bf4\u200b\u6570\u7ec4\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\n            return nums.size(); \n\n        int j = 0;\n        nums.push_back(10001); // \u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u4e4b\u5916\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u7528\u4f5c\u200b\u6700\u540e\u200b\u7684\u200b i + 1\n        for(int i = 0; i &lt; nums.size() - 1; i++)\n            if(nums[i] != nums[i+1])\n                nums[j++] = nums[i];\n        return j;\n    }\n};\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p> <p>\u3010\u200b\u603b\u7ed3\u200b\u5fc3\u5f97\u200b\u3011</p> <ul> <li>\u200b\u591a\u591a\u200b\u6ce8\u610f\u200b\u9898\u9762\u200b\u4fe1\u606f\u200b\uff0c\u200b\u9898\u76ee\u200b\u5f80\u5f80\u200b\u90fd\u200b\u4e0d\u4f1a\u9519\u200b\uff0c\u200b\u597d\u597d\u200b\u7406\u89e3\u200b\u9898\u76ee\u200b\u610f\u601d\u200b\uff0c\u200b\u89c2\u5bdf\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u3002</li> </ul>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#19","title":"19 \u200b\u79fb\u9664\u200b\u5143\u7d20","text":"<p>\u3010\u200b\u53cc\u200b\u6307\u9488\u200b\u3011</p> <p>\u3010\u200b\u4ee3\u7801\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int index = 0;\n        if(nums.size()){ // \u200b\u6570\u7ec4\u200b\u6709\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\u56e0\u6b64\u200b\u8981\u200b\u5224\u65ad\u200b\u4e00\u4e0b\u200b\n            for(int i = 0; i &lt; nums.size(); ++i)\n                if(nums[i] != val)\n                    nums[index++] = nums[i];\n        }else\n            return 0;\n        return index;\n    }\n};\n\n//\u200b\u6539\u8fdb\u200b\nclass Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int index = 0;\n        //\u200b\u6570\u7ec4\u200b\u7a7a\u200b\u4e0d\u200b\u6ee1\u8db3\u200bfor\u200b\u7684\u200b\u6761\u4ef6\u200b\u8bed\u53e5\u200b\n        for(int i = 0; i &lt; nums.size(); ++i)\n            if(nums[i] != val)\n                nums[index++] = nums[i];\n\n        return index;\n    }\n};\n\n/* \u200b\u53c2\u8003\u200b\u8bc4\u4ef7\u200b\n\u200b\u6267\u884c\u200b\u7528\u65f6\u200b\uff1a0 ms, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b100.00%\u200b\u7684\u200b\u7528\u6237\u200b\n\u200b\u5185\u5b58\u200b\u6d88\u8017\u200b\uff1a8.3 MB, \u200b\u5728\u200b\u6240\u6709\u200b C++ \u200b\u63d0\u4ea4\u200b\u4e2d\u200b\u51fb\u8d25\u200b\u4e86\u200b99.26%\u200b\u7684\u200b\u7528\u6237\u200b\n*/\n</code></pre> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#20-strstr","title":"20\u200b\u5b9e\u73b0\u200b strStr()","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#21","title":"21\u200b\u89e3\u7801\u200b\u65b9\u6cd5","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/April_2021/#22-k","title":"22 \u200b\u77e9\u5f62\u200b\u533a\u57df\u200b\u4e0d\u200b\u8d85\u8fc7\u200b K \u200b\u7684\u200b\u6700\u5927\u200b\u6570\u503c\u200b\u548c","text":"<p>\u3010\u200b\u5ba1\u9898\u200b\u3011</p> <ol> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b\u603b\u4f1a\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u6570\u503c\u200b\u548c\u200b\u4e0d\u200b\u8d85\u8fc7\u200b <code>k</code> \u200b\u7684\u200b\u77e9\u5f62\u200b\u533a\u57df\u200b\u3002</li> <li>\u200b\u8fd4\u56de\u503c\u200b\u4e3a\u200b\u4e0d\u200b\u8d85\u8fc7\u200b<code>k</code>\u200b\u7684\u200b\u6700\u5927\u200b\u6570\u503c\u200b\u548c\u200b\u3002</li> <li>\u200b\u9898\u76ee\u200b\u6240\u200b\u7ed9\u200b\u7684\u200b\u4fe1\u606f\u200b\u5f88\u5c11\u200b\u3002</li> </ol>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/","title":"March 2021","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#02","title":"02 \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u200b\u957f\u5b50\u200b\u7a9c","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u4ece\u9996\u200b\u5b57\u7b26\u200b\u5f00\u59cb\u200b\u589e\u52a0\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5f80\u540e\u200b\u6bcf\u4e2a\u200b\u5b57\u7b26\u200b\u5f97\u200b\u5148\u200b\u770b\u200b\u662f\u5426\u200b\u5728\u200b\u5b50\u4e32\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u8fc7\u200b\uff0c\u200b\u540c\u65f6\u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200bCurrentLength\u200b\u4ee5\u53ca\u200b\u6700\u957f\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200bMaxLength\u3002</li> <li>\u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u5219\u200b\u4ece\u9996\u200b\u5b57\u7b26\u200b\u7684\u200b\u4e0b\u200b\u4e00\u200b\u5b57\u7b26\u200b\u5f00\u59cb\u200b\uff0c\u200b\u91cd\u590d\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u76f4\u5230\u200b\u7b97\u200b\u51fa\u200b\u6700\u957f\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200b\u3002</li> </ol> <p>\u3010\u200b\u5173\u952e\u200b\u4f18\u5316\u200b\u3011</p> <ol> <li>\u200b\u548c\u200bKMP\u200b\u7b97\u6cd5\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u65f6\u200b\uff0c\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u4e4b\u524d\u200b\u7684\u200b\u5b57\u7b26\u200b\u65e0\u9700\u200b\u518d\u200b\u8fdb\u884c\u200b\u6b65\u9aa4\u200b\u4e00\u200b\uff0c\u200b\u76f4\u63a5\u200b\u6539\u4e3a\u200b\u4ece\u200b\u8be5\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u4e4b\u540e\u200b\u7684\u200b\u5b57\u7b26\u200b\u4f5c\u4e3a\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u7684\u200b\u9996\u200b\u5b57\u7b26\u200b\uff0c\u200b\u540c\u65f6\u200b\u5bf9\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b\u8fdb\u884c\u200b\u524a\u51cf\u200b\u3002\u200b\u7136\u540e\u200b\u7ee7\u7eed\u200b\u7ed9\u200b\u5b50\u4e32\u200b\u52a0\u200b\u5b57\u7b26\u200b\u800c\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u518d\u200b\u91cd\u590d\u200b\u591a\u4f59\u200b\u6b65\u9aa4\u200b\u3002    \u200b\u4f8b\u5b50\u200b\uff1a     s = \"abcdefgdcba921\"    c = \"abcdefg\" char = 'd' \u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u65f6\u200b    cl = 7, maxl = 7    \u200b\u4ee4\u200b c = \"efgd\", cl = cl + 0(a) - 3(d) = 4    \u200b\u6700\u540e\u200b c = \"efgdcba921\" cl = 10, maxl = 10</li> <li>\u200b\u5f53\u200b\u6700\u957f\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b\u7b49\u7269\u200b\u5f53\u524d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u80fd\u200b\u8fbe\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u65f6\u200b\uff0c\u200b\u65e0\u9700\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8f93\u51fa\u200b\u6700\u5927\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b50\u4e32\u200b\u957f\u5ea6\u200b\u3002\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5c31\u200b\u5f88\u200b\u597d\u200b\u7406\u89e3\u200b\u3002    \u200b\u4f8b\u5b50\u200b\uff1a    s = \"abcce\"    c = \"abc\", char = 'c'    cl = 3, maxl = 3    \u200b\u7ecf\u8fc7\u200b\u7b2c\u4e00\u6b65\u200b\u4f18\u5316\u200b    c = \"c\" , char = 'e'    cl = 1, maxl = 3, cl(max) = 2 &lt; maxl    \u200b\u6545\u200bmaxl = 3\u3002</li> </ol> <p>\u3010\u200b\u4ee3\u7801\u200b\u5f85\u8865\u200b\u3011 \u200b\u4ed4\u7ec6\u200b\u60f3\u200b\u4e86\u200b\u4e00\u4e0b\u200b\u601d\u8def\u200b\uff0c\u200b\u4f46\u200b\u9274\u4e8e\u200b\u590d\u4e60\u200b\u8ba1\u7ec4\u200b\u53ef\u80fd\u200b\u6ca1\u200b\u65f6\u95f4\u200b\u5199\u200b\u4ee3\u7801\u200b\uff0c\u200b\u65e5\u540e\u200b\u8865\u200b\u4e0a\u200b\u4ee3\u7801\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#03","title":"03 \u200b\u5bfb\u627e\u200b\u4e24\u4e2a\u200b\u6b63\u5e8f\u200b\u6570\u7ec4\u200b\u7684\u200b\u4e2d\u4f4d\u6570","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u88ab\u200b\u5b83\u200b\u9a97\u200b\u5f97\u200b\u53bb\u200b\u5408\u5e76\u200b\u6570\u7ec4\u200b\uff08\u200b\u8bef\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6307\u5b9a\u200b\u633a\u200b\u9ebb\u70e6\u200b\uff09    \u200b\u4f46\u200b\u5176\u5b9e\u200b\u6211\u200b\u81ea\u5df1\u200b\u7684\u200b\u601d\u8def\u200b\u66f4\u200b\u9ebb\u70e6\u200b\u3002</li> <li>\u200b\u53ee\u53ee\u200b\uff0c\u200b\u5c31\u662f\u200b\u8981\u200b\u627e\u200b\u4e2d\u4f4d\u6570\u200b\u561b\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u53bb\u200b\u6570\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e24\u4e2a\u200b\u6570\u5217\u200b\u672c\u8eab\u200b\u90fd\u200b\u662f\u200b\u6709\u5e8f\u200b\u7684\u200b\uff0c\u200b\u53ea\u8981\u200b\u628a\u200b\u6bd4\u200b\u4e2d\u4f4d\u6570\u200b\u5c0f\u200b\u7684\u200b\u90a3\u4e9b\u200b\u6570\u200b\u5168\u90e8\u200b\u627e\u200b\u51fa\u6765\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\u3002\u200b\u4e3e\u4e2a\u200b\ud83c\udf30\uff1a    1\uff0c2\uff0c4 m = 3    3\uff0c5 n = 2    m+n=5 5/2=2 \u200b\u8fd9\u4e2a\u200b\u503c\u200b\u53ef\u4ee5\u200b\u8bb0\u200b\u4e3a\u200bflag    \u200b\u90a3\u200b\u5c31\u8981\u200b\u5148\u627e\u200b\u4e24\u4e2a\u200b\u5c0f\u200b\u7684\u200b\uff0c\u200b\u663e\u7136\u200b\uff0c1\u200b\u548c\u200b2\uff0c    \u200b\u5177\u4f53\u200b\u4e00\u70b9\u200b    1\u200b\u548c\u200b3\u200b\u6bd4\u8f83\u200b\u4e00\u4e0b\u200b\uff0c1\u200b\u66f4\u200b\u5c0f\u200b\uff0cm\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u52a0\u4e00\u200b    2\u200b\u548c\u200b3\u200b\u6bd4\u8f83\u200b\u4e00\u4e0b\u200b\uff0c2\u200b\u66f4\u200b\u5c0f\u200b\uff0cm\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u52a0\u4e00\u200b    \u200b\u6b64\u65f6\u200b\uff0c\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u4e86\u200b\u5bf9\u200b\u4e2d\u4f4d\u6570\u200b\u4e4b\u524d\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u5254\u9664\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u73b0\u5728\u200b\u5c31\u662f\u200b\u8981\u200b\u627e\u51fa\u200b\u4e2d\u4f4d\u6570\u200b\u4e86\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b3\u200b\u548c\u200b4\u200b\u7684\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u9009\u62e9\u200b\u8f83\u200b\u5c0f\u9879\u200b\u5373\u53ef\u200b\u3002\u200b\u90a3\u4e48\u200b\u4e2d\u4f4d\u6570\u200b\u5c31\u662f\u200b3\u3002    \\March_2021\\3. m\u200b\u548c\u200bn\u200b\u7684\u200b\u548c\u200b\u4e3a\u200b\u5947\u6570\u200b\u65f6\u200b\uff0c\u200b\u6309\u7167\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u770b\u8d77\u6765\u200b\u6ca1\u200b\u95ee\u9898\u200b\uff0c\u200b\u90a3\u4e48\u200b\u548c\u200b\u4e3a\u200b\u5076\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5462\u200b\uff1f    \u200b\u4e3e\u4e2a\u200b\ud83c\udf30\uff1a    1\uff0c2\uff0c4    3\uff0c5\uff0c6    \u200b\u540c\u6837\u200b\u7ecf\u8fc7\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u7684\u8bdd\u200b\uff0c    \u200b\u56e0\u4e3a\u200bm+n=6\uff0c6/2=3\uff0c    \u200b\u6700\u540e\u200b\u6bd4\u8f83\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6570\u5c06\u4f1a\u200b\u662f\u200b4\u200b\u548c\u200b5    \u200b\u5076\u6570\u200b\u4e2a\u6570\u200b\u627e\u200b\u4e2d\u4f4d\u6570\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u4e2d\u95f4\u200b\u4e24\u4e2a\u200b\u6570\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u5c31\u200b\u5e94\u8be5\u200b\u662f\u200b3\u200b\u548c\u200b4\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u53ef\u662f\u200b\u6700\u540e\u200b\uff08\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u5bf9\u5e94\u200b\uff09\u200b\u6307\u5411\u200b\u7684\u200b\u5374\u662f\u200b4\u200b\u548c\u200b5\u3002    \u200b\u9010\u6b65\u200b\u5206\u6790\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u6211\u4eec\u200b\u5254\u9664\u200b\u4e86\u200b\u4e09\u4f4d\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u6570\u636e\u200b3\u200b\u662f\u200b\u6700\u540e\u200b\u5254\u9664\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u5176\u4e3a\u200b\u6709\u7528\u200b\u6570\u636e\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u5e94\u8be5\u200b\u5c06\u200b\u5176\u200b\u5254\u9664\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\uff0c\u200b\u5254\u9664\u200b\u6b21\u6570\u200b\u5c31\u200b\u5e94\u8be5\u200b\u51cf\u4e00\u200b\uff0c    \u200b\u5373\u200b m+n/2 - 1\u3002    \uff08\u200b\u5c0f\u200b\u4f18\u5316\u200b\uff0c\u200b\u51cf\u5c11\u200b\u91cd\u590d\u200b\u4ee3\u7801\u200b\uff09    \u200b\u8fdb\u4e00\u6b65\u200b\u89c2\u5bdf\u200b\u53d1\u73b0\u200b\uff0cm+n\u200b\u4e3a\u200b5\u200b\u548c\u200b6\u200b\u65f6\u200b\u7684\u200b\u5254\u9664\u200b\u6b21\u6570\u200b\u76f8\u540c\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u5c0f\u200b\u5947\u6570\u200b\u548c\u200b\u5927\u200b\u5076\u6570\u200b\u7684\u200b\u5254\u9664\u200b\u6b21\u6570\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\uff0c\u200b\u5254\u9664\u200b\u8fc7\u7a0b\u200b\u5b8c\u5168\u200b\u53ef\u4ee5\u200b\u65e0\u89c6\u200b\u5947\u5076\u6027\u200b\uff0c\u200b\u5373\u200b    \u200b\u5254\u9664\u200b\u6b21\u6570\u200b flag = (m+n-1)/2\u3002</li> </ol> <p>\u3010\u200b\u5b58\u5728\u200b\u95ee\u9898\u200b\u53ca\u200b\u89e3\u51b3\u529e\u6cd5\u200b\u3011</p> <ol> <li> <p>\u200b\u4e0a\u8ff0\u200b\u8fc7\u7a0b\u200b\u5ffd\u7565\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5373\u200b\u4e24\u200b\u6570\u7ec4\u200b\u4e2d\u6709\u200b\u4e00\u200b\u6570\u7ec4\u200b\u8fc7\u5206\u200b\u957f\u200b\u4e86\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u5728\u200b\u5254\u9664\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u3002</p> </li> <li> <p>\u200b\u9519\u8bef\u200b\u89e3\u51b3\u529e\u6cd5\u200b\uff1a\u200b\u5ffd\u89c6\u200b\u8f83\u200b\u77ed\u200b\u6570\u7ec4\u200b\u6570\u636e\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5c06\u200b\u5176\u200b\u957f\u5ea6\u200b\u52a0\u5230\u200b\u957f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u901a\u8fc7\u200b\u7b80\u5355\u200b\u65b9\u6cd5\u200b\u76f4\u63a5\u200b\u6c42\u200b\u4e2d\u4f4d\u6570\u200b\u3002\u200b\u60f3\u200b\u51fa\u200b\u8fd9\u79cd\u200b\u9519\u8bef\u200b\u65b9\u6848\u200b\u4e3b\u8981\u200b\u539f\u56e0\u200b\u662f\u200b\uff1a\u200b\u5355\u7eaf\u200b\u7684\u200b\u8ba4\u4e3a\u200b\uff0c\u200b\u957f\u200b\u6570\u7ec4\u200b\u7684\u200b\u5b58\u5728\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6570\u636e\u200b\u8d8a\u754c\u200b\uff0c\u200b\u800c\u200b\u5ffd\u89c6\u200b\u4e86\u200b\u77ed\u200b\u6570\u7ec4\u200b\u5185\u200b\u6570\u636e\u200b\u7684\u200b\u91cd\u8981\u6027\u200b\u3002</p> </li> <li> <p>\u200b\u89e3\u51b3\u529e\u6cd5\u200b\uff1a\u200b\u5f53\u8981\u200b\u53d1\u751f\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b\u65f6\u200b\uff08\u200b\u6dfb\u52a0\u200b\u5faa\u73af\u200b\u6761\u4ef6\u200b\uff09\uff0c\u200b\u8df3\u51fa\u200b\u6bd4\u8f83\u200b\u5254\u9664\u200b\u6570\u636e\u200b\u5faa\u73af\u200b\uff0c\u200b\u6539\u4e3a\u200b\u76f4\u63a5\u200b\u4ece\u957f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u627e\u5230\u200b\u4e2d\u4f4d\u6570\u200b       \ud83c\udf30 \uff1a       1\uff0c2 m = 2       3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c11\uff0c111 n=12</p> </li> <li> <p>\u200b\u76f4\u63a5\u200b\u5bfb\u627e\u200b\u65b9\u6cd5\u200b\uff08\u200b\u5f97\u200b\u5148\u200b\u5224\u65ad\u200b\u54ea\u4e2a\u200b\u662f\u200b\u957f\u200b\u6570\u7ec4\u200b\uff09</p> <p>flag\uff08\u200b\u539f\u503c\u200b\u4e3a\u200b6\uff0c\u200b\u6bcf\u200b\u5254\u9664\u200b\u4e00\u6b21\u200b\u5c31\u200b\u51cf\u4e00\u200b\uff0c\u200b\u4e3a\u200b\u96f6\u5219\u200b\u8868\u793a\u200b\u5254\u9664\u200b\u5b8c\u200b\u4e86\u200b\uff0c\u200b\u7528\u4f5c\u200b\u5254\u9664\u200b\u5faa\u73af\u200b\u7684\u200b\u5faa\u73af\u200b\u6761\u4ef6\u200b\uff09 \u200b\u7ecf\u8fc7\u200b\u4e24\u6b21\u200b\u5254\u9664\u200b\u540e\u200b\u53d8\u4e3a\u200b4\u3002   \u200b\u957f\u200b\u6570\u7ec4\u200b\u6b64\u65f6\u200b\u4e0b\u6807\u200b\u4e3a\u200b0   \u200b\u5219\u200b\u4e0b\u6807\u200b+4\u200b\u4e3a\u200b4\uff0cOK\uff0c\u200b\u8fdb\u5165\u200b\u8ba1\u7b97\u200b\u4e2d\u4f4d\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u548c\u200b\u4e3a\u200b\u5076\u6570\u200b\uff0c\u200b\u957f\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b4\u200b\u548c\u200b\u4e0b\u6807\u200b5\u200b\u7684\u200b\u6570\u636e\u200b\u4e4b\u200b\u548c\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b7\u200b\u548c\u200b8\u200b\u7684\u200b\u5e73\u5747\u503c\u200b7.5\u3002</p> </li> </ol> <p>\u200b\u59d1\u4e14\u200b\u60f3\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\uff0c\u200b\u6253\u5b57\u200b\u6253\u200b\u4e86\u200b\u534a\u5929\u200b\u3002\u3002\u3002\u3002</p> <p>\u3010\u200b\u4ee3\u7801\u200b\u5f85\u8865\u200b\u3011</p> <p>\u200b\u54e6\u200b\uff0c\u200b\u5b9e\u9645\u200b\u8fd8\u8981\u200b\u8003\u8651\u200b\u7a7a\u200b\u6570\u7ec4\u200b\u4ee5\u53ca\u200b\u6570\u636e\u200b\u76f8\u7b49\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5f97\u200b\u7b49\u200b\u4e0a\u200b\u624b\u5199\u200b\u4e86\u200b\u4ee3\u7801\u200b\u624d\u200b\u77e5\u9053\u200b\u5177\u4f53\u60c5\u51b5\u200b\u5982\u4f55\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#04","title":"04 \u200b\u6b63\u6574\u6570\u200b\u62c6\u5206","text":"<p>\u3010\u200b\u5f85\u8865\u200b\u3011</p> <pre><code>// \u200b\u540c\u5b66\u200b\u7684\u200b\u4ee3\u7801\u200b\n#include&lt;stdio.h&gt;\nint a[100], n;\nvoid rep(int k, int m, int t){\n    for(int i = m; i &gt; 0; i--)\n        if(k - i == 0){\n            a[t] = i;\n            printf(\"%d=\", n);\n            for(int j = 0; j &lt; t; j++)\n                printf(\"%d+\", a[j]);\n            printf(\"%d\\n\", a[t]);\n    }else if(k - i &gt; 0){\n        a[t] = i;\n        rep(k - i, i, t + 1);\n    }\n}\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#22","title":"22 \u200b\u5de6\u200b\u65cb\u8f6c\u200b\u5b57\u7b26\u4e32","text":"<p>\u3010\u200b\u521d\u59cb\u200b\u601d\u8def\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        int length = s.length();\n        string ans = s;\n        for(int i = 0, j = n; i &lt;  length ; i++){\n            ans[i] = s[j];\n            j = (j + 1) % length;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7684\u200b\u53e6\u7c7b\u200b\u65b9\u6cd5\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        return s.substr(n,s.length()-n)+(s.substr(0,n));\n        // \u200b\u76f4\u63a5\u200b\u8c03\u7528\u200bstring\u200b\u5e93\u200b~ \uff08\u200b\u6211\u200b\u89c9\u5f97\u200b\u9898\u76ee\u200b\u53ef\u80fd\u200b\u4e0d\u8ba9\u200b\u6211\u200b\u8fd9\u4e48\u200b\u505a\u200b\uff09\n    }\n};\n</code></pre> <p>\u3010\u200b\u57fa\u4e8e\u200b\u8bc4\u8bba\u200b\u533a\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3011</p> <pre><code>class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        return (s+s.substr(0,n)).substr(n,s.length());\n    }\n};\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#29","title":"29 \u200b\u98a0\u5012\u200b\u4e8c\u8fdb\u5236\u4f4d","text":"<p>\u200b\u5de6\u53f3\u200b\u79fb\u4f4d\u200b\u6307\u5b9a\u200b\u4e0d\u884c\u200b\u3002 \u200b\u6570\u636e\u200b\u58f0\u660e\u200b\u540e\u8981\u200b\u8bb0\u5f97\u200b\u521d\u59cb\u5316\u200b\uff01\uff01\uff01 \u200b\u521d\u59cb\u5316\u200b\uff01\uff01</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#30","title":"30 \u200b\u641c\u7d22\u200b\u4e8c\u7ef4\u200b\u77e9\u9635","text":"<p>\u3010\u200b\u601d\u8def\u200b\u3011</p> <ol> <li>\u200b\u5148\u200b\u6309\u884c\u200b\u641c\u7d22\u200b\uff0c\u200b\u627e\u5230\u200b\u5bf9\u5e94\u200b\u884c\u200b\u3002</li> <li>\u200b\u518d\u200b\u6309\u5217\u200b\u4e00\u4e2a\u200b\u4e00\u4e2a\u200b\u6bd4\u8f83\u200b\u3002</li> </ol> <pre><code>class Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        int row = 1, col = 0;\n\n        for(;row &lt; matrix.size(); row++){\n            if( target &lt; matrix[row][0])\n                break;\n        }\n        row--;\n        for(;col &lt; matrix[row].size(); col++){\n            if(target == matrix[row][col])\n                return true;\n        }\n        return false;\n    }\n};\n</code></pre> <p>\u3010\u200b\u9519\u8bef\u200b\u3011</p> <ol> <li>\u200b\u641c\u7d22\u200b\u884c\u65f6\u200b\u884c\u200b\u4e0b\u6807\u200brow\u200b\u5fd8\u8bb0\u200b-1\u3002</li> <li>\u200b\u641c\u7d22\u200b\u884c\u65f6\u200b\u63d0\u524d\u200b\u5224\u65ad\u200b\u6bcf\u884c\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u662f\u5426\u200b\u4e3a\u200btarget\uff0c\u200b\u81ea\u200b\u4ee5\u4e3a\u200b\u80fd\u591f\u200b\u65b9\u4fbf\u200b\u540e\u7eed\u200b\u7684\u200b\u5217\u200b\u67e5\u8be2\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5217\u200b\u67e5\u8be2\u200b\u7684\u200bcol\u200b\u4e0b\u6807\u200b\u521d\u59cb\u503c\u200b\u4e3a\u200b1\uff0c\u200b\u5bfc\u81f4\u200b\u5982\u679c\u200b\u77e9\u9635\u200b\u53ea\u6709\u200b\u4e00\u884c\u200b\uff0c\u200b\u4e0d\u200b\u6267\u884c\u200b\u884c\u200b\u641c\u7d22\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u5ffd\u7565\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5c0f\u200b\u7ec6\u8282\u200b\uff0c\u200b\u5927\u200b\u6bdb\u75c5\u200b\uff01</li> </ol> <p>\u3010\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u7684\u200b\u7b56\u7565\u200b\u3011</p> <ol> <li>\u200b\u5c06\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b\u7684\u200b\u4e0b\u6807\u200b\u4e00\u7ef4\u200b\u5316\u200b\uff0c\u200b\u8fdb\u884c\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u3002</li> <li>\u200b\u5206\u6b65\u200b\u5bf9\u200b\u884c\u5217\u200b\u8fdb\u884c\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u3002</li> </ol> <pre><code>//\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\nclass Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        int col = matrix[0].size();\n        int low = 0, high = matrix.size() * col - 1;\n        int mid = 0;\n\n        while (low &lt;= high){\n            mid = (low+high)/2 ;\n            if(target == matrix[mid / col][mid % col])\n                return true;\n            else if (target &lt; matrix[mid / col][mid % col])\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        return false;\n    }\n};\n\n// \u200b\u5206\u6b65\u200b\u7684\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u7b56\u7565\u200b\nclass Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        //\u200b\u884c\u5217\u200b\u5206\u6b65\u200b\uff0c\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b \n        int low = 0, high = matrix.size() - 1;\n        int mid = 0, row = 0;\n\n        while (low &lt;= high){\n            mid = (low+high)/2 ;\n            if(target == matrix[mid][0])\n                return true;\n            else if (target &lt; matrix[mid][0])\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        row = (mid == high) ? mid : high;\n        if(row &lt; 0)\n            return false;\n        low = 0;\n        high = matrix[0].size() - 1;\n\n        while (low &lt;= high){\n            mid = (low+high)/2 ;\n            if(target == matrix[row][mid])\n                return true;\n            else if (target &lt; matrix[row][mid])\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        return false;\n    }\n};\n</code></pre> <p>\u3010\u200b\u95ee\u9898\u200b\u3011</p> <ol> <li>\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u7684\u200b\u6761\u4ef6\u200b\u662f\u200blow&lt;=high\uff0c\u200b\u4e0d\u8981\u200b\u5fd8\u8bb0\u200b\u7b49\u200b\u53f7\u200b\u3002</li> <li>row_index = mid / col\uff0ccol_index = mid % col </li> <li>\u200b\u5206\u6b65\u200b\u4e8c\u5206\u200b\u641c\u7d22\u200b\u65f6\u8981\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u540c\u65f6\u200b\u8981\u200b\u6ce8\u610f\u200b\u6709\u200brow&lt;0\u200b\u7684\u200bfalse\u200b\u60c5\u51b5\u200b\u3002</li> </ol> <p>\u3010\u200b\u8bc4\u8bba\u200b\u533a\u200b\u83b7\u5f97\u200b\u7684\u200b\u65b0\u200b\u77e5\u8bc6\u200b\u3011</p> <ol> <li>\u200b\u5229\u7528\u200b\u77e9\u9635\u200b\u5347\u5e8f\u200b\u7684\u200b\u7279\u6027\u200b\u4ece\u200b\u53f3\u4e0a\u89d2\u200b\u6216\u200b\u5de6\u4e0b\u89d2\u200b\u5f00\u59cb\u200b\u5207\u5165\u200b\u3002</li> </ol> <p>\u3010\u200b\u7c7b\u6bd4\u200b\u3011</p> <ol> <li>\u200b\u5982\u679c\u200b\u662f\u200b\u964d\u5e8f\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5462\u200b\uff1f    \u200b\u4ecd\u7136\u200b\u662f\u4ece\u200b\u53f3\u4e0a\u89d2\u200b\u6216\u200b\u5de6\u4e0b\u89d2\u200b\u5207\u5165\u200b</li> </ol> <p>\u3010\u200b\u603b\u7ed3\u200b\u3011\u200b\u8bef\u200b</p> <ol> <li>\u200b\u77e9\u9635\u200b\u6709\u5e8f\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u53f3\u4e0a\u89d2\u200b\u6216\u200b\u5de6\u4e0b\u89d2\u200b\u5f00\u59cb\u200b\u5207\u5165\u200b\u3002</li> </ol> <p>\u3010\u200b\u53cd\u601d\u200b\u3011</p> <ol> <li>\u200b\u5145\u5206\u5229\u7528\u200b\u4e8c\u5206\u6cd5\u200b!</li> <li>\u200b\u5176\u5b9e\u200b\u4ece\u200b\u54ea\u4e2a\u200b\u89d2\u5ea6\u200b\u5207\u5165\u200b\u90fd\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5ea6\u200b\u90fd\u200b\u4e00\u6837\u200b\uff0c\u200b\u8981\u200b\u5feb\u200b\u8fd8\u662f\u200b\u4e8c\u5206\u6cd5\u200b\uff01</li> </ol>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/March_2021/#31-ii","title":"31 \u200b\u5b50\u96c6\u200b II","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/","title":"September_2021","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#678","title":"678. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u81ea\u5df1\u200b\u7684\u200b\u601d\u8def\u200b\u662f\u200b\u7528\u200b\u6808\u200b\uff0c\u200b\u540e\u6765\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u5927\u4f6c\u200b\uff0c\u200b\u5c5e\u5b9e\u200b\u819c\u62dc\u200b\u3002</p> <p>\u3010Ryugamine\u3011</p> <p>\u200b\u5bf9\u200b\u6211\u200b\u800c\u8a00\u200b\uff0c\u200b\u5173\u952e\u5728\u4e8e\u200b\u201c\u200b\u4e0b\u9650\u200b\u201d\u200b\u7684\u200b\u7406\u89e3\u200b\u548c\u200b\u6c42\u89e3\u200b\u3002</p> <p>\u200b\u503c\u5f97\u200b\u5b66\u4e60\u200b</p> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p> <p>\u3010\u200b\u5bab\u6c34\u200b\u4e09\u53f6\u200b\u3011</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#447","title":"447. \u200b\u56de\u65cb\u200b\u9556\u200b\u7684\u200b\u6570\u91cf","text":"<p>\u3010\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\u503c\u5f97\u200b\u5b66\u4e60\u200b\u3011</p> <p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011</p> <pre><code>class Solution {\npublic:\n\n    int numberOfBoomerangs(vector&lt;vector&lt;int&gt;&gt;&amp; points) {\n        int n = points.size();\n        if (n &lt; 3) return 0;\n        int i, j, x, y,dx,dy;\n        vector&lt;vector&lt;int&gt;&gt; dis2(n);\n\n\n        //\u200b\u5b66\u4e60\u200b\uff1a\u200b\u72ec\u7279\u200b\u7684\u200b\u8ba1\u7b97\u200b\u8ddd\u79bb\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u6bcf\u4e2a\u200b\u70b9\u95f4\u200b\u7684\u200b\u8ddd\u79bb\u200b\n        for (i = 0; i &lt; n; ++i) {\n            x = points[i][0];\n            y = points[i][1];\n            for (j = 0; j &lt; i; ++j) {\n                dx = x - points[j][0];\n                dy = y - points[j][1];\n                dx = dx*dx + dy*dy;\n                dis2[i].emplace_back(dx);\n                dis2[j].emplace_back(dx);\n            }\n        }\n\n        //\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u6392\u5217\u7ec4\u5408\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u4f46\u200b\u53c8\u200b\u6709\u200b\u533a\u522b\u200b\n        //i \u200b\u7528\u4f5c\u200b\u8fd4\u56de\u503c\u200b\uff1bdis2[i]\u200b\u7684\u200b\u5927\u5c0f\u200b\u4e3a\u200bn-1\uff0c\u200b\u6700\u5927\u200b\u79e9\u4e3a\u200bn-2,x\u200b\u7528\u6765\u200b\u8ba1\u6570\u200b\n        i = 0;\n        y = n - 2;\n        for (auto &amp;v : dis2) {\n            sort(v.begin(), v.end());\n            x = 1;\n            for (j = 0; j &lt; y; ++j) {\n                if (v[j] != v[j + 1]) { //\u200b\u8ba1\u7b97\u200b\u76f8\u540c\u200b\u8ddd\u79bb\u200b\u7684\u200b\u70b9\u200b\u7684\u200b\u6570\u91cf\u200b\n                    i += (x - 1)*x;\n                    x = 1;\n                }\n                else {\n                    ++x;\n                }\n            }\n            i += (x - 1)*x;\n        }\n        return i;\n    }\n\n};\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#524","title":"524. \u200b\u901a\u8fc7\u200b\u5220\u9664\u200b\u5b57\u6bcd\u200b\u5339\u914d\u200b\u5230\u200b\u5b57\u5178\u200b\u91cc\u200b\u6700\u957f\u200b\u5355\u8bcd","text":"<p>\u3010\u200b\u5b98\u65b9\u200b\u9898\u89e3\u200b\u3011 \u200b\u9700\u8981\u200b\u5b66\u4e60\u200b\uff1a\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b</p> <p></p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/leetcode_notes/September_2021/#162","title":"162. \u200b\u5bfb\u627e\u200b\u5cf0\u503c","text":"<p>\u3010\u200b\u5bab\u6c34\u200b\u4e09\u53f6\u200b\u306e\u200b\u76f8\u4fe1\u200b\u79d1\u5b66\u200b\u7cfb\u5217\u200b\u3011\u200b\u5173\u4e8e\u200b\u80fd\u591f\u200b\u300c\u200b\u4e8c\u5206\u200b\u300d\u200b\u7684\u200b\u4e24\u70b9\u200b\u8bc1\u660e\u200b</p> <p>\u200b\u503c\u5f97\u200b\u5b66\u4e60\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5de7\u5999\u200b\u5229\u7528\u200b\u4e86\u200b\u6574\u578b\u200b\u6570\u636e\u200b\u9664\u6cd5\u200b(\u200b\u800c\u4e14\u200b\u5de7\u7528\u200b\u79fb\u4f4d\u200b\u8fd0\u7b97\u200b)\u200b\u5411\u4e0b\u200b\u53d6\u6574\u200b\u7684\u200b\u7279\u6027\u200b\u3002</p> <p>\u200b\u4f5c\u8005\u200b\u7684\u200b\u5176\u4ed6\u200b\u5b66\u4e60\u200b\u653b\u7565\u200b</p> <p>33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b </p> <pre><code>class Solution {\n    public int findPeakElement(int[] nums) {\n        int n = nums.length;\n        int l = 0, r = n - 1;\n        while (l &lt; r) {\n            int mid = l + r &gt;&gt; 1;\n            if (nums[mid] &gt; nums[mid + 1]) r = mid;\n            else l = mid + 1;\n        }\n        return r;\n    }\n}\n\n\u200b\u4f5c\u8005\u200b\uff1aAC_OIer\n\u200b\u94fe\u63a5\u200b\uff1ahttps://leetcode-cn.com/problems/find-peak-element/solution/gong-shui-san-xie-noxiang-xin-ke-xue-xi-qva7v/\n\u200b\u6765\u6e90\u200b\uff1a\u200b\u529b\u6263\u200b\uff08LeetCode\uff09\n\u200b\u8457\u4f5c\u6743\u200b\u5f52\u200b\u4f5c\u8005\u200b\u6240\u6709\u200b\u3002\u200b\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u8054\u7cfb\u200b\u4f5c\u8005\u200b\u83b7\u5f97\u200b\u6388\u6743\u200b\uff0c\u200b\u975e\u5546\u4e1a\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002\n</code></pre>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/quantization/VecQ/","title":"VecQ \u200b\u5411\u200b\u91cf\u5316\u200b\u53c2\u6570\u200b\u91cf\u5316\u200b\u65b9\u6cd5","text":"<p>VecQ: Minimal Loss DNN Model Compression With Vectorized Weight Quantization. Cheng Gong, Yao Chen, Ye Lu, Tao Li, Cong Hao, Deming Chen, Fellow, IEEE</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/quantization/VecQ/#_1","title":"\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u6982\u8ff0","text":""},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/quantization/VecQ/#_2","title":"\u4e3a\u4ec0\u4e48\u200b\u5411\u200b\u91cf\u5316","text":"<p>\u200b\u4f20\u7edf\u200b\u7684\u200b\u91cf\u5316\u200b\u65b9\u6cd5\u200b\u57fa\u672c\u200b\u90fd\u200b\u91c7\u7528\u200bL2 loss\u200b\u6765\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b\u91cf\u5316\u200b\u6700\u4f18\u200b\u53c2\u6570\u200b\uff0c\u200b\u800c\u200b\u5176\u200b\u867d\u7136\u200b\u6548\u679c\u200b\u5c1a\u53ef\u200b\uff0c\u200b\u4f46\u200b\u4efb\u7136\u200b\u5b58\u5728\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\u3002  \u200b\u5982\u4e0a\u56fe\u200b\u56fe\u200b(b)\u200b\u6240\u793a\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5728\u200bk\u200b\u4f4d\u200b\u7ea6\u675f\u200b\u4e0b\u200b\u4f18\u5316\u200bL2 loss\u200b\u7684\u200b\u975e\u51f8\u200b\u7279\u6027\u200b\uff0c\u200b\u91c7\u7528\u200bL2 loss\u200b\u8fed\u4ee3\u200b\u65b9\u6cd5\u200b\u627e\u5230\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b\u7ea2\u70b9\u200b\uff0c\u200b\u867d\u7136\u200b\u662f\u200b\u6781\u503c\u200b\u70b9\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6700\u4f18\u200b\u89e3\u200b\uff1b\u200b\u800c\u200b\u91c7\u7528\u200b\u5411\u200b\u91cf\u5316\u200b\u635f\u5931\u200b\u6c42\u89e3\u200b\uff0c\u200b\u6070\u597d\u200b\u80fd\u200b\u89e3\u51b3\u200b\u4e0a\u8ff0\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/quantization/VecQ/#_3","title":"\u4f55\u4e3a\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316","text":"<p>\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u65b9\u6cd5\u200b\u5c31\u662f\u200b\u5c06\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u67d0\u5c42\u200b\u6216\u200b\u67d0\u200b\u901a\u9053\u200b\u7684\u200b\u6743\u91cd\u200b\u53c2\u6570\u200b\u91cf\u5316\u200b\u540e\u200b\u7684\u200b\u635f\u5931\u200b\u62c6\u200b\u5206\u4e3a\u200b\u65b9\u5411\u200b\u635f\u5931\u200bJo\u200b\u4e0e\u6a21\u200b\u635f\u5931\u200bJm\uff0c\u200b\u6839\u636e\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u635f\u5931\u200b\uff08\u200b\u800c\u200b\u975e\u200bL2\u200b\u635f\u5931\u200b\uff09\u200b\u6765\u200b\u8c03\u6574\u200b\u91cf\u5316\u200b\u53c2\u6570\u200b\u8fdb\u800c\u200b\u5b9e\u73b0\u200b\u6a21\u578b\u200b\u91cf\u5316\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u5728\u200b\u8bba\u6587\u200b\u4e2d\u200b\uff0c\u200b\u4f5c\u8005\u200b\u7ed9\u51fa\u200b\u4e86\u200bJo\u200b\u4e0e\u200bJm\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5c06\u200b\u4e8c\u8005\u200b\u4e4b\u200b\u548c\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5411\u200b\u91cf\u5316\u200b\u635f\u5931\u200bJv\u3002  \u200b\u5728\u200b\u5206\u6790\u200b\u8868\u8fbe\u5f0f\u200b\u4e4b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0cJo\u200b\u4e0e\u200bJm\u200b\u7684\u200b\u4f18\u5316\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8fd9\u624d\u200b\u6709\u200b\u4e86\u200b\u540e\u7eed\u200b\u7684\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"%E4%B8%BA%E6%88%91%E6%89%80%E5%AD%A6/quantization/VecQ/#_4","title":"\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u6d41\u7a0b","text":"<p>\u200b\u7406\u8bba\u200b\u5206\u6790\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f5c\u8005\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5411\u200b\u91cf\u5316\u200b\u91cf\u5316\u200b\u65b9\u6848\u200b\uff0c\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\u3002  \u200b\u5176\u4e2d\u200b\uff0cSteering\u200b\u4ee3\u8868\u200b\u6700\u5c0f\u5316\u200b\u65b9\u5411\u200b\u635f\u5931\u200b\uff0cDriving\u200b\u4ee3\u8868\u200b\u6700\u5c0f\u5316\u200b\u6a21\u200b\u635f\u5931\u200b\u3002</p> <p>\u200b\u5173\u4e8e\u200bSteering\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6709\u200b\uff1a </p> <p>\u200b\u5173\u4e8e\u200bDriving\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6709\u200b: </p>"},{"location":"%E5%A6%82%E6%88%91%E6%89%80%E8%A7%81/mkdocs_pro%26slove/","title":"mkdocs \u200b\u6240\u89c1\u200b\u6240\u89e3","text":""},{"location":"%E5%A6%82%E6%88%91%E6%89%80%E8%A7%81/mkdocs_pro%26slove/#mkdocsyml-nav-section","title":"mkdocs.yml --- nav section\u200b\u5d4c\u5957","text":"<p>\u200b\u5931\u8d25\u200b\u7684\u200bsection\u200b\u5d4c\u5957\u200b</p> <p>nav:</p> <pre><code>- section:\n\n    - index.md\n\n    - sub_section:\n\n        - section/sub_section/index.md\n\n        - section/sub_section/part_1.md\n\n        - section/sub_section/part_2.md\n</code></pre> <p>\u200b\u6b63\u786e\u200b\u7684\u200bsection\u200b\u5d4c\u5957\u200b</p> <p>nav:</p> <pre><code>- section:\n\n    - index.md\n\n    - sub_section:\n\n        - section/sub_section/index.md\n\n        - part_1: section/sub_section/part_1.md\n\n        - part_2: section/sub_section/part_2.md\n</code></pre> <p>\u200b\u95ee\u9898\u200b\uff1a\u200b\u7f3a\u5c11\u200b\u4e86\u200bpart\u200b\u90e8\u5206\u200b\u7684\u200b\u547d\u540d\u200b\u3002</p>"},{"location":"%E5%A6%82%E6%88%91%E6%89%80%E8%A7%81/mkdocs_pro%26slove/#_1","title":"\u7ad9\u200b\u5185\u200b\u8df3\u8f6c\u200b\u94fe\u63a5","text":"<p>\u200b\u63a8\u8350\u200b\u7528\u200b\u76f8\u5bf9\u8def\u5f84\u200b\uff0c\u200b\u8def\u5f84\u200b\u6700\u540e\u200b\u4e0d\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u6587\u4ef6\u200b\u540e\u7f00\u200b\u3002 \u200b\u6bd4\u5982\u200b<code>[\u200b\u8df3\u8f6c\u200b](./section/sub_section/part_1)</code>\u3002</p>"}]}